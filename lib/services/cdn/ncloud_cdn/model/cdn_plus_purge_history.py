# coding: utf-8

"""
    cdn

    OpenAPI spec version: 2018-06-21T02:27:10Z
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from ncloud_cdn.model.cdn_plus_service_domain import CdnPlusServiceDomain  # noqa: F401,E501


class CdnPlusPurgeHistory(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'cdn_instance_no': 'str',
        'purge_id': 'str',
        'is_whole_purge': 'bool',
        'is_whole_domain': 'bool',
        'cdn_plus_service_domain_list': 'list[CdnPlusServiceDomain]',
        'target_directory_name': 'str',
        'target_file_list': 'list[str]',
        'request_date': 'str',
        'purge_status_name': 'str'
    }

    attribute_map = {
        'cdn_instance_no': 'cdnInstanceNo',
        'purge_id': 'purgeId',
        'is_whole_purge': 'isWholePurge',
        'is_whole_domain': 'isWholeDomain',
        'cdn_plus_service_domain_list': 'cdnPlusServiceDomainList',
        'target_directory_name': 'targetDirectoryName',
        'target_file_list': 'targetFileList',
        'request_date': 'requestDate',
        'purge_status_name': 'purgeStatusName'
    }

    def __init__(self, cdn_instance_no=None, purge_id=None, is_whole_purge=None, is_whole_domain=None, cdn_plus_service_domain_list=None, target_directory_name=None, target_file_list=None, request_date=None, purge_status_name=None):  # noqa: E501
        """CdnPlusPurgeHistory - a model defined in Swagger"""  # noqa: E501

        self._cdn_instance_no = None
        self._purge_id = None
        self._is_whole_purge = None
        self._is_whole_domain = None
        self._cdn_plus_service_domain_list = None
        self._target_directory_name = None
        self._target_file_list = None
        self._request_date = None
        self._purge_status_name = None
        self.discriminator = None

        if cdn_instance_no is not None:
            self.cdn_instance_no = cdn_instance_no
        if purge_id is not None:
            self.purge_id = purge_id
        if is_whole_purge is not None:
            self.is_whole_purge = is_whole_purge
        if is_whole_domain is not None:
            self.is_whole_domain = is_whole_domain
        if cdn_plus_service_domain_list is not None:
            self.cdn_plus_service_domain_list = cdn_plus_service_domain_list
        if target_directory_name is not None:
            self.target_directory_name = target_directory_name
        if target_file_list is not None:
            self.target_file_list = target_file_list
        if request_date is not None:
            self.request_date = request_date
        if purge_status_name is not None:
            self.purge_status_name = purge_status_name

    @property
    def cdn_instance_no(self):
        """Gets the cdn_instance_no of this CdnPlusPurgeHistory.  # noqa: E501

        CDN인스턴스번호  # noqa: E501

        :return: The cdn_instance_no of this CdnPlusPurgeHistory.  # noqa: E501
        :rtype: str
        """
        return self._cdn_instance_no

    @cdn_instance_no.setter
    def cdn_instance_no(self, cdn_instance_no):
        """Sets the cdn_instance_no of this CdnPlusPurgeHistory.

        CDN인스턴스번호  # noqa: E501

        :param cdn_instance_no: The cdn_instance_no of this CdnPlusPurgeHistory.  # noqa: E501
        :type: str
        """

        self._cdn_instance_no = cdn_instance_no

    @property
    def purge_id(self):
        """Gets the purge_id of this CdnPlusPurgeHistory.  # noqa: E501

        퍼지ID  # noqa: E501

        :return: The purge_id of this CdnPlusPurgeHistory.  # noqa: E501
        :rtype: str
        """
        return self._purge_id

    @purge_id.setter
    def purge_id(self, purge_id):
        """Sets the purge_id of this CdnPlusPurgeHistory.

        퍼지ID  # noqa: E501

        :param purge_id: The purge_id of this CdnPlusPurgeHistory.  # noqa: E501
        :type: str
        """

        self._purge_id = purge_id

    @property
    def is_whole_purge(self):
        """Gets the is_whole_purge of this CdnPlusPurgeHistory.  # noqa: E501

        전체퍼지여부  # noqa: E501

        :return: The is_whole_purge of this CdnPlusPurgeHistory.  # noqa: E501
        :rtype: bool
        """
        return self._is_whole_purge

    @is_whole_purge.setter
    def is_whole_purge(self, is_whole_purge):
        """Sets the is_whole_purge of this CdnPlusPurgeHistory.

        전체퍼지여부  # noqa: E501

        :param is_whole_purge: The is_whole_purge of this CdnPlusPurgeHistory.  # noqa: E501
        :type: bool
        """

        self._is_whole_purge = is_whole_purge

    @property
    def is_whole_domain(self):
        """Gets the is_whole_domain of this CdnPlusPurgeHistory.  # noqa: E501

        전체도메인퍼지여부  # noqa: E501

        :return: The is_whole_domain of this CdnPlusPurgeHistory.  # noqa: E501
        :rtype: bool
        """
        return self._is_whole_domain

    @is_whole_domain.setter
    def is_whole_domain(self, is_whole_domain):
        """Sets the is_whole_domain of this CdnPlusPurgeHistory.

        전체도메인퍼지여부  # noqa: E501

        :param is_whole_domain: The is_whole_domain of this CdnPlusPurgeHistory.  # noqa: E501
        :type: bool
        """

        self._is_whole_domain = is_whole_domain

    @property
    def cdn_plus_service_domain_list(self):
        """Gets the cdn_plus_service_domain_list of this CdnPlusPurgeHistory.  # noqa: E501

        CDN+서비스도메인리스트  # noqa: E501

        :return: The cdn_plus_service_domain_list of this CdnPlusPurgeHistory.  # noqa: E501
        :rtype: list[CdnPlusServiceDomain]
        """
        return self._cdn_plus_service_domain_list

    @cdn_plus_service_domain_list.setter
    def cdn_plus_service_domain_list(self, cdn_plus_service_domain_list):
        """Sets the cdn_plus_service_domain_list of this CdnPlusPurgeHistory.

        CDN+서비스도메인리스트  # noqa: E501

        :param cdn_plus_service_domain_list: The cdn_plus_service_domain_list of this CdnPlusPurgeHistory.  # noqa: E501
        :type: list[CdnPlusServiceDomain]
        """

        self._cdn_plus_service_domain_list = cdn_plus_service_domain_list

    @property
    def target_directory_name(self):
        """Gets the target_directory_name of this CdnPlusPurgeHistory.  # noqa: E501

        대상디렉토리명  # noqa: E501

        :return: The target_directory_name of this CdnPlusPurgeHistory.  # noqa: E501
        :rtype: str
        """
        return self._target_directory_name

    @target_directory_name.setter
    def target_directory_name(self, target_directory_name):
        """Sets the target_directory_name of this CdnPlusPurgeHistory.

        대상디렉토리명  # noqa: E501

        :param target_directory_name: The target_directory_name of this CdnPlusPurgeHistory.  # noqa: E501
        :type: str
        """

        self._target_directory_name = target_directory_name

    @property
    def target_file_list(self):
        """Gets the target_file_list of this CdnPlusPurgeHistory.  # noqa: E501

        타겟파일리스트  # noqa: E501

        :return: The target_file_list of this CdnPlusPurgeHistory.  # noqa: E501
        :rtype: list[str]
        """
        return self._target_file_list

    @target_file_list.setter
    def target_file_list(self, target_file_list):
        """Sets the target_file_list of this CdnPlusPurgeHistory.

        타겟파일리스트  # noqa: E501

        :param target_file_list: The target_file_list of this CdnPlusPurgeHistory.  # noqa: E501
        :type: list[str]
        """

        self._target_file_list = target_file_list

    @property
    def request_date(self):
        """Gets the request_date of this CdnPlusPurgeHistory.  # noqa: E501

        요청날짜  # noqa: E501

        :return: The request_date of this CdnPlusPurgeHistory.  # noqa: E501
        :rtype: str
        """
        return self._request_date

    @request_date.setter
    def request_date(self, request_date):
        """Sets the request_date of this CdnPlusPurgeHistory.

        요청날짜  # noqa: E501

        :param request_date: The request_date of this CdnPlusPurgeHistory.  # noqa: E501
        :type: str
        """

        self._request_date = request_date

    @property
    def purge_status_name(self):
        """Gets the purge_status_name of this CdnPlusPurgeHistory.  # noqa: E501

        퍼지상태  # noqa: E501

        :return: The purge_status_name of this CdnPlusPurgeHistory.  # noqa: E501
        :rtype: str
        """
        return self._purge_status_name

    @purge_status_name.setter
    def purge_status_name(self, purge_status_name):
        """Sets the purge_status_name of this CdnPlusPurgeHistory.

        퍼지상태  # noqa: E501

        :param purge_status_name: The purge_status_name of this CdnPlusPurgeHistory.  # noqa: E501
        :type: str
        """

        self._purge_status_name = purge_status_name

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CdnPlusPurgeHistory):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
