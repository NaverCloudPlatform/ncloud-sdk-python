# coding: utf-8

"""
    autoscaling

    OpenAPI spec version: 2018-06-21T02:22:22Z
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import unittest

import ncloud_autoscaling
from ncloud_autoscaling.api.v2_api import V2Api  # noqa: E501
from ncloud_autoscaling.rest import ApiException


class TestV2Api(unittest.TestCase):
    """V2Api unit test stubs"""

    def setUp(self):
        configuration = ncloud_autoscaling.Configuration()
        configuration.access_key = "YOUR ACCESS KEY"
        configuration.secret_key = "YOUR SECRET KEY"
        self.api = ncloud_autoscaling.api.v2_api.V2Api(ncloud_autoscaling.ApiClient(configuration))  # noqa: E501

    def tearDown(self):
        pass

    def test_create_auto_scaling_group(self):
        """Test case for create_auto_scaling_group
        create_auto_scaling_group_request = ncloud_autoscaling.CreateAutoScalingGroupRequest()
        try:
            api_response = self.api.create_auto_scaling_group(create_auto_scaling_group_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->create_auto_scaling_group: %s\n" % e)
        """
        pass

    def test_create_launch_configuration(self):
        """Test case for create_launch_configuration
        create_launch_configuration_request = ncloud_autoscaling.CreateLaunchConfigurationRequest()
        try:
            api_response = self.api.create_launch_configuration(create_launch_configuration_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->create_launch_configuration: %s\n" % e)
        """
        pass

    def test_delete_auto_scaling_group(self):
        """Test case for delete_auto_scaling_group
        delete_auto_scaling_group_request = ncloud_autoscaling.DeleteAutoScalingGroupRequest()
        try:
            api_response = self.api.delete_auto_scaling_group(delete_auto_scaling_group_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->delete_auto_scaling_group: %s\n" % e)
        """
        pass

    def test_delete_auto_scaling_launch_configuration(self):
        """Test case for delete_auto_scaling_launch_configuration
        delete_auto_scaling_launch_configuration_request = ncloud_autoscaling.DeleteAutoScalingLaunchConfigurationRequest()
        try:
            api_response = self.api.delete_auto_scaling_launch_configuration(delete_auto_scaling_launch_configuration_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->delete_auto_scaling_launch_configuration: %s\n" % e)
        """
        pass

    def test_delete_policy(self):
        """Test case for delete_policy
        delete_policy_request = ncloud_autoscaling.DeletePolicyRequest()
        try:
            api_response = self.api.delete_policy(delete_policy_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->delete_policy: %s\n" % e)
        """
        pass

    def test_delete_scheduled_action(self):
        """Test case for delete_scheduled_action
        delete_scheduled_action_request = ncloud_autoscaling.DeleteScheduledActionRequest()
        try:
            api_response = self.api.delete_scheduled_action(delete_scheduled_action_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->delete_scheduled_action: %s\n" % e)
        """
        pass

    def test_execute_policy(self):
        """Test case for execute_policy
        execute_policy_request = ncloud_autoscaling.ExecutePolicyRequest()
        try:
            api_response = self.api.execute_policy(execute_policy_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->execute_policy: %s\n" % e)
        """
        pass

    def test_get_adjustment_type_list(self):
        """Test case for get_adjustment_type_list
        get_adjustment_type_list_request = ncloud_autoscaling.GetAdjustmentTypeListRequest()
        try:
            api_response = self.api.get_adjustment_type_list(get_adjustment_type_list_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_adjustment_type_list: %s\n" % e)
        """
        pass

    def test_get_auto_scaling_activity_log_list(self):
        """Test case for get_auto_scaling_activity_log_list
        get_auto_scaling_activity_log_list_request = ncloud_autoscaling.GetAutoScalingActivityLogListRequest()
        try:
            api_response = self.api.get_auto_scaling_activity_log_list(get_auto_scaling_activity_log_list_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_auto_scaling_activity_log_list: %s\n" % e)
        """
        pass

    def test_get_auto_scaling_configuration_log_list(self):
        """Test case for get_auto_scaling_configuration_log_list
        get_auto_scaling_configuration_log_list_request = ncloud_autoscaling.GetAutoScalingConfigurationLogListRequest()
        try:
            api_response = self.api.get_auto_scaling_configuration_log_list(get_auto_scaling_configuration_log_list_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_auto_scaling_configuration_log_list: %s\n" % e)
        """
        pass

    def test_get_auto_scaling_group_list(self):
        """Test case for get_auto_scaling_group_list
        get_auto_scaling_group_list_request = ncloud_autoscaling.GetAutoScalingGroupListRequest()
        try:
            api_response = self.api.get_auto_scaling_group_list(get_auto_scaling_group_list_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_auto_scaling_group_list: %s\n" % e)
        """
        pass

    def test_get_auto_scaling_policy_list(self):
        """Test case for get_auto_scaling_policy_list
        get_auto_scaling_policy_list_request = ncloud_autoscaling.GetAutoScalingPolicyListRequest()
        try:
            api_response = self.api.get_auto_scaling_policy_list(get_auto_scaling_policy_list_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_auto_scaling_policy_list: %s\n" % e)
        """
        pass

    def test_get_launch_configuration_list(self):
        """Test case for get_launch_configuration_list
        get_launch_configuration_list_request = ncloud_autoscaling.GetLaunchConfigurationListRequest()
        try:
            api_response = self.api.get_launch_configuration_list(get_launch_configuration_list_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_launch_configuration_list: %s\n" % e)
        """
        pass

    def test_get_scaling_process_type_list(self):
        """Test case for get_scaling_process_type_list
        get_scaling_process_type_list_request = ncloud_autoscaling.GetScalingProcessTypeListRequest()
        try:
            api_response = self.api.get_scaling_process_type_list(get_scaling_process_type_list_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_scaling_process_type_list: %s\n" % e)
        """
        pass

    def test_get_scheduled_action_list(self):
        """Test case for get_scheduled_action_list
        get_scheduled_action_list_request = ncloud_autoscaling.GetScheduledActionListRequest()
        try:
            api_response = self.api.get_scheduled_action_list(get_scheduled_action_list_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_scheduled_action_list: %s\n" % e)
        """
        pass

    def test_put_scaling_policy(self):
        """Test case for put_scaling_policy
        put_scaling_policy_request = ncloud_autoscaling.PutScalingPolicyRequest()
        try:
            api_response = self.api.put_scaling_policy(put_scaling_policy_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->put_scaling_policy: %s\n" % e)
        """
        pass

    def test_put_scheduled_update_group_action(self):
        """Test case for put_scheduled_update_group_action
        put_scheduled_update_group_action_request = ncloud_autoscaling.PutScheduledUpdateGroupActionRequest()
        try:
            api_response = self.api.put_scheduled_update_group_action(put_scheduled_update_group_action_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->put_scheduled_update_group_action: %s\n" % e)
        """
        pass

    def test_resume_processes(self):
        """Test case for resume_processes
        resume_processes_request = ncloud_autoscaling.ResumeProcessesRequest()
        try:
            api_response = self.api.resume_processes(resume_processes_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->resume_processes: %s\n" % e)
        """
        pass

    def test_set_desired_capacity(self):
        """Test case for set_desired_capacity
        set_desired_capacity_request = ncloud_autoscaling.SetDesiredCapacityRequest()
        try:
            api_response = self.api.set_desired_capacity(set_desired_capacity_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->set_desired_capacity: %s\n" % e)
        """
        pass

    def test_set_server_instance_health(self):
        """Test case for set_server_instance_health
        set_server_instance_health_request = ncloud_autoscaling.SetServerInstanceHealthRequest()
        try:
            api_response = self.api.set_server_instance_health(set_server_instance_health_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->set_server_instance_health: %s\n" % e)
        """
        pass

    def test_suspend_processes(self):
        """Test case for suspend_processes
        suspend_processes_request = ncloud_autoscaling.SuspendProcessesRequest()
        try:
            api_response = self.api.suspend_processes(suspend_processes_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->suspend_processes: %s\n" % e)
        """
        pass

    def test_terminate_server_instance_in_auto_scaling_group(self):
        """Test case for terminate_server_instance_in_auto_scaling_group
        terminate_server_instance_in_auto_scaling_group_request = ncloud_autoscaling.TerminateServerInstanceInAutoScalingGroupRequest()
        try:
            api_response = self.api.terminate_server_instance_in_auto_scaling_group(terminate_server_instance_in_auto_scaling_group_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->terminate_server_instance_in_auto_scaling_group: %s\n" % e)
        """
        pass

    def test_update_auto_scaling_group(self):
        """Test case for update_auto_scaling_group
        update_auto_scaling_group_request = ncloud_autoscaling.UpdateAutoScalingGroupRequest()
        try:
            api_response = self.api.update_auto_scaling_group(update_auto_scaling_group_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->update_auto_scaling_group: %s\n" % e)
        """
        pass


if __name__ == '__main__':
    unittest.main()
