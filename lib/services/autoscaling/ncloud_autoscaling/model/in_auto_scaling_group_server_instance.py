# coding: utf-8

"""
    autoscaling

    OpenAPI spec version: 2018-06-21T02:22:22Z
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from ncloud_autoscaling.model.common_code import CommonCode  # noqa: F401,E501
from ncloud_autoscaling.model.launch_configuration import LaunchConfiguration  # noqa: F401,E501


class InAutoScalingGroupServerInstance(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'health_status': 'CommonCode',
        'lifecycle_state': 'CommonCode',
        'launch_configuration': 'LaunchConfiguration',
        'server_instance_no': 'str',
        'server_instance_name': 'str'
    }

    attribute_map = {
        'health_status': 'healthStatus',
        'lifecycle_state': 'lifecycleState',
        'launch_configuration': 'launchConfiguration',
        'server_instance_no': 'serverInstanceNo',
        'server_instance_name': 'serverInstanceName'
    }

    def __init__(self, health_status=None, lifecycle_state=None, launch_configuration=None, server_instance_no=None, server_instance_name=None):  # noqa: E501
        """InAutoScalingGroupServerInstance - a model defined in Swagger"""  # noqa: E501

        self._health_status = None
        self._lifecycle_state = None
        self._launch_configuration = None
        self._server_instance_no = None
        self._server_instance_name = None
        self.discriminator = None

        if health_status is not None:
            self.health_status = health_status
        if lifecycle_state is not None:
            self.lifecycle_state = lifecycle_state
        if launch_configuration is not None:
            self.launch_configuration = launch_configuration
        if server_instance_no is not None:
            self.server_instance_no = server_instance_no
        if server_instance_name is not None:
            self.server_instance_name = server_instance_name

    @property
    def health_status(self):
        """Gets the health_status of this InAutoScalingGroupServerInstance.  # noqa: E501

        헬스상태  # noqa: E501

        :return: The health_status of this InAutoScalingGroupServerInstance.  # noqa: E501
        :rtype: CommonCode
        """
        return self._health_status

    @health_status.setter
    def health_status(self, health_status):
        """Sets the health_status of this InAutoScalingGroupServerInstance.

        헬스상태  # noqa: E501

        :param health_status: The health_status of this InAutoScalingGroupServerInstance.  # noqa: E501
        :type: CommonCode
        """

        self._health_status = health_status

    @property
    def lifecycle_state(self):
        """Gets the lifecycle_state of this InAutoScalingGroupServerInstance.  # noqa: E501

        라이프사이클상태  # noqa: E501

        :return: The lifecycle_state of this InAutoScalingGroupServerInstance.  # noqa: E501
        :rtype: CommonCode
        """
        return self._lifecycle_state

    @lifecycle_state.setter
    def lifecycle_state(self, lifecycle_state):
        """Sets the lifecycle_state of this InAutoScalingGroupServerInstance.

        라이프사이클상태  # noqa: E501

        :param lifecycle_state: The lifecycle_state of this InAutoScalingGroupServerInstance.  # noqa: E501
        :type: CommonCode
        """

        self._lifecycle_state = lifecycle_state

    @property
    def launch_configuration(self):
        """Gets the launch_configuration of this InAutoScalingGroupServerInstance.  # noqa: E501

        론치설정  # noqa: E501

        :return: The launch_configuration of this InAutoScalingGroupServerInstance.  # noqa: E501
        :rtype: LaunchConfiguration
        """
        return self._launch_configuration

    @launch_configuration.setter
    def launch_configuration(self, launch_configuration):
        """Sets the launch_configuration of this InAutoScalingGroupServerInstance.

        론치설정  # noqa: E501

        :param launch_configuration: The launch_configuration of this InAutoScalingGroupServerInstance.  # noqa: E501
        :type: LaunchConfiguration
        """

        self._launch_configuration = launch_configuration

    @property
    def server_instance_no(self):
        """Gets the server_instance_no of this InAutoScalingGroupServerInstance.  # noqa: E501

        서버인스턴스번호  # noqa: E501

        :return: The server_instance_no of this InAutoScalingGroupServerInstance.  # noqa: E501
        :rtype: str
        """
        return self._server_instance_no

    @server_instance_no.setter
    def server_instance_no(self, server_instance_no):
        """Sets the server_instance_no of this InAutoScalingGroupServerInstance.

        서버인스턴스번호  # noqa: E501

        :param server_instance_no: The server_instance_no of this InAutoScalingGroupServerInstance.  # noqa: E501
        :type: str
        """

        self._server_instance_no = server_instance_no

    @property
    def server_instance_name(self):
        """Gets the server_instance_name of this InAutoScalingGroupServerInstance.  # noqa: E501

        서버인스턴스명  # noqa: E501

        :return: The server_instance_name of this InAutoScalingGroupServerInstance.  # noqa: E501
        :rtype: str
        """
        return self._server_instance_name

    @server_instance_name.setter
    def server_instance_name(self, server_instance_name):
        """Sets the server_instance_name of this InAutoScalingGroupServerInstance.

        서버인스턴스명  # noqa: E501

        :param server_instance_name: The server_instance_name of this InAutoScalingGroupServerInstance.  # noqa: E501
        :type: str
        """

        self._server_instance_name = server_instance_name

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InAutoScalingGroupServerInstance):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
