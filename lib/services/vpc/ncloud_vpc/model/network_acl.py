# coding: utf-8

"""
    vpc

    OpenAPI spec version: 2020-09-17T10:29:55Z
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from ncloud_vpc.model.common_code import CommonCode  # noqa: F401,E501


class NetworkAcl(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'network_acl_no': 'str',
        'network_acl_name': 'str',
        'vpc_no': 'str',
        'network_acl_status': 'CommonCode',
        'network_acl_description': 'str',
        'create_date': 'str',
        'is_default': 'bool'
    }

    attribute_map = {
        'network_acl_no': 'networkAclNo',
        'network_acl_name': 'networkAclName',
        'vpc_no': 'vpcNo',
        'network_acl_status': 'networkAclStatus',
        'network_acl_description': 'networkAclDescription',
        'create_date': 'createDate',
        'is_default': 'isDefault'
    }

    def __init__(self, network_acl_no=None, network_acl_name=None, vpc_no=None, network_acl_status=None, network_acl_description=None, create_date=None, is_default=None):  # noqa: E501
        """NetworkAcl - a model defined in Swagger"""  # noqa: E501

        self._network_acl_no = None
        self._network_acl_name = None
        self._vpc_no = None
        self._network_acl_status = None
        self._network_acl_description = None
        self._create_date = None
        self._is_default = None
        self.discriminator = None

        if network_acl_no is not None:
            self.network_acl_no = network_acl_no
        if network_acl_name is not None:
            self.network_acl_name = network_acl_name
        if vpc_no is not None:
            self.vpc_no = vpc_no
        if network_acl_status is not None:
            self.network_acl_status = network_acl_status
        if network_acl_description is not None:
            self.network_acl_description = network_acl_description
        if create_date is not None:
            self.create_date = create_date
        if is_default is not None:
            self.is_default = is_default

    @property
    def network_acl_no(self):
        """Gets the network_acl_no of this NetworkAcl.  # noqa: E501

        네트워크ACL번호  # noqa: E501

        :return: The network_acl_no of this NetworkAcl.  # noqa: E501
        :rtype: str
        """
        return self._network_acl_no

    @network_acl_no.setter
    def network_acl_no(self, network_acl_no):
        """Sets the network_acl_no of this NetworkAcl.

        네트워크ACL번호  # noqa: E501

        :param network_acl_no: The network_acl_no of this NetworkAcl.  # noqa: E501
        :type: str
        """

        self._network_acl_no = network_acl_no

    @property
    def network_acl_name(self):
        """Gets the network_acl_name of this NetworkAcl.  # noqa: E501

        네트워크ACL이름  # noqa: E501

        :return: The network_acl_name of this NetworkAcl.  # noqa: E501
        :rtype: str
        """
        return self._network_acl_name

    @network_acl_name.setter
    def network_acl_name(self, network_acl_name):
        """Sets the network_acl_name of this NetworkAcl.

        네트워크ACL이름  # noqa: E501

        :param network_acl_name: The network_acl_name of this NetworkAcl.  # noqa: E501
        :type: str
        """

        self._network_acl_name = network_acl_name

    @property
    def vpc_no(self):
        """Gets the vpc_no of this NetworkAcl.  # noqa: E501

        VPC번호  # noqa: E501

        :return: The vpc_no of this NetworkAcl.  # noqa: E501
        :rtype: str
        """
        return self._vpc_no

    @vpc_no.setter
    def vpc_no(self, vpc_no):
        """Sets the vpc_no of this NetworkAcl.

        VPC번호  # noqa: E501

        :param vpc_no: The vpc_no of this NetworkAcl.  # noqa: E501
        :type: str
        """

        self._vpc_no = vpc_no

    @property
    def network_acl_status(self):
        """Gets the network_acl_status of this NetworkAcl.  # noqa: E501

        네트워크ACL상태  # noqa: E501

        :return: The network_acl_status of this NetworkAcl.  # noqa: E501
        :rtype: CommonCode
        """
        return self._network_acl_status

    @network_acl_status.setter
    def network_acl_status(self, network_acl_status):
        """Sets the network_acl_status of this NetworkAcl.

        네트워크ACL상태  # noqa: E501

        :param network_acl_status: The network_acl_status of this NetworkAcl.  # noqa: E501
        :type: CommonCode
        """

        self._network_acl_status = network_acl_status

    @property
    def network_acl_description(self):
        """Gets the network_acl_description of this NetworkAcl.  # noqa: E501

        네트워크ACL설명  # noqa: E501

        :return: The network_acl_description of this NetworkAcl.  # noqa: E501
        :rtype: str
        """
        return self._network_acl_description

    @network_acl_description.setter
    def network_acl_description(self, network_acl_description):
        """Sets the network_acl_description of this NetworkAcl.

        네트워크ACL설명  # noqa: E501

        :param network_acl_description: The network_acl_description of this NetworkAcl.  # noqa: E501
        :type: str
        """

        self._network_acl_description = network_acl_description

    @property
    def create_date(self):
        """Gets the create_date of this NetworkAcl.  # noqa: E501

        생성일시  # noqa: E501

        :return: The create_date of this NetworkAcl.  # noqa: E501
        :rtype: str
        """
        return self._create_date

    @create_date.setter
    def create_date(self, create_date):
        """Sets the create_date of this NetworkAcl.

        생성일시  # noqa: E501

        :param create_date: The create_date of this NetworkAcl.  # noqa: E501
        :type: str
        """

        self._create_date = create_date

    @property
    def is_default(self):
        """Gets the is_default of this NetworkAcl.  # noqa: E501

        Default여부  # noqa: E501

        :return: The is_default of this NetworkAcl.  # noqa: E501
        :rtype: bool
        """
        return self._is_default

    @is_default.setter
    def is_default(self, is_default):
        """Sets the is_default of this NetworkAcl.

        Default여부  # noqa: E501

        :param is_default: The is_default of this NetworkAcl.  # noqa: E501
        :type: bool
        """

        self._is_default = is_default

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, NetworkAcl):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
