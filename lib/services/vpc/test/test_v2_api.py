# coding: utf-8

"""
    vpc

    OpenAPI spec version: 2020-09-17T10:29:55Z
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import unittest

import ncloud_vpc
from ncloud_vpc.api.v2_api import V2Api  # noqa: E501
from ncloud_vpc.rest import ApiException


class TestV2Api(unittest.TestCase):
    """V2Api unit test stubs"""

    def setUp(self):
        configuration = ncloud_vpc.Configuration()
        configuration.access_key = "YOUR ACCESS KEY"
        configuration.secret_key = "YOUR SECRET KEY"
        self.api = ncloud_vpc.api.v2_api.V2Api(ncloud_vpc.ApiClient(configuration))  # noqa: E501

    def tearDown(self):
        pass

    def test_accept_or_reject_vpc_peering(self):
        """Test case for accept_or_reject_vpc_peering
        accept_or_reject_vpc_peering_request = ncloud_vpc.AcceptOrRejectVpcPeeringRequest()
        try:
            api_response = self.api.accept_or_reject_vpc_peering(accept_or_reject_vpc_peering_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->accept_or_reject_vpc_peering: %s\n" % e)
        """
        pass

    def test_add_network_acl_inbound_rule(self):
        """Test case for add_network_acl_inbound_rule
        add_network_acl_inbound_rule_request = ncloud_vpc.AddNetworkAclInboundRuleRequest()
        try:
            api_response = self.api.add_network_acl_inbound_rule(add_network_acl_inbound_rule_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->add_network_acl_inbound_rule: %s\n" % e)
        """
        pass

    def test_add_network_acl_outbound_rule(self):
        """Test case for add_network_acl_outbound_rule
        add_network_acl_outbound_rule_request = ncloud_vpc.AddNetworkAclOutboundRuleRequest()
        try:
            api_response = self.api.add_network_acl_outbound_rule(add_network_acl_outbound_rule_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->add_network_acl_outbound_rule: %s\n" % e)
        """
        pass

    def test_add_route(self):
        """Test case for add_route
        add_route_request = ncloud_vpc.AddRouteRequest()
        try:
            api_response = self.api.add_route(add_route_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->add_route: %s\n" % e)
        """
        pass

    def test_add_route_table_subnet(self):
        """Test case for add_route_table_subnet
        add_route_table_subnet_request = ncloud_vpc.AddRouteTableSubnetRequest()
        try:
            api_response = self.api.add_route_table_subnet(add_route_table_subnet_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->add_route_table_subnet: %s\n" % e)
        """
        pass

    def test_create_nat_gateway_instance(self):
        """Test case for create_nat_gateway_instance
        create_nat_gateway_instance_request = ncloud_vpc.CreateNatGatewayInstanceRequest()
        try:
            api_response = self.api.create_nat_gateway_instance(create_nat_gateway_instance_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->create_nat_gateway_instance: %s\n" % e)
        """
        pass

    def test_create_network_acl(self):
        """Test case for create_network_acl
        create_network_acl_request = ncloud_vpc.CreateNetworkAclRequest()
        try:
            api_response = self.api.create_network_acl(create_network_acl_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->create_network_acl: %s\n" % e)
        """
        pass

    def test_create_route_table(self):
        """Test case for create_route_table
        create_route_table_request = ncloud_vpc.CreateRouteTableRequest()
        try:
            api_response = self.api.create_route_table(create_route_table_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->create_route_table: %s\n" % e)
        """
        pass

    def test_create_subnet(self):
        """Test case for create_subnet
        create_subnet_request = ncloud_vpc.CreateSubnetRequest()
        try:
            api_response = self.api.create_subnet(create_subnet_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->create_subnet: %s\n" % e)
        """
        pass

    def test_create_vpc(self):
        """Test case for create_vpc
        create_vpc_request = ncloud_vpc.CreateVpcRequest()
        try:
            api_response = self.api.create_vpc(create_vpc_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->create_vpc: %s\n" % e)
        """
        pass

    def test_create_vpc_peering_instance(self):
        """Test case for create_vpc_peering_instance
        create_vpc_peering_instance_request = ncloud_vpc.CreateVpcPeeringInstanceRequest()
        try:
            api_response = self.api.create_vpc_peering_instance(create_vpc_peering_instance_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->create_vpc_peering_instance: %s\n" % e)
        """
        pass

    def test_delete_nat_gateway_instance(self):
        """Test case for delete_nat_gateway_instance
        delete_nat_gateway_instance_request = ncloud_vpc.DeleteNatGatewayInstanceRequest()
        try:
            api_response = self.api.delete_nat_gateway_instance(delete_nat_gateway_instance_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->delete_nat_gateway_instance: %s\n" % e)
        """
        pass

    def test_delete_network_acl(self):
        """Test case for delete_network_acl
        delete_network_acl_request = ncloud_vpc.DeleteNetworkAclRequest()
        try:
            api_response = self.api.delete_network_acl(delete_network_acl_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->delete_network_acl: %s\n" % e)
        """
        pass

    def test_delete_route_table(self):
        """Test case for delete_route_table
        delete_route_table_request = ncloud_vpc.DeleteRouteTableRequest()
        try:
            api_response = self.api.delete_route_table(delete_route_table_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->delete_route_table: %s\n" % e)
        """
        pass

    def test_delete_subnet(self):
        """Test case for delete_subnet
        delete_subnet_request = ncloud_vpc.DeleteSubnetRequest()
        try:
            api_response = self.api.delete_subnet(delete_subnet_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->delete_subnet: %s\n" % e)
        """
        pass

    def test_delete_vpc(self):
        """Test case for delete_vpc
        delete_vpc_request = ncloud_vpc.DeleteVpcRequest()
        try:
            api_response = self.api.delete_vpc(delete_vpc_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->delete_vpc: %s\n" % e)
        """
        pass

    def test_delete_vpc_peering_instance(self):
        """Test case for delete_vpc_peering_instance
        delete_vpc_peering_instance_request = ncloud_vpc.DeleteVpcPeeringInstanceRequest()
        try:
            api_response = self.api.delete_vpc_peering_instance(delete_vpc_peering_instance_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->delete_vpc_peering_instance: %s\n" % e)
        """
        pass

    def test_get_nat_gateway_instance_detail(self):
        """Test case for get_nat_gateway_instance_detail
        get_nat_gateway_instance_detail_request = ncloud_vpc.GetNatGatewayInstanceDetailRequest()
        try:
            api_response = self.api.get_nat_gateway_instance_detail(get_nat_gateway_instance_detail_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_nat_gateway_instance_detail: %s\n" % e)
        """
        pass

    def test_get_nat_gateway_instance_list(self):
        """Test case for get_nat_gateway_instance_list
        get_nat_gateway_instance_list_request = ncloud_vpc.GetNatGatewayInstanceListRequest()
        try:
            api_response = self.api.get_nat_gateway_instance_list(get_nat_gateway_instance_list_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_nat_gateway_instance_list: %s\n" % e)
        """
        pass

    def test_get_network_acl_detail(self):
        """Test case for get_network_acl_detail
        get_network_acl_detail_request = ncloud_vpc.GetNetworkAclDetailRequest()
        try:
            api_response = self.api.get_network_acl_detail(get_network_acl_detail_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_network_acl_detail: %s\n" % e)
        """
        pass

    def test_get_network_acl_list(self):
        """Test case for get_network_acl_list
        get_network_acl_list_request = ncloud_vpc.GetNetworkAclListRequest()
        try:
            api_response = self.api.get_network_acl_list(get_network_acl_list_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_network_acl_list: %s\n" % e)
        """
        pass

    def test_get_network_acl_rule_list(self):
        """Test case for get_network_acl_rule_list
        get_network_acl_rule_list_request = ncloud_vpc.GetNetworkAclRuleListRequest()
        try:
            api_response = self.api.get_network_acl_rule_list(get_network_acl_rule_list_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_network_acl_rule_list: %s\n" % e)
        """
        pass

    def test_get_route_list(self):
        """Test case for get_route_list
        get_route_list_request = ncloud_vpc.GetRouteListRequest()
        try:
            api_response = self.api.get_route_list(get_route_list_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_route_list: %s\n" % e)
        """
        pass

    def test_get_route_table_detail(self):
        """Test case for get_route_table_detail
        get_route_table_detail_request = ncloud_vpc.GetRouteTableDetailRequest()
        try:
            api_response = self.api.get_route_table_detail(get_route_table_detail_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_route_table_detail: %s\n" % e)
        """
        pass

    def test_get_route_table_list(self):
        """Test case for get_route_table_list
        get_route_table_list_request = ncloud_vpc.GetRouteTableListRequest()
        try:
            api_response = self.api.get_route_table_list(get_route_table_list_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_route_table_list: %s\n" % e)
        """
        pass

    def test_get_route_table_subnet_list(self):
        """Test case for get_route_table_subnet_list
        get_route_table_subnet_list_request = ncloud_vpc.GetRouteTableSubnetListRequest()
        try:
            api_response = self.api.get_route_table_subnet_list(get_route_table_subnet_list_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_route_table_subnet_list: %s\n" % e)
        """
        pass

    def test_get_subnet_detail(self):
        """Test case for get_subnet_detail
        get_subnet_detail_request = ncloud_vpc.GetSubnetDetailRequest()
        try:
            api_response = self.api.get_subnet_detail(get_subnet_detail_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_subnet_detail: %s\n" % e)
        """
        pass

    def test_get_subnet_list(self):
        """Test case for get_subnet_list
        get_subnet_list_request = ncloud_vpc.GetSubnetListRequest()
        try:
            api_response = self.api.get_subnet_list(get_subnet_list_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_subnet_list: %s\n" % e)
        """
        pass

    def test_get_vpc_detail(self):
        """Test case for get_vpc_detail
        get_vpc_detail_request = ncloud_vpc.GetVpcDetailRequest()
        try:
            api_response = self.api.get_vpc_detail(get_vpc_detail_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_vpc_detail: %s\n" % e)
        """
        pass

    def test_get_vpc_list(self):
        """Test case for get_vpc_list
        get_vpc_list_request = ncloud_vpc.GetVpcListRequest()
        try:
            api_response = self.api.get_vpc_list(get_vpc_list_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_vpc_list: %s\n" % e)
        """
        pass

    def test_get_vpc_peering_instance_detail(self):
        """Test case for get_vpc_peering_instance_detail
        get_vpc_peering_instance_detail_request = ncloud_vpc.GetVpcPeeringInstanceDetailRequest()
        try:
            api_response = self.api.get_vpc_peering_instance_detail(get_vpc_peering_instance_detail_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_vpc_peering_instance_detail: %s\n" % e)
        """
        pass

    def test_get_vpc_peering_instance_list(self):
        """Test case for get_vpc_peering_instance_list
        get_vpc_peering_instance_list_request = ncloud_vpc.GetVpcPeeringInstanceListRequest()
        try:
            api_response = self.api.get_vpc_peering_instance_list(get_vpc_peering_instance_list_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_vpc_peering_instance_list: %s\n" % e)
        """
        pass

    def test_remove_network_acl_inbound_rule(self):
        """Test case for remove_network_acl_inbound_rule
        remove_network_acl_inbound_rule_request = ncloud_vpc.RemoveNetworkAclInboundRuleRequest()
        try:
            api_response = self.api.remove_network_acl_inbound_rule(remove_network_acl_inbound_rule_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->remove_network_acl_inbound_rule: %s\n" % e)
        """
        pass

    def test_remove_network_acl_outbound_rule(self):
        """Test case for remove_network_acl_outbound_rule
        remove_network_acl_outbound_rule_request = ncloud_vpc.RemoveNetworkAclOutboundRuleRequest()
        try:
            api_response = self.api.remove_network_acl_outbound_rule(remove_network_acl_outbound_rule_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->remove_network_acl_outbound_rule: %s\n" % e)
        """
        pass

    def test_remove_route(self):
        """Test case for remove_route
        remove_route_request = ncloud_vpc.RemoveRouteRequest()
        try:
            api_response = self.api.remove_route(remove_route_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->remove_route: %s\n" % e)
        """
        pass

    def test_remove_route_table_subnet(self):
        """Test case for remove_route_table_subnet
        remove_route_table_subnet_request = ncloud_vpc.RemoveRouteTableSubnetRequest()
        try:
            api_response = self.api.remove_route_table_subnet(remove_route_table_subnet_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->remove_route_table_subnet: %s\n" % e)
        """
        pass

    def test_set_nat_gateway_description(self):
        """Test case for set_nat_gateway_description
        set_nat_gateway_description_request = ncloud_vpc.SetNatGatewayDescriptionRequest()
        try:
            api_response = self.api.set_nat_gateway_description(set_nat_gateway_description_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->set_nat_gateway_description: %s\n" % e)
        """
        pass

    def test_set_network_acl_description(self):
        """Test case for set_network_acl_description
        set_network_acl_description_request = ncloud_vpc.SetNetworkAclDescriptionRequest()
        try:
            api_response = self.api.set_network_acl_description(set_network_acl_description_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->set_network_acl_description: %s\n" % e)
        """
        pass

    def test_set_route_table_description(self):
        """Test case for set_route_table_description
        set_route_table_description_request = ncloud_vpc.SetRouteTableDescriptionRequest()
        try:
            api_response = self.api.set_route_table_description(set_route_table_description_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->set_route_table_description: %s\n" % e)
        """
        pass

    def test_set_subnet_network_acl(self):
        """Test case for set_subnet_network_acl
        set_subnet_network_acl_request = ncloud_vpc.SetSubnetNetworkAclRequest()
        try:
            api_response = self.api.set_subnet_network_acl(set_subnet_network_acl_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->set_subnet_network_acl: %s\n" % e)
        """
        pass

    def test_set_vpc_peering_description(self):
        """Test case for set_vpc_peering_description
        set_vpc_peering_description_request = ncloud_vpc.SetVpcPeeringDescriptionRequest()
        try:
            api_response = self.api.set_vpc_peering_description(set_vpc_peering_description_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->set_vpc_peering_description: %s\n" % e)
        """
        pass


if __name__ == '__main__':
    unittest.main()
