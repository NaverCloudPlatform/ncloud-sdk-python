# coding: utf-8

"""
    server

    OpenAPI spec version: 2018-06-22T02:34:44Z
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from ncloud_server.model.common_code import CommonCode  # noqa: F401,E501


class AccessControlRule(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'access_control_rule_configuration_no': 'str',
        'protocol_type': 'CommonCode',
        'source_ip': 'str',
        'source_access_control_rule_configuration_no': 'str',
        'source_access_control_rule_name': 'str',
        'destination_port': 'str',
        'access_control_rule_description': 'str'
    }

    attribute_map = {
        'access_control_rule_configuration_no': 'accessControlRuleConfigurationNo',
        'protocol_type': 'protocolType',
        'source_ip': 'sourceIp',
        'source_access_control_rule_configuration_no': 'sourceAccessControlRuleConfigurationNo',
        'source_access_control_rule_name': 'sourceAccessControlRuleName',
        'destination_port': 'destinationPort',
        'access_control_rule_description': 'accessControlRuleDescription'
    }

    def __init__(self, access_control_rule_configuration_no=None, protocol_type=None, source_ip=None, source_access_control_rule_configuration_no=None, source_access_control_rule_name=None, destination_port=None, access_control_rule_description=None):  # noqa: E501
        """AccessControlRule - a model defined in Swagger"""  # noqa: E501

        self._access_control_rule_configuration_no = None
        self._protocol_type = None
        self._source_ip = None
        self._source_access_control_rule_configuration_no = None
        self._source_access_control_rule_name = None
        self._destination_port = None
        self._access_control_rule_description = None
        self.discriminator = None

        if access_control_rule_configuration_no is not None:
            self.access_control_rule_configuration_no = access_control_rule_configuration_no
        if protocol_type is not None:
            self.protocol_type = protocol_type
        if source_ip is not None:
            self.source_ip = source_ip
        if source_access_control_rule_configuration_no is not None:
            self.source_access_control_rule_configuration_no = source_access_control_rule_configuration_no
        if source_access_control_rule_name is not None:
            self.source_access_control_rule_name = source_access_control_rule_name
        if destination_port is not None:
            self.destination_port = destination_port
        if access_control_rule_description is not None:
            self.access_control_rule_description = access_control_rule_description

    @property
    def access_control_rule_configuration_no(self):
        """Gets the access_control_rule_configuration_no of this AccessControlRule.  # noqa: E501

        접근제어RULE설정번호  # noqa: E501

        :return: The access_control_rule_configuration_no of this AccessControlRule.  # noqa: E501
        :rtype: str
        """
        return self._access_control_rule_configuration_no

    @access_control_rule_configuration_no.setter
    def access_control_rule_configuration_no(self, access_control_rule_configuration_no):
        """Sets the access_control_rule_configuration_no of this AccessControlRule.

        접근제어RULE설정번호  # noqa: E501

        :param access_control_rule_configuration_no: The access_control_rule_configuration_no of this AccessControlRule.  # noqa: E501
        :type: str
        """

        self._access_control_rule_configuration_no = access_control_rule_configuration_no

    @property
    def protocol_type(self):
        """Gets the protocol_type of this AccessControlRule.  # noqa: E501

        프로토콜구분  # noqa: E501

        :return: The protocol_type of this AccessControlRule.  # noqa: E501
        :rtype: CommonCode
        """
        return self._protocol_type

    @protocol_type.setter
    def protocol_type(self, protocol_type):
        """Sets the protocol_type of this AccessControlRule.

        프로토콜구분  # noqa: E501

        :param protocol_type: The protocol_type of this AccessControlRule.  # noqa: E501
        :type: CommonCode
        """

        self._protocol_type = protocol_type

    @property
    def source_ip(self):
        """Gets the source_ip of this AccessControlRule.  # noqa: E501

        소스IP  # noqa: E501

        :return: The source_ip of this AccessControlRule.  # noqa: E501
        :rtype: str
        """
        return self._source_ip

    @source_ip.setter
    def source_ip(self, source_ip):
        """Sets the source_ip of this AccessControlRule.

        소스IP  # noqa: E501

        :param source_ip: The source_ip of this AccessControlRule.  # noqa: E501
        :type: str
        """

        self._source_ip = source_ip

    @property
    def source_access_control_rule_configuration_no(self):
        """Gets the source_access_control_rule_configuration_no of this AccessControlRule.  # noqa: E501

        소스접근제어그룹번호  # noqa: E501

        :return: The source_access_control_rule_configuration_no of this AccessControlRule.  # noqa: E501
        :rtype: str
        """
        return self._source_access_control_rule_configuration_no

    @source_access_control_rule_configuration_no.setter
    def source_access_control_rule_configuration_no(self, source_access_control_rule_configuration_no):
        """Sets the source_access_control_rule_configuration_no of this AccessControlRule.

        소스접근제어그룹번호  # noqa: E501

        :param source_access_control_rule_configuration_no: The source_access_control_rule_configuration_no of this AccessControlRule.  # noqa: E501
        :type: str
        """

        self._source_access_control_rule_configuration_no = source_access_control_rule_configuration_no

    @property
    def source_access_control_rule_name(self):
        """Gets the source_access_control_rule_name of this AccessControlRule.  # noqa: E501

        소스접근제어그룹이름  # noqa: E501

        :return: The source_access_control_rule_name of this AccessControlRule.  # noqa: E501
        :rtype: str
        """
        return self._source_access_control_rule_name

    @source_access_control_rule_name.setter
    def source_access_control_rule_name(self, source_access_control_rule_name):
        """Sets the source_access_control_rule_name of this AccessControlRule.

        소스접근제어그룹이름  # noqa: E501

        :param source_access_control_rule_name: The source_access_control_rule_name of this AccessControlRule.  # noqa: E501
        :type: str
        """

        self._source_access_control_rule_name = source_access_control_rule_name

    @property
    def destination_port(self):
        """Gets the destination_port of this AccessControlRule.  # noqa: E501

        목적지포트  # noqa: E501

        :return: The destination_port of this AccessControlRule.  # noqa: E501
        :rtype: str
        """
        return self._destination_port

    @destination_port.setter
    def destination_port(self, destination_port):
        """Sets the destination_port of this AccessControlRule.

        목적지포트  # noqa: E501

        :param destination_port: The destination_port of this AccessControlRule.  # noqa: E501
        :type: str
        """

        self._destination_port = destination_port

    @property
    def access_control_rule_description(self):
        """Gets the access_control_rule_description of this AccessControlRule.  # noqa: E501

        접근제어RULE설명  # noqa: E501

        :return: The access_control_rule_description of this AccessControlRule.  # noqa: E501
        :rtype: str
        """
        return self._access_control_rule_description

    @access_control_rule_description.setter
    def access_control_rule_description(self, access_control_rule_description):
        """Sets the access_control_rule_description of this AccessControlRule.

        접근제어RULE설명  # noqa: E501

        :param access_control_rule_description: The access_control_rule_description of this AccessControlRule.  # noqa: E501
        :type: str
        """

        self._access_control_rule_description = access_control_rule_description

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AccessControlRule):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
