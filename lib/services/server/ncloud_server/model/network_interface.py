# coding: utf-8

"""
    server

    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from ncloud_server.model.region import Region  # noqa: F401,E501
from ncloud_server.model.zone import Zone  # noqa: F401,E501


class NetworkInterface(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'network_interface_no': 'str',
        'network_interface_name': 'str',
        'network_interface_ip': 'str',
        'network_interface_description': 'str',
        'server_instance_no': 'str',
        'status_code': 'str',
        'region': 'Region',
        'zone': 'Zone'
    }

    attribute_map = {
        'network_interface_no': 'networkInterfaceNo',
        'network_interface_name': 'networkInterfaceName',
        'network_interface_ip': 'networkInterfaceIp',
        'network_interface_description': 'networkInterfaceDescription',
        'server_instance_no': 'serverInstanceNo',
        'status_code': 'statusCode',
        'region': 'region',
        'zone': 'zone'
    }

    def __init__(self, network_interface_no=None, network_interface_name=None, network_interface_ip=None, network_interface_description=None, server_instance_no=None, status_code=None, region=None, zone=None):  # noqa: E501
        """NetworkInterface - a model defined in Swagger"""  # noqa: E501

        self._network_interface_no = None
        self._network_interface_name = None
        self._network_interface_ip = None
        self._network_interface_description = None
        self._server_instance_no = None
        self._status_code = None
        self._region = None
        self._zone = None
        self.discriminator = None

        if network_interface_no is not None:
            self.network_interface_no = network_interface_no
        if network_interface_name is not None:
            self.network_interface_name = network_interface_name
        if network_interface_ip is not None:
            self.network_interface_ip = network_interface_ip
        if network_interface_description is not None:
            self.network_interface_description = network_interface_description
        if server_instance_no is not None:
            self.server_instance_no = server_instance_no
        if status_code is not None:
            self.status_code = status_code
        if region is not None:
            self.region = region
        if zone is not None:
            self.zone = zone

    @property
    def network_interface_no(self):
        """Gets the network_interface_no of this NetworkInterface.  # noqa: E501

        Network Interface번호  # noqa: E501

        :return: The network_interface_no of this NetworkInterface.  # noqa: E501
        :rtype: str
        """
        return self._network_interface_no

    @network_interface_no.setter
    def network_interface_no(self, network_interface_no):
        """Sets the network_interface_no of this NetworkInterface.

        Network Interface번호  # noqa: E501

        :param network_interface_no: The network_interface_no of this NetworkInterface.  # noqa: E501
        :type: str
        """

        self._network_interface_no = network_interface_no

    @property
    def network_interface_name(self):
        """Gets the network_interface_name of this NetworkInterface.  # noqa: E501

        Network Interface이름  # noqa: E501

        :return: The network_interface_name of this NetworkInterface.  # noqa: E501
        :rtype: str
        """
        return self._network_interface_name

    @network_interface_name.setter
    def network_interface_name(self, network_interface_name):
        """Sets the network_interface_name of this NetworkInterface.

        Network Interface이름  # noqa: E501

        :param network_interface_name: The network_interface_name of this NetworkInterface.  # noqa: E501
        :type: str
        """

        self._network_interface_name = network_interface_name

    @property
    def network_interface_ip(self):
        """Gets the network_interface_ip of this NetworkInterface.  # noqa: E501

        Network Interface IP  # noqa: E501

        :return: The network_interface_ip of this NetworkInterface.  # noqa: E501
        :rtype: str
        """
        return self._network_interface_ip

    @network_interface_ip.setter
    def network_interface_ip(self, network_interface_ip):
        """Sets the network_interface_ip of this NetworkInterface.

        Network Interface IP  # noqa: E501

        :param network_interface_ip: The network_interface_ip of this NetworkInterface.  # noqa: E501
        :type: str
        """

        self._network_interface_ip = network_interface_ip

    @property
    def network_interface_description(self):
        """Gets the network_interface_description of this NetworkInterface.  # noqa: E501

        Network Interface 설명  # noqa: E501

        :return: The network_interface_description of this NetworkInterface.  # noqa: E501
        :rtype: str
        """
        return self._network_interface_description

    @network_interface_description.setter
    def network_interface_description(self, network_interface_description):
        """Sets the network_interface_description of this NetworkInterface.

        Network Interface 설명  # noqa: E501

        :param network_interface_description: The network_interface_description of this NetworkInterface.  # noqa: E501
        :type: str
        """

        self._network_interface_description = network_interface_description

    @property
    def server_instance_no(self):
        """Gets the server_instance_no of this NetworkInterface.  # noqa: E501

        서버인스턴스번호  # noqa: E501

        :return: The server_instance_no of this NetworkInterface.  # noqa: E501
        :rtype: str
        """
        return self._server_instance_no

    @server_instance_no.setter
    def server_instance_no(self, server_instance_no):
        """Sets the server_instance_no of this NetworkInterface.

        서버인스턴스번호  # noqa: E501

        :param server_instance_no: The server_instance_no of this NetworkInterface.  # noqa: E501
        :type: str
        """

        self._server_instance_no = server_instance_no

    @property
    def status_code(self):
        """Gets the status_code of this NetworkInterface.  # noqa: E501

        상태코드  # noqa: E501

        :return: The status_code of this NetworkInterface.  # noqa: E501
        :rtype: str
        """
        return self._status_code

    @status_code.setter
    def status_code(self, status_code):
        """Sets the status_code of this NetworkInterface.

        상태코드  # noqa: E501

        :param status_code: The status_code of this NetworkInterface.  # noqa: E501
        :type: str
        """

        self._status_code = status_code

    @property
    def region(self):
        """Gets the region of this NetworkInterface.  # noqa: E501

        리전  # noqa: E501

        :return: The region of this NetworkInterface.  # noqa: E501
        :rtype: Region
        """
        return self._region

    @region.setter
    def region(self, region):
        """Sets the region of this NetworkInterface.

        리전  # noqa: E501

        :param region: The region of this NetworkInterface.  # noqa: E501
        :type: Region
        """

        self._region = region

    @property
    def zone(self):
        """Gets the zone of this NetworkInterface.  # noqa: E501

        ZONE  # noqa: E501

        :return: The zone of this NetworkInterface.  # noqa: E501
        :rtype: Zone
        """
        return self._zone

    @zone.setter
    def zone(self, zone):
        """Sets the zone of this NetworkInterface.

        ZONE  # noqa: E501

        :param zone: The zone of this NetworkInterface.  # noqa: E501
        :type: Zone
        """

        self._zone = zone

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, NetworkInterface):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
