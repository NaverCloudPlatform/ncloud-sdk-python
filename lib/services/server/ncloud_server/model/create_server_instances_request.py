# coding: utf-8

"""
    server

    OpenAPI spec version: 2018-06-22T02:34:44Z
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class CreateServerInstancesRequest(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'server_image_product_code': 'str',
        'server_product_code': 'str',
        'member_server_image_no': 'str',
        'server_name': 'str',
        'server_description': 'str',
        'login_key_name': 'str',
        'is_protect_server_termination': 'bool',
        'server_create_count': 'int',
        'server_create_start_no': 'int',
        'internet_line_type_code': 'bool',
        'fee_system_type_code': 'str',
        'user_data': 'str',
        'zone_no': 'str',
        'access_control_group_configuration_no_list': 'list[str]',
        'raid_type_name': 'str'
    }

    attribute_map = {
        'server_image_product_code': 'serverImageProductCode',
        'server_product_code': 'serverProductCode',
        'member_server_image_no': 'memberServerImageNo',
        'server_name': 'serverName',
        'server_description': 'serverDescription',
        'login_key_name': 'loginKeyName',
        'is_protect_server_termination': 'isProtectServerTermination',
        'server_create_count': 'serverCreateCount',
        'server_create_start_no': 'serverCreateStartNo',
        'internet_line_type_code': 'internetLineTypeCode',
        'fee_system_type_code': 'feeSystemTypeCode',
        'user_data': 'userData',
        'zone_no': 'zoneNo',
        'access_control_group_configuration_no_list': 'accessControlGroupConfigurationNoList',
        'raid_type_name': 'raidTypeName'
    }

    def __init__(self, server_image_product_code=None, server_product_code=None, member_server_image_no=None, server_name=None, server_description=None, login_key_name=None, is_protect_server_termination=None, server_create_count=None, server_create_start_no=None, internet_line_type_code=None, fee_system_type_code=None, user_data=None, zone_no=None, access_control_group_configuration_no_list=None, raid_type_name=None):  # noqa: E501
        """CreateServerInstancesRequest - a model defined in Swagger"""  # noqa: E501

        self._server_image_product_code = None
        self._server_product_code = None
        self._member_server_image_no = None
        self._server_name = None
        self._server_description = None
        self._login_key_name = None
        self._is_protect_server_termination = None
        self._server_create_count = None
        self._server_create_start_no = None
        self._internet_line_type_code = None
        self._fee_system_type_code = None
        self._user_data = None
        self._zone_no = None
        self._access_control_group_configuration_no_list = None
        self._raid_type_name = None
        self.discriminator = None

        if server_image_product_code is not None:
            self.server_image_product_code = server_image_product_code
        if server_product_code is not None:
            self.server_product_code = server_product_code
        if member_server_image_no is not None:
            self.member_server_image_no = member_server_image_no
        if server_name is not None:
            self.server_name = server_name
        if server_description is not None:
            self.server_description = server_description
        if login_key_name is not None:
            self.login_key_name = login_key_name
        if is_protect_server_termination is not None:
            self.is_protect_server_termination = is_protect_server_termination
        if server_create_count is not None:
            self.server_create_count = server_create_count
        if server_create_start_no is not None:
            self.server_create_start_no = server_create_start_no
        if internet_line_type_code is not None:
            self.internet_line_type_code = internet_line_type_code
        if fee_system_type_code is not None:
            self.fee_system_type_code = fee_system_type_code
        if user_data is not None:
            self.user_data = user_data
        if zone_no is not None:
            self.zone_no = zone_no
        if access_control_group_configuration_no_list is not None:
            self.access_control_group_configuration_no_list = access_control_group_configuration_no_list
        if raid_type_name is not None:
            self.raid_type_name = raid_type_name

    @property
    def server_image_product_code(self):
        """Gets the server_image_product_code of this CreateServerInstancesRequest.  # noqa: E501

        서버이미지상품코드  # noqa: E501

        :return: The server_image_product_code of this CreateServerInstancesRequest.  # noqa: E501
        :rtype: str
        """
        return self._server_image_product_code

    @server_image_product_code.setter
    def server_image_product_code(self, server_image_product_code):
        """Sets the server_image_product_code of this CreateServerInstancesRequest.

        서버이미지상품코드  # noqa: E501

        :param server_image_product_code: The server_image_product_code of this CreateServerInstancesRequest.  # noqa: E501
        :type: str
        """

        self._server_image_product_code = server_image_product_code

    @property
    def server_product_code(self):
        """Gets the server_product_code of this CreateServerInstancesRequest.  # noqa: E501

        서버상품코드  # noqa: E501

        :return: The server_product_code of this CreateServerInstancesRequest.  # noqa: E501
        :rtype: str
        """
        return self._server_product_code

    @server_product_code.setter
    def server_product_code(self, server_product_code):
        """Sets the server_product_code of this CreateServerInstancesRequest.

        서버상품코드  # noqa: E501

        :param server_product_code: The server_product_code of this CreateServerInstancesRequest.  # noqa: E501
        :type: str
        """

        self._server_product_code = server_product_code

    @property
    def member_server_image_no(self):
        """Gets the member_server_image_no of this CreateServerInstancesRequest.  # noqa: E501

        회원서버이미지번호  # noqa: E501

        :return: The member_server_image_no of this CreateServerInstancesRequest.  # noqa: E501
        :rtype: str
        """
        return self._member_server_image_no

    @member_server_image_no.setter
    def member_server_image_no(self, member_server_image_no):
        """Sets the member_server_image_no of this CreateServerInstancesRequest.

        회원서버이미지번호  # noqa: E501

        :param member_server_image_no: The member_server_image_no of this CreateServerInstancesRequest.  # noqa: E501
        :type: str
        """

        self._member_server_image_no = member_server_image_no

    @property
    def server_name(self):
        """Gets the server_name of this CreateServerInstancesRequest.  # noqa: E501

        서버명  # noqa: E501

        :return: The server_name of this CreateServerInstancesRequest.  # noqa: E501
        :rtype: str
        """
        return self._server_name

    @server_name.setter
    def server_name(self, server_name):
        """Sets the server_name of this CreateServerInstancesRequest.

        서버명  # noqa: E501

        :param server_name: The server_name of this CreateServerInstancesRequest.  # noqa: E501
        :type: str
        """

        self._server_name = server_name

    @property
    def server_description(self):
        """Gets the server_description of this CreateServerInstancesRequest.  # noqa: E501

        서버설명  # noqa: E501

        :return: The server_description of this CreateServerInstancesRequest.  # noqa: E501
        :rtype: str
        """
        return self._server_description

    @server_description.setter
    def server_description(self, server_description):
        """Sets the server_description of this CreateServerInstancesRequest.

        서버설명  # noqa: E501

        :param server_description: The server_description of this CreateServerInstancesRequest.  # noqa: E501
        :type: str
        """

        self._server_description = server_description

    @property
    def login_key_name(self):
        """Gets the login_key_name of this CreateServerInstancesRequest.  # noqa: E501

        로그인키명  # noqa: E501

        :return: The login_key_name of this CreateServerInstancesRequest.  # noqa: E501
        :rtype: str
        """
        return self._login_key_name

    @login_key_name.setter
    def login_key_name(self, login_key_name):
        """Sets the login_key_name of this CreateServerInstancesRequest.

        로그인키명  # noqa: E501

        :param login_key_name: The login_key_name of this CreateServerInstancesRequest.  # noqa: E501
        :type: str
        """

        self._login_key_name = login_key_name

    @property
    def is_protect_server_termination(self):
        """Gets the is_protect_server_termination of this CreateServerInstancesRequest.  # noqa: E501

        반납보호여부  # noqa: E501

        :return: The is_protect_server_termination of this CreateServerInstancesRequest.  # noqa: E501
        :rtype: bool
        """
        return self._is_protect_server_termination

    @is_protect_server_termination.setter
    def is_protect_server_termination(self, is_protect_server_termination):
        """Sets the is_protect_server_termination of this CreateServerInstancesRequest.

        반납보호여부  # noqa: E501

        :param is_protect_server_termination: The is_protect_server_termination of this CreateServerInstancesRequest.  # noqa: E501
        :type: bool
        """

        self._is_protect_server_termination = is_protect_server_termination

    @property
    def server_create_count(self):
        """Gets the server_create_count of this CreateServerInstancesRequest.  # noqa: E501

        서버생성갯수  # noqa: E501

        :return: The server_create_count of this CreateServerInstancesRequest.  # noqa: E501
        :rtype: int
        """
        return self._server_create_count

    @server_create_count.setter
    def server_create_count(self, server_create_count):
        """Sets the server_create_count of this CreateServerInstancesRequest.

        서버생성갯수  # noqa: E501

        :param server_create_count: The server_create_count of this CreateServerInstancesRequest.  # noqa: E501
        :type: int
        """

        self._server_create_count = server_create_count

    @property
    def server_create_start_no(self):
        """Gets the server_create_start_no of this CreateServerInstancesRequest.  # noqa: E501

        서버생성시작번호  # noqa: E501

        :return: The server_create_start_no of this CreateServerInstancesRequest.  # noqa: E501
        :rtype: int
        """
        return self._server_create_start_no

    @server_create_start_no.setter
    def server_create_start_no(self, server_create_start_no):
        """Sets the server_create_start_no of this CreateServerInstancesRequest.

        서버생성시작번호  # noqa: E501

        :param server_create_start_no: The server_create_start_no of this CreateServerInstancesRequest.  # noqa: E501
        :type: int
        """

        self._server_create_start_no = server_create_start_no

    @property
    def internet_line_type_code(self):
        """Gets the internet_line_type_code of this CreateServerInstancesRequest.  # noqa: E501

        인터넷라인구분코드  # noqa: E501

        :return: The internet_line_type_code of this CreateServerInstancesRequest.  # noqa: E501
        :rtype: bool
        """
        return self._internet_line_type_code

    @internet_line_type_code.setter
    def internet_line_type_code(self, internet_line_type_code):
        """Sets the internet_line_type_code of this CreateServerInstancesRequest.

        인터넷라인구분코드  # noqa: E501

        :param internet_line_type_code: The internet_line_type_code of this CreateServerInstancesRequest.  # noqa: E501
        :type: bool
        """

        self._internet_line_type_code = internet_line_type_code

    @property
    def fee_system_type_code(self):
        """Gets the fee_system_type_code of this CreateServerInstancesRequest.  # noqa: E501

        요금제구분코드  # noqa: E501

        :return: The fee_system_type_code of this CreateServerInstancesRequest.  # noqa: E501
        :rtype: str
        """
        return self._fee_system_type_code

    @fee_system_type_code.setter
    def fee_system_type_code(self, fee_system_type_code):
        """Sets the fee_system_type_code of this CreateServerInstancesRequest.

        요금제구분코드  # noqa: E501

        :param fee_system_type_code: The fee_system_type_code of this CreateServerInstancesRequest.  # noqa: E501
        :type: str
        """

        self._fee_system_type_code = fee_system_type_code

    @property
    def user_data(self):
        """Gets the user_data of this CreateServerInstancesRequest.  # noqa: E501

        사용자데이터  # noqa: E501

        :return: The user_data of this CreateServerInstancesRequest.  # noqa: E501
        :rtype: str
        """
        return self._user_data

    @user_data.setter
    def user_data(self, user_data):
        """Sets the user_data of this CreateServerInstancesRequest.

        사용자데이터  # noqa: E501

        :param user_data: The user_data of this CreateServerInstancesRequest.  # noqa: E501
        :type: str
        """

        self._user_data = user_data

    @property
    def zone_no(self):
        """Gets the zone_no of this CreateServerInstancesRequest.  # noqa: E501

        ZONE번호  # noqa: E501

        :return: The zone_no of this CreateServerInstancesRequest.  # noqa: E501
        :rtype: str
        """
        return self._zone_no

    @zone_no.setter
    def zone_no(self, zone_no):
        """Sets the zone_no of this CreateServerInstancesRequest.

        ZONE번호  # noqa: E501

        :param zone_no: The zone_no of this CreateServerInstancesRequest.  # noqa: E501
        :type: str
        """

        self._zone_no = zone_no

    @property
    def access_control_group_configuration_no_list(self):
        """Gets the access_control_group_configuration_no_list of this CreateServerInstancesRequest.  # noqa: E501

        ACG설정번호리스트  # noqa: E501

        :return: The access_control_group_configuration_no_list of this CreateServerInstancesRequest.  # noqa: E501
        :rtype: list[str]
        """
        return self._access_control_group_configuration_no_list

    @access_control_group_configuration_no_list.setter
    def access_control_group_configuration_no_list(self, access_control_group_configuration_no_list):
        """Sets the access_control_group_configuration_no_list of this CreateServerInstancesRequest.

        ACG설정번호리스트  # noqa: E501

        :param access_control_group_configuration_no_list: The access_control_group_configuration_no_list of this CreateServerInstancesRequest.  # noqa: E501
        :type: list[str]
        """

        self._access_control_group_configuration_no_list = access_control_group_configuration_no_list

    @property
    def raid_type_name(self):
        """Gets the raid_type_name of this CreateServerInstancesRequest.  # noqa: E501

        RAID구분이름  # noqa: E501

        :return: The raid_type_name of this CreateServerInstancesRequest.  # noqa: E501
        :rtype: str
        """
        return self._raid_type_name

    @raid_type_name.setter
    def raid_type_name(self, raid_type_name):
        """Sets the raid_type_name of this CreateServerInstancesRequest.

        RAID구분이름  # noqa: E501

        :param raid_type_name: The raid_type_name of this CreateServerInstancesRequest.  # noqa: E501
        :type: str
        """

        self._raid_type_name = raid_type_name

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CreateServerInstancesRequest):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
