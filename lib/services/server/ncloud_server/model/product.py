# coding: utf-8

"""
    server

    OpenAPI spec version: 2018-06-22T02:34:44Z
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from ncloud_server.model.common_code import CommonCode  # noqa: F401,E501


class Product(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'product_code': 'str',
        'product_name': 'str',
        'product_type': 'CommonCode',
        'product_description': 'str',
        'infra_resource_type': 'CommonCode',
        'infra_resource_detail_type': 'CommonCode',
        'cpu_count': 'int',
        'memory_size': 'int',
        'base_block_storage_size': 'int',
        'platform_type': 'CommonCode',
        'os_information': 'str',
        'disk_type': 'CommonCode',
        'db_kind_code': 'str',
        'add_block_storage_size': 'int'
    }

    attribute_map = {
        'product_code': 'productCode',
        'product_name': 'productName',
        'product_type': 'productType',
        'product_description': 'productDescription',
        'infra_resource_type': 'infraResourceType',
        'infra_resource_detail_type': 'infraResourceDetailType',
        'cpu_count': 'cpuCount',
        'memory_size': 'memorySize',
        'base_block_storage_size': 'baseBlockStorageSize',
        'platform_type': 'platformType',
        'os_information': 'osInformation',
        'disk_type': 'diskType',
        'db_kind_code': 'dbKindCode',
        'add_block_storage_size': 'addBlockStorageSize'
    }

    def __init__(self, product_code=None, product_name=None, product_type=None, product_description=None, infra_resource_type=None, infra_resource_detail_type=None, cpu_count=None, memory_size=None, base_block_storage_size=None, platform_type=None, os_information=None, disk_type=None, db_kind_code=None, add_block_storage_size=None):  # noqa: E501
        """Product - a model defined in Swagger"""  # noqa: E501

        self._product_code = None
        self._product_name = None
        self._product_type = None
        self._product_description = None
        self._infra_resource_type = None
        self._infra_resource_detail_type = None
        self._cpu_count = None
        self._memory_size = None
        self._base_block_storage_size = None
        self._platform_type = None
        self._os_information = None
        self._disk_type = None
        self._db_kind_code = None
        self._add_block_storage_size = None
        self.discriminator = None

        if product_code is not None:
            self.product_code = product_code
        if product_name is not None:
            self.product_name = product_name
        if product_type is not None:
            self.product_type = product_type
        if product_description is not None:
            self.product_description = product_description
        if infra_resource_type is not None:
            self.infra_resource_type = infra_resource_type
        if infra_resource_detail_type is not None:
            self.infra_resource_detail_type = infra_resource_detail_type
        if cpu_count is not None:
            self.cpu_count = cpu_count
        if memory_size is not None:
            self.memory_size = memory_size
        if base_block_storage_size is not None:
            self.base_block_storage_size = base_block_storage_size
        if platform_type is not None:
            self.platform_type = platform_type
        if os_information is not None:
            self.os_information = os_information
        if disk_type is not None:
            self.disk_type = disk_type
        if db_kind_code is not None:
            self.db_kind_code = db_kind_code
        if add_block_storage_size is not None:
            self.add_block_storage_size = add_block_storage_size

    @property
    def product_code(self):
        """Gets the product_code of this Product.  # noqa: E501

        상품코드  # noqa: E501

        :return: The product_code of this Product.  # noqa: E501
        :rtype: str
        """
        return self._product_code

    @product_code.setter
    def product_code(self, product_code):
        """Sets the product_code of this Product.

        상품코드  # noqa: E501

        :param product_code: The product_code of this Product.  # noqa: E501
        :type: str
        """

        self._product_code = product_code

    @property
    def product_name(self):
        """Gets the product_name of this Product.  # noqa: E501

        상품명  # noqa: E501

        :return: The product_name of this Product.  # noqa: E501
        :rtype: str
        """
        return self._product_name

    @product_name.setter
    def product_name(self, product_name):
        """Sets the product_name of this Product.

        상품명  # noqa: E501

        :param product_name: The product_name of this Product.  # noqa: E501
        :type: str
        """

        self._product_name = product_name

    @property
    def product_type(self):
        """Gets the product_type of this Product.  # noqa: E501

        상품유형  # noqa: E501

        :return: The product_type of this Product.  # noqa: E501
        :rtype: CommonCode
        """
        return self._product_type

    @product_type.setter
    def product_type(self, product_type):
        """Sets the product_type of this Product.

        상품유형  # noqa: E501

        :param product_type: The product_type of this Product.  # noqa: E501
        :type: CommonCode
        """

        self._product_type = product_type

    @property
    def product_description(self):
        """Gets the product_description of this Product.  # noqa: E501

        상품설명  # noqa: E501

        :return: The product_description of this Product.  # noqa: E501
        :rtype: str
        """
        return self._product_description

    @product_description.setter
    def product_description(self, product_description):
        """Sets the product_description of this Product.

        상품설명  # noqa: E501

        :param product_description: The product_description of this Product.  # noqa: E501
        :type: str
        """

        self._product_description = product_description

    @property
    def infra_resource_type(self):
        """Gets the infra_resource_type of this Product.  # noqa: E501

        인프라자원구분  # noqa: E501

        :return: The infra_resource_type of this Product.  # noqa: E501
        :rtype: CommonCode
        """
        return self._infra_resource_type

    @infra_resource_type.setter
    def infra_resource_type(self, infra_resource_type):
        """Sets the infra_resource_type of this Product.

        인프라자원구분  # noqa: E501

        :param infra_resource_type: The infra_resource_type of this Product.  # noqa: E501
        :type: CommonCode
        """

        self._infra_resource_type = infra_resource_type

    @property
    def infra_resource_detail_type(self):
        """Gets the infra_resource_detail_type of this Product.  # noqa: E501

        인프라자원상세구분  # noqa: E501

        :return: The infra_resource_detail_type of this Product.  # noqa: E501
        :rtype: CommonCode
        """
        return self._infra_resource_detail_type

    @infra_resource_detail_type.setter
    def infra_resource_detail_type(self, infra_resource_detail_type):
        """Sets the infra_resource_detail_type of this Product.

        인프라자원상세구분  # noqa: E501

        :param infra_resource_detail_type: The infra_resource_detail_type of this Product.  # noqa: E501
        :type: CommonCode
        """

        self._infra_resource_detail_type = infra_resource_detail_type

    @property
    def cpu_count(self):
        """Gets the cpu_count of this Product.  # noqa: E501

        CPU수  # noqa: E501

        :return: The cpu_count of this Product.  # noqa: E501
        :rtype: int
        """
        return self._cpu_count

    @cpu_count.setter
    def cpu_count(self, cpu_count):
        """Sets the cpu_count of this Product.

        CPU수  # noqa: E501

        :param cpu_count: The cpu_count of this Product.  # noqa: E501
        :type: int
        """

        self._cpu_count = cpu_count

    @property
    def memory_size(self):
        """Gets the memory_size of this Product.  # noqa: E501

        메모리사이즈  # noqa: E501

        :return: The memory_size of this Product.  # noqa: E501
        :rtype: int
        """
        return self._memory_size

    @memory_size.setter
    def memory_size(self, memory_size):
        """Sets the memory_size of this Product.

        메모리사이즈  # noqa: E501

        :param memory_size: The memory_size of this Product.  # noqa: E501
        :type: int
        """

        self._memory_size = memory_size

    @property
    def base_block_storage_size(self):
        """Gets the base_block_storage_size of this Product.  # noqa: E501

        기본블록스토리지사이즈  # noqa: E501

        :return: The base_block_storage_size of this Product.  # noqa: E501
        :rtype: int
        """
        return self._base_block_storage_size

    @base_block_storage_size.setter
    def base_block_storage_size(self, base_block_storage_size):
        """Sets the base_block_storage_size of this Product.

        기본블록스토리지사이즈  # noqa: E501

        :param base_block_storage_size: The base_block_storage_size of this Product.  # noqa: E501
        :type: int
        """

        self._base_block_storage_size = base_block_storage_size

    @property
    def platform_type(self):
        """Gets the platform_type of this Product.  # noqa: E501

        플랫폼구분  # noqa: E501

        :return: The platform_type of this Product.  # noqa: E501
        :rtype: CommonCode
        """
        return self._platform_type

    @platform_type.setter
    def platform_type(self, platform_type):
        """Sets the platform_type of this Product.

        플랫폼구분  # noqa: E501

        :param platform_type: The platform_type of this Product.  # noqa: E501
        :type: CommonCode
        """

        self._platform_type = platform_type

    @property
    def os_information(self):
        """Gets the os_information of this Product.  # noqa: E501

        OS정보  # noqa: E501

        :return: The os_information of this Product.  # noqa: E501
        :rtype: str
        """
        return self._os_information

    @os_information.setter
    def os_information(self, os_information):
        """Sets the os_information of this Product.

        OS정보  # noqa: E501

        :param os_information: The os_information of this Product.  # noqa: E501
        :type: str
        """

        self._os_information = os_information

    @property
    def disk_type(self):
        """Gets the disk_type of this Product.  # noqa: E501

        디스크유형  # noqa: E501

        :return: The disk_type of this Product.  # noqa: E501
        :rtype: CommonCode
        """
        return self._disk_type

    @disk_type.setter
    def disk_type(self, disk_type):
        """Sets the disk_type of this Product.

        디스크유형  # noqa: E501

        :param disk_type: The disk_type of this Product.  # noqa: E501
        :type: CommonCode
        """

        self._disk_type = disk_type

    @property
    def db_kind_code(self):
        """Gets the db_kind_code of this Product.  # noqa: E501

        DB유형코드  # noqa: E501

        :return: The db_kind_code of this Product.  # noqa: E501
        :rtype: str
        """
        return self._db_kind_code

    @db_kind_code.setter
    def db_kind_code(self, db_kind_code):
        """Sets the db_kind_code of this Product.

        DB유형코드  # noqa: E501

        :param db_kind_code: The db_kind_code of this Product.  # noqa: E501
        :type: str
        """

        self._db_kind_code = db_kind_code

    @property
    def add_block_storage_size(self):
        """Gets the add_block_storage_size of this Product.  # noqa: E501

        추가블록스토리지사이즈  # noqa: E501

        :return: The add_block_storage_size of this Product.  # noqa: E501
        :rtype: int
        """
        return self._add_block_storage_size

    @add_block_storage_size.setter
    def add_block_storage_size(self, add_block_storage_size):
        """Sets the add_block_storage_size of this Product.

        추가블록스토리지사이즈  # noqa: E501

        :param add_block_storage_size: The add_block_storage_size of this Product.  # noqa: E501
        :type: int
        """

        self._add_block_storage_size = add_block_storage_size

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, Product):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
