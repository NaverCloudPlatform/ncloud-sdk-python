# coding: utf-8

"""
    server

    OpenAPI spec version: 2018-06-22T02:34:44Z
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class GetNasVolumeInstanceRatingListRequest(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'end_time': 'str',
        'interval': 'str',
        'nas_volume_instance_no': 'str',
        'start_time': 'str'
    }

    attribute_map = {
        'end_time': 'endTime',
        'interval': 'interval',
        'nas_volume_instance_no': 'nasVolumeInstanceNo',
        'start_time': 'startTime'
    }

    def __init__(self, end_time=None, interval=None, nas_volume_instance_no=None, start_time=None):  # noqa: E501
        """GetNasVolumeInstanceRatingListRequest - a model defined in Swagger"""  # noqa: E501

        self._end_time = None
        self._interval = None
        self._nas_volume_instance_no = None
        self._start_time = None
        self.discriminator = None

        self.end_time = end_time
        self.interval = interval
        self.nas_volume_instance_no = nas_volume_instance_no
        self.start_time = start_time

    @property
    def end_time(self):
        """Gets the end_time of this GetNasVolumeInstanceRatingListRequest.  # noqa: E501

        측정종료시간  # noqa: E501

        :return: The end_time of this GetNasVolumeInstanceRatingListRequest.  # noqa: E501
        :rtype: str
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this GetNasVolumeInstanceRatingListRequest.

        측정종료시간  # noqa: E501

        :param end_time: The end_time of this GetNasVolumeInstanceRatingListRequest.  # noqa: E501
        :type: str
        """
        if end_time is None:
            raise ValueError("Invalid value for `end_time`, must not be `None`")  # noqa: E501

        self._end_time = end_time

    @property
    def interval(self):
        """Gets the interval of this GetNasVolumeInstanceRatingListRequest.  # noqa: E501

        측정간격  # noqa: E501

        :return: The interval of this GetNasVolumeInstanceRatingListRequest.  # noqa: E501
        :rtype: str
        """
        return self._interval

    @interval.setter
    def interval(self, interval):
        """Sets the interval of this GetNasVolumeInstanceRatingListRequest.

        측정간격  # noqa: E501

        :param interval: The interval of this GetNasVolumeInstanceRatingListRequest.  # noqa: E501
        :type: str
        """
        if interval is None:
            raise ValueError("Invalid value for `interval`, must not be `None`")  # noqa: E501

        self._interval = interval

    @property
    def nas_volume_instance_no(self):
        """Gets the nas_volume_instance_no of this GetNasVolumeInstanceRatingListRequest.  # noqa: E501

        NAS볼륨인스턴스번호  # noqa: E501

        :return: The nas_volume_instance_no of this GetNasVolumeInstanceRatingListRequest.  # noqa: E501
        :rtype: str
        """
        return self._nas_volume_instance_no

    @nas_volume_instance_no.setter
    def nas_volume_instance_no(self, nas_volume_instance_no):
        """Sets the nas_volume_instance_no of this GetNasVolumeInstanceRatingListRequest.

        NAS볼륨인스턴스번호  # noqa: E501

        :param nas_volume_instance_no: The nas_volume_instance_no of this GetNasVolumeInstanceRatingListRequest.  # noqa: E501
        :type: str
        """
        if nas_volume_instance_no is None:
            raise ValueError("Invalid value for `nas_volume_instance_no`, must not be `None`")  # noqa: E501

        self._nas_volume_instance_no = nas_volume_instance_no

    @property
    def start_time(self):
        """Gets the start_time of this GetNasVolumeInstanceRatingListRequest.  # noqa: E501

        측정시작시간  # noqa: E501

        :return: The start_time of this GetNasVolumeInstanceRatingListRequest.  # noqa: E501
        :rtype: str
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this GetNasVolumeInstanceRatingListRequest.

        측정시작시간  # noqa: E501

        :param start_time: The start_time of this GetNasVolumeInstanceRatingListRequest.  # noqa: E501
        :type: str
        """
        if start_time is None:
            raise ValueError("Invalid value for `start_time`, must not be `None`")  # noqa: E501

        self._start_time = start_time

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GetNasVolumeInstanceRatingListRequest):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
