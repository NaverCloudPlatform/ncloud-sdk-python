# coding: utf-8

"""
    server

    OpenAPI spec version: 2018-06-22T02:34:44Z
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from ncloud_server.model.common_code import CommonCode  # noqa: F401,E501
from ncloud_server.model.region import Region  # noqa: F401,E501
from ncloud_server.model.zone import Zone  # noqa: F401,E501


class BlockStorageInstance(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'block_storage_instance_no': 'str',
        'server_instance_no': 'str',
        'server_name': 'str',
        'block_storage_type': 'CommonCode',
        'block_storage_name': 'str',
        'block_storage_size': 'int',
        'device_name': 'str',
        'member_server_image_no': 'str',
        'block_storage_product_code': 'str',
        'block_storage_instance_status': 'CommonCode',
        'block_storage_instance_operation': 'CommonCode',
        'block_storage_instance_status_name': 'str',
        'create_date': 'str',
        'block_storage_instance_description': 'str',
        'disk_type': 'CommonCode',
        'disk_detail_type': 'CommonCode',
        'max_iops_throughput': 'int',
        'region': 'Region',
        'zone': 'Zone'
    }

    attribute_map = {
        'block_storage_instance_no': 'blockStorageInstanceNo',
        'server_instance_no': 'serverInstanceNo',
        'server_name': 'serverName',
        'block_storage_type': 'blockStorageType',
        'block_storage_name': 'blockStorageName',
        'block_storage_size': 'blockStorageSize',
        'device_name': 'deviceName',
        'member_server_image_no': 'memberServerImageNo',
        'block_storage_product_code': 'blockStorageProductCode',
        'block_storage_instance_status': 'blockStorageInstanceStatus',
        'block_storage_instance_operation': 'blockStorageInstanceOperation',
        'block_storage_instance_status_name': 'blockStorageInstanceStatusName',
        'create_date': 'createDate',
        'block_storage_instance_description': 'blockStorageInstanceDescription',
        'disk_type': 'diskType',
        'disk_detail_type': 'diskDetailType',
        'max_iops_throughput': 'maxIopsThroughput',
        'region': 'region',
        'zone': 'zone'
    }

    def __init__(self, block_storage_instance_no=None, server_instance_no=None, server_name=None, block_storage_type=None, block_storage_name=None, block_storage_size=None, device_name=None, member_server_image_no=None, block_storage_product_code=None, block_storage_instance_status=None, block_storage_instance_operation=None, block_storage_instance_status_name=None, create_date=None, block_storage_instance_description=None, disk_type=None, disk_detail_type=None, max_iops_throughput=None, region=None, zone=None):  # noqa: E501
        """BlockStorageInstance - a model defined in Swagger"""  # noqa: E501

        self._block_storage_instance_no = None
        self._server_instance_no = None
        self._server_name = None
        self._block_storage_type = None
        self._block_storage_name = None
        self._block_storage_size = None
        self._device_name = None
        self._member_server_image_no = None
        self._block_storage_product_code = None
        self._block_storage_instance_status = None
        self._block_storage_instance_operation = None
        self._block_storage_instance_status_name = None
        self._create_date = None
        self._block_storage_instance_description = None
        self._disk_type = None
        self._disk_detail_type = None
        self._max_iops_throughput = None
        self._region = None
        self._zone = None
        self.discriminator = None

        if block_storage_instance_no is not None:
            self.block_storage_instance_no = block_storage_instance_no
        if server_instance_no is not None:
            self.server_instance_no = server_instance_no
        if server_name is not None:
            self.server_name = server_name
        if block_storage_type is not None:
            self.block_storage_type = block_storage_type
        if block_storage_name is not None:
            self.block_storage_name = block_storage_name
        if block_storage_size is not None:
            self.block_storage_size = block_storage_size
        if device_name is not None:
            self.device_name = device_name
        if member_server_image_no is not None:
            self.member_server_image_no = member_server_image_no
        if block_storage_product_code is not None:
            self.block_storage_product_code = block_storage_product_code
        if block_storage_instance_status is not None:
            self.block_storage_instance_status = block_storage_instance_status
        if block_storage_instance_operation is not None:
            self.block_storage_instance_operation = block_storage_instance_operation
        if block_storage_instance_status_name is not None:
            self.block_storage_instance_status_name = block_storage_instance_status_name
        if create_date is not None:
            self.create_date = create_date
        if block_storage_instance_description is not None:
            self.block_storage_instance_description = block_storage_instance_description
        if disk_type is not None:
            self.disk_type = disk_type
        if disk_detail_type is not None:
            self.disk_detail_type = disk_detail_type
        if max_iops_throughput is not None:
            self.max_iops_throughput = max_iops_throughput
        if region is not None:
            self.region = region
        if zone is not None:
            self.zone = zone

    @property
    def block_storage_instance_no(self):
        """Gets the block_storage_instance_no of this BlockStorageInstance.  # noqa: E501

        블록스토리지인스턴스번호  # noqa: E501

        :return: The block_storage_instance_no of this BlockStorageInstance.  # noqa: E501
        :rtype: str
        """
        return self._block_storage_instance_no

    @block_storage_instance_no.setter
    def block_storage_instance_no(self, block_storage_instance_no):
        """Sets the block_storage_instance_no of this BlockStorageInstance.

        블록스토리지인스턴스번호  # noqa: E501

        :param block_storage_instance_no: The block_storage_instance_no of this BlockStorageInstance.  # noqa: E501
        :type: str
        """

        self._block_storage_instance_no = block_storage_instance_no

    @property
    def server_instance_no(self):
        """Gets the server_instance_no of this BlockStorageInstance.  # noqa: E501

        서버인스턴스번호  # noqa: E501

        :return: The server_instance_no of this BlockStorageInstance.  # noqa: E501
        :rtype: str
        """
        return self._server_instance_no

    @server_instance_no.setter
    def server_instance_no(self, server_instance_no):
        """Sets the server_instance_no of this BlockStorageInstance.

        서버인스턴스번호  # noqa: E501

        :param server_instance_no: The server_instance_no of this BlockStorageInstance.  # noqa: E501
        :type: str
        """

        self._server_instance_no = server_instance_no

    @property
    def server_name(self):
        """Gets the server_name of this BlockStorageInstance.  # noqa: E501

        서버명  # noqa: E501

        :return: The server_name of this BlockStorageInstance.  # noqa: E501
        :rtype: str
        """
        return self._server_name

    @server_name.setter
    def server_name(self, server_name):
        """Sets the server_name of this BlockStorageInstance.

        서버명  # noqa: E501

        :param server_name: The server_name of this BlockStorageInstance.  # noqa: E501
        :type: str
        """

        self._server_name = server_name

    @property
    def block_storage_type(self):
        """Gets the block_storage_type of this BlockStorageInstance.  # noqa: E501

        블록스토리지구분  # noqa: E501

        :return: The block_storage_type of this BlockStorageInstance.  # noqa: E501
        :rtype: CommonCode
        """
        return self._block_storage_type

    @block_storage_type.setter
    def block_storage_type(self, block_storage_type):
        """Sets the block_storage_type of this BlockStorageInstance.

        블록스토리지구분  # noqa: E501

        :param block_storage_type: The block_storage_type of this BlockStorageInstance.  # noqa: E501
        :type: CommonCode
        """

        self._block_storage_type = block_storage_type

    @property
    def block_storage_name(self):
        """Gets the block_storage_name of this BlockStorageInstance.  # noqa: E501

        블록스토리지명  # noqa: E501

        :return: The block_storage_name of this BlockStorageInstance.  # noqa: E501
        :rtype: str
        """
        return self._block_storage_name

    @block_storage_name.setter
    def block_storage_name(self, block_storage_name):
        """Sets the block_storage_name of this BlockStorageInstance.

        블록스토리지명  # noqa: E501

        :param block_storage_name: The block_storage_name of this BlockStorageInstance.  # noqa: E501
        :type: str
        """

        self._block_storage_name = block_storage_name

    @property
    def block_storage_size(self):
        """Gets the block_storage_size of this BlockStorageInstance.  # noqa: E501

        블록스토리지사이즈  # noqa: E501

        :return: The block_storage_size of this BlockStorageInstance.  # noqa: E501
        :rtype: int
        """
        return self._block_storage_size

    @block_storage_size.setter
    def block_storage_size(self, block_storage_size):
        """Sets the block_storage_size of this BlockStorageInstance.

        블록스토리지사이즈  # noqa: E501

        :param block_storage_size: The block_storage_size of this BlockStorageInstance.  # noqa: E501
        :type: int
        """

        self._block_storage_size = block_storage_size

    @property
    def device_name(self):
        """Gets the device_name of this BlockStorageInstance.  # noqa: E501

        디바이스명  # noqa: E501

        :return: The device_name of this BlockStorageInstance.  # noqa: E501
        :rtype: str
        """
        return self._device_name

    @device_name.setter
    def device_name(self, device_name):
        """Sets the device_name of this BlockStorageInstance.

        디바이스명  # noqa: E501

        :param device_name: The device_name of this BlockStorageInstance.  # noqa: E501
        :type: str
        """

        self._device_name = device_name

    @property
    def member_server_image_no(self):
        """Gets the member_server_image_no of this BlockStorageInstance.  # noqa: E501

        회원서버이미지번호  # noqa: E501

        :return: The member_server_image_no of this BlockStorageInstance.  # noqa: E501
        :rtype: str
        """
        return self._member_server_image_no

    @member_server_image_no.setter
    def member_server_image_no(self, member_server_image_no):
        """Sets the member_server_image_no of this BlockStorageInstance.

        회원서버이미지번호  # noqa: E501

        :param member_server_image_no: The member_server_image_no of this BlockStorageInstance.  # noqa: E501
        :type: str
        """

        self._member_server_image_no = member_server_image_no

    @property
    def block_storage_product_code(self):
        """Gets the block_storage_product_code of this BlockStorageInstance.  # noqa: E501

        블록스토리지상품코드  # noqa: E501

        :return: The block_storage_product_code of this BlockStorageInstance.  # noqa: E501
        :rtype: str
        """
        return self._block_storage_product_code

    @block_storage_product_code.setter
    def block_storage_product_code(self, block_storage_product_code):
        """Sets the block_storage_product_code of this BlockStorageInstance.

        블록스토리지상품코드  # noqa: E501

        :param block_storage_product_code: The block_storage_product_code of this BlockStorageInstance.  # noqa: E501
        :type: str
        """

        self._block_storage_product_code = block_storage_product_code

    @property
    def block_storage_instance_status(self):
        """Gets the block_storage_instance_status of this BlockStorageInstance.  # noqa: E501

        블록스토리지인스턴스상태  # noqa: E501

        :return: The block_storage_instance_status of this BlockStorageInstance.  # noqa: E501
        :rtype: CommonCode
        """
        return self._block_storage_instance_status

    @block_storage_instance_status.setter
    def block_storage_instance_status(self, block_storage_instance_status):
        """Sets the block_storage_instance_status of this BlockStorageInstance.

        블록스토리지인스턴스상태  # noqa: E501

        :param block_storage_instance_status: The block_storage_instance_status of this BlockStorageInstance.  # noqa: E501
        :type: CommonCode
        """

        self._block_storage_instance_status = block_storage_instance_status

    @property
    def block_storage_instance_operation(self):
        """Gets the block_storage_instance_operation of this BlockStorageInstance.  # noqa: E501

        블록스토리지인스턴스OP  # noqa: E501

        :return: The block_storage_instance_operation of this BlockStorageInstance.  # noqa: E501
        :rtype: CommonCode
        """
        return self._block_storage_instance_operation

    @block_storage_instance_operation.setter
    def block_storage_instance_operation(self, block_storage_instance_operation):
        """Sets the block_storage_instance_operation of this BlockStorageInstance.

        블록스토리지인스턴스OP  # noqa: E501

        :param block_storage_instance_operation: The block_storage_instance_operation of this BlockStorageInstance.  # noqa: E501
        :type: CommonCode
        """

        self._block_storage_instance_operation = block_storage_instance_operation

    @property
    def block_storage_instance_status_name(self):
        """Gets the block_storage_instance_status_name of this BlockStorageInstance.  # noqa: E501

        블록스토리지인스턴스상태명  # noqa: E501

        :return: The block_storage_instance_status_name of this BlockStorageInstance.  # noqa: E501
        :rtype: str
        """
        return self._block_storage_instance_status_name

    @block_storage_instance_status_name.setter
    def block_storage_instance_status_name(self, block_storage_instance_status_name):
        """Sets the block_storage_instance_status_name of this BlockStorageInstance.

        블록스토리지인스턴스상태명  # noqa: E501

        :param block_storage_instance_status_name: The block_storage_instance_status_name of this BlockStorageInstance.  # noqa: E501
        :type: str
        """

        self._block_storage_instance_status_name = block_storage_instance_status_name

    @property
    def create_date(self):
        """Gets the create_date of this BlockStorageInstance.  # noqa: E501

        생성일시  # noqa: E501

        :return: The create_date of this BlockStorageInstance.  # noqa: E501
        :rtype: str
        """
        return self._create_date

    @create_date.setter
    def create_date(self, create_date):
        """Sets the create_date of this BlockStorageInstance.

        생성일시  # noqa: E501

        :param create_date: The create_date of this BlockStorageInstance.  # noqa: E501
        :type: str
        """

        self._create_date = create_date

    @property
    def block_storage_instance_description(self):
        """Gets the block_storage_instance_description of this BlockStorageInstance.  # noqa: E501

        블록스토리지인스턴스설명  # noqa: E501

        :return: The block_storage_instance_description of this BlockStorageInstance.  # noqa: E501
        :rtype: str
        """
        return self._block_storage_instance_description

    @block_storage_instance_description.setter
    def block_storage_instance_description(self, block_storage_instance_description):
        """Sets the block_storage_instance_description of this BlockStorageInstance.

        블록스토리지인스턴스설명  # noqa: E501

        :param block_storage_instance_description: The block_storage_instance_description of this BlockStorageInstance.  # noqa: E501
        :type: str
        """

        self._block_storage_instance_description = block_storage_instance_description

    @property
    def disk_type(self):
        """Gets the disk_type of this BlockStorageInstance.  # noqa: E501

        디스크유형  # noqa: E501

        :return: The disk_type of this BlockStorageInstance.  # noqa: E501
        :rtype: CommonCode
        """
        return self._disk_type

    @disk_type.setter
    def disk_type(self, disk_type):
        """Sets the disk_type of this BlockStorageInstance.

        디스크유형  # noqa: E501

        :param disk_type: The disk_type of this BlockStorageInstance.  # noqa: E501
        :type: CommonCode
        """

        self._disk_type = disk_type

    @property
    def disk_detail_type(self):
        """Gets the disk_detail_type of this BlockStorageInstance.  # noqa: E501

        디스크상세유형  # noqa: E501

        :return: The disk_detail_type of this BlockStorageInstance.  # noqa: E501
        :rtype: CommonCode
        """
        return self._disk_detail_type

    @disk_detail_type.setter
    def disk_detail_type(self, disk_detail_type):
        """Sets the disk_detail_type of this BlockStorageInstance.

        디스크상세유형  # noqa: E501

        :param disk_detail_type: The disk_detail_type of this BlockStorageInstance.  # noqa: E501
        :type: CommonCode
        """

        self._disk_detail_type = disk_detail_type

    @property
    def max_iops_throughput(self):
        """Gets the max_iops_throughput of this BlockStorageInstance.  # noqa: E501

        최대 IOPS  # noqa: E501

        :return: The max_iops_throughput of this BlockStorageInstance.  # noqa: E501
        :rtype: int
        """
        return self._max_iops_throughput

    @max_iops_throughput.setter
    def max_iops_throughput(self, max_iops_throughput):
        """Sets the max_iops_throughput of this BlockStorageInstance.

        최대 IOPS  # noqa: E501

        :param max_iops_throughput: The max_iops_throughput of this BlockStorageInstance.  # noqa: E501
        :type: int
        """

        self._max_iops_throughput = max_iops_throughput

    @property
    def region(self):
        """Gets the region of this BlockStorageInstance.  # noqa: E501

          # noqa: E501

        :return: The region of this BlockStorageInstance.  # noqa: E501
        :rtype: Region
        """
        return self._region

    @region.setter
    def region(self, region):
        """Sets the region of this BlockStorageInstance.

          # noqa: E501

        :param region: The region of this BlockStorageInstance.  # noqa: E501
        :type: Region
        """

        self._region = region

    @property
    def zone(self):
        """Gets the zone of this BlockStorageInstance.  # noqa: E501

          # noqa: E501

        :return: The zone of this BlockStorageInstance.  # noqa: E501
        :rtype: Zone
        """
        return self._zone

    @zone.setter
    def zone(self, zone):
        """Sets the zone of this BlockStorageInstance.

          # noqa: E501

        :param zone: The zone of this BlockStorageInstance.  # noqa: E501
        :type: Zone
        """

        self._zone = zone

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, BlockStorageInstance):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
