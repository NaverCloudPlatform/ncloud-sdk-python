# coding: utf-8

"""
    server

    OpenAPI spec version: 2018-06-22T02:34:44Z
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import unittest

import ncloud_server
from ncloud_server.api.v2_api import V2Api  # noqa: E501
from ncloud_server.rest import ApiException


class TestV2Api(unittest.TestCase):
    """V2Api unit test stubs"""

    def setUp(self):
        configuration = ncloud_server.Configuration()
        configuration.access_key = "YOUR ACCESS KEY"
        configuration.secret_key = "YOUR SECRET KEY"
        self.api = ncloud_server.api.v2_api.V2Api(ncloud_server.ApiClient(configuration))  # noqa: E501

    def tearDown(self):
        pass

    def test_add_nas_volume_access_control(self):
        """Test case for add_nas_volume_access_control
        add_nas_volume_access_control_request = ncloud_server.AddNasVolumeAccessControlRequest()
        try:
            api_response = self.api.add_nas_volume_access_control(add_nas_volume_access_control_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->add_nas_volume_access_control: %s\n" % e)
        """
        pass

    def test_add_port_forwarding_rules(self):
        """Test case for add_port_forwarding_rules
        add_port_forwarding_rules_request = ncloud_server.AddPortForwardingRulesRequest()
        try:
            api_response = self.api.add_port_forwarding_rules(add_port_forwarding_rules_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->add_port_forwarding_rules: %s\n" % e)
        """
        pass

    def test_associate_public_ip_with_server_instance(self):
        """Test case for associate_public_ip_with_server_instance
        associate_public_ip_with_server_instance_request = ncloud_server.AssociatePublicIpWithServerInstanceRequest()
        try:
            api_response = self.api.associate_public_ip_with_server_instance(associate_public_ip_with_server_instance_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->associate_public_ip_with_server_instance: %s\n" % e)
        """
        pass

    def test_change_nas_volume_size(self):
        """Test case for change_nas_volume_size
        change_nas_volume_size_request = ncloud_server.ChangeNasVolumeSizeRequest()
        try:
            api_response = self.api.change_nas_volume_size(change_nas_volume_size_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->change_nas_volume_size: %s\n" % e)
        """
        pass

    def test_change_server_instance_spec(self):
        """Test case for change_server_instance_spec
        change_server_instance_spec_request = ncloud_server.ChangeServerInstanceSpecRequest()
        try:
            api_response = self.api.change_server_instance_spec(change_server_instance_spec_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->change_server_instance_spec: %s\n" % e)
        """
        pass

    def test_create_block_storage_instance(self):
        """Test case for create_block_storage_instance
        create_block_storage_instance_request = ncloud_server.CreateBlockStorageInstanceRequest()
        try:
            api_response = self.api.create_block_storage_instance(create_block_storage_instance_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->create_block_storage_instance: %s\n" % e)
        """
        pass

    def test_create_login_key(self):
        """Test case for create_login_key
        create_login_key_request = ncloud_server.CreateLoginKeyRequest()
        try:
            api_response = self.api.create_login_key(create_login_key_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->create_login_key: %s\n" % e)
        """
        pass

    def test_create_member_server_image(self):
        """Test case for create_member_server_image
        create_member_server_image_request = ncloud_server.CreateMemberServerImageRequest()
        try:
            api_response = self.api.create_member_server_image(create_member_server_image_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->create_member_server_image: %s\n" % e)
        """
        pass

    def test_create_nas_volume_instance(self):
        """Test case for create_nas_volume_instance
        create_nas_volume_instance_request = ncloud_server.CreateNasVolumeInstanceRequest()
        try:
            api_response = self.api.create_nas_volume_instance(create_nas_volume_instance_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->create_nas_volume_instance: %s\n" % e)
        """
        pass

    def test_create_public_ip_instance(self):
        """Test case for create_public_ip_instance
        create_public_ip_instance_request = ncloud_server.CreatePublicIpInstanceRequest()
        try:
            api_response = self.api.create_public_ip_instance(create_public_ip_instance_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->create_public_ip_instance: %s\n" % e)
        """
        pass

    def test_create_server_instances(self):
        """Test case for create_server_instances
        create_server_instances_request = ncloud_server.CreateServerInstancesRequest()
        try:
            api_response = self.api.create_server_instances(create_server_instances_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->create_server_instances: %s\n" % e)
        """
        pass

    def test_delete_block_storage_instances(self):
        """Test case for delete_block_storage_instances
        delete_block_storage_instances_request = ncloud_server.DeleteBlockStorageInstancesRequest()
        try:
            api_response = self.api.delete_block_storage_instances(delete_block_storage_instances_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->delete_block_storage_instances: %s\n" % e)
        """
        pass

    def test_delete_login_key(self):
        """Test case for delete_login_key
        delete_login_key_request = ncloud_server.DeleteLoginKeyRequest()
        try:
            api_response = self.api.delete_login_key(delete_login_key_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->delete_login_key: %s\n" % e)
        """
        pass

    def test_delete_member_server_images(self):
        """Test case for delete_member_server_images
        delete_member_server_images_request = ncloud_server.DeleteMemberServerImagesRequest()
        try:
            api_response = self.api.delete_member_server_images(delete_member_server_images_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->delete_member_server_images: %s\n" % e)
        """
        pass

    def test_delete_nas_volume_instance(self):
        """Test case for delete_nas_volume_instance
        delete_nas_volume_instance_request = ncloud_server.DeleteNasVolumeInstanceRequest()
        try:
            api_response = self.api.delete_nas_volume_instance(delete_nas_volume_instance_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->delete_nas_volume_instance: %s\n" % e)
        """
        pass

    def test_delete_port_forwarding_rules(self):
        """Test case for delete_port_forwarding_rules
        delete_port_forwarding_rules_request = ncloud_server.DeletePortForwardingRulesRequest()
        try:
            api_response = self.api.delete_port_forwarding_rules(delete_port_forwarding_rules_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->delete_port_forwarding_rules: %s\n" % e)
        """
        pass

    def test_delete_public_ip_instances(self):
        """Test case for delete_public_ip_instances
        delete_public_ip_instances_request = ncloud_server.DeletePublicIpInstancesRequest()
        try:
            api_response = self.api.delete_public_ip_instances(delete_public_ip_instances_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->delete_public_ip_instances: %s\n" % e)
        """
        pass

    def test_disassociate_public_ip_from_server_instance(self):
        """Test case for disassociate_public_ip_from_server_instance
        disassociate_public_ip_from_server_instance_request = ncloud_server.DisassociatePublicIpFromServerInstanceRequest()
        try:
            api_response = self.api.disassociate_public_ip_from_server_instance(disassociate_public_ip_from_server_instance_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->disassociate_public_ip_from_server_instance: %s\n" % e)
        """
        pass

    def test_get_access_control_group_list(self):
        """Test case for get_access_control_group_list
        get_access_control_group_list_request = ncloud_server.GetAccessControlGroupListRequest()
        try:
            api_response = self.api.get_access_control_group_list(get_access_control_group_list_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_access_control_group_list: %s\n" % e)
        """
        pass

    def test_get_access_control_group_server_instance_list(self):
        """Test case for get_access_control_group_server_instance_list
        get_access_control_group_server_instance_list_request = ncloud_server.GetAccessControlGroupServerInstanceListRequest()
        try:
            api_response = self.api.get_access_control_group_server_instance_list(get_access_control_group_server_instance_list_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_access_control_group_server_instance_list: %s\n" % e)
        """
        pass

    def test_get_access_control_rule_list(self):
        """Test case for get_access_control_rule_list
        get_access_control_rule_list_request = ncloud_server.GetAccessControlRuleListRequest()
        try:
            api_response = self.api.get_access_control_rule_list(get_access_control_rule_list_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_access_control_rule_list: %s\n" % e)
        """
        pass

    def test_get_block_storage_instance_list(self):
        """Test case for get_block_storage_instance_list
        get_block_storage_instance_list_request = ncloud_server.GetBlockStorageInstanceListRequest()
        try:
            api_response = self.api.get_block_storage_instance_list(get_block_storage_instance_list_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_block_storage_instance_list: %s\n" % e)
        """
        pass

    def test_get_block_storage_snapshot_instance_list(self):
        """Test case for get_block_storage_snapshot_instance_list
        get_block_storage_snapshot_instance_list_request = ncloud_server.GetBlockStorageSnapshotInstanceListRequest()
        try:
            api_response = self.api.get_block_storage_snapshot_instance_list(get_block_storage_snapshot_instance_list_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_block_storage_snapshot_instance_list: %s\n" % e)
        """
        pass

    def test_get_login_key_list(self):
        """Test case for get_login_key_list
        get_login_key_list_request = ncloud_server.GetLoginKeyListRequest()
        try:
            api_response = self.api.get_login_key_list(get_login_key_list_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_login_key_list: %s\n" % e)
        """
        pass

    def test_get_member_server_image_list(self):
        """Test case for get_member_server_image_list
        get_member_server_image_list_request = ncloud_server.GetMemberServerImageListRequest()
        try:
            api_response = self.api.get_member_server_image_list(get_member_server_image_list_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_member_server_image_list: %s\n" % e)
        """
        pass

    def test_get_nas_volume_instance_list(self):
        """Test case for get_nas_volume_instance_list
        get_nas_volume_instance_list_request = ncloud_server.GetNasVolumeInstanceListRequest()
        try:
            api_response = self.api.get_nas_volume_instance_list(get_nas_volume_instance_list_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_nas_volume_instance_list: %s\n" % e)
        """
        pass

    def test_get_nas_volume_instance_rating_list(self):
        """Test case for get_nas_volume_instance_rating_list
        get_nas_volume_instance_rating_list_request = ncloud_server.GetNasVolumeInstanceRatingListRequest()
        try:
            api_response = self.api.get_nas_volume_instance_rating_list(get_nas_volume_instance_rating_list_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_nas_volume_instance_rating_list: %s\n" % e)
        """
        pass

    def test_get_port_forwarding_rule_list(self):
        """Test case for get_port_forwarding_rule_list
        get_port_forwarding_rule_list_request = ncloud_server.GetPortForwardingRuleListRequest()
        try:
            api_response = self.api.get_port_forwarding_rule_list(get_port_forwarding_rule_list_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_port_forwarding_rule_list: %s\n" % e)
        """
        pass

    def test_get_public_ip_instance_list(self):
        """Test case for get_public_ip_instance_list
        get_public_ip_instance_list_request = ncloud_server.GetPublicIpInstanceListRequest()
        try:
            api_response = self.api.get_public_ip_instance_list(get_public_ip_instance_list_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_public_ip_instance_list: %s\n" % e)
        """
        pass

    def test_get_public_ip_target_server_instance_list(self):
        """Test case for get_public_ip_target_server_instance_list
        get_public_ip_target_server_instance_list_request = ncloud_server.GetPublicIpTargetServerInstanceListRequest()
        try:
            api_response = self.api.get_public_ip_target_server_instance_list(get_public_ip_target_server_instance_list_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_public_ip_target_server_instance_list: %s\n" % e)
        """
        pass

    def test_get_raid_list(self):
        """Test case for get_raid_list
        get_raid_list_request = ncloud_server.GetRaidListRequest()
        try:
            api_response = self.api.get_raid_list(get_raid_list_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_raid_list: %s\n" % e)
        """
        pass

    def test_get_region_list(self):
        """Test case for get_region_list
        get_region_list_request = ncloud_server.GetRegionListRequest()
        try:
            api_response = self.api.get_region_list(get_region_list_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_region_list: %s\n" % e)
        """
        pass

    def test_get_root_password(self):
        """Test case for get_root_password
        get_root_password_request = ncloud_server.GetRootPasswordRequest()
        try:
            api_response = self.api.get_root_password(get_root_password_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_root_password: %s\n" % e)
        """
        pass

    def test_get_server_image_product_list(self):
        """Test case for get_server_image_product_list
        get_server_image_product_list_request = ncloud_server.GetServerImageProductListRequest()
        try:
            api_response = self.api.get_server_image_product_list(get_server_image_product_list_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_server_image_product_list: %s\n" % e)
        """
        pass

    def test_get_server_instance_list(self):
        """Test case for get_server_instance_list
        get_server_instance_list_request = ncloud_server.GetServerInstanceListRequest()
        try:
            api_response = self.api.get_server_instance_list(get_server_instance_list_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_server_instance_list: %s\n" % e)
        """
        pass

    def test_get_server_product_list(self):
        """Test case for get_server_product_list
        get_server_product_list_request = ncloud_server.GetServerProductListRequest()
        try:
            api_response = self.api.get_server_product_list(get_server_product_list_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_server_product_list: %s\n" % e)
        """
        pass

    def test_get_zone_list(self):
        """Test case for get_zone_list
        get_zone_list_request = ncloud_server.GetZoneListRequest()
        try:
            api_response = self.api.get_zone_list(get_zone_list_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_zone_list: %s\n" % e)
        """
        pass

    def test_reboot_server_instances(self):
        """Test case for reboot_server_instances
        reboot_server_instances_request = ncloud_server.RebootServerInstancesRequest()
        try:
            api_response = self.api.reboot_server_instances(reboot_server_instances_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->reboot_server_instances: %s\n" % e)
        """
        pass

    def test_recreate_server_instance(self):
        """Test case for recreate_server_instance
        recreate_server_instance_request = ncloud_server.RecreateServerInstanceRequest()
        try:
            api_response = self.api.recreate_server_instance(recreate_server_instance_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->recreate_server_instance: %s\n" % e)
        """
        pass

    def test_remove_nas_volume_access_control(self):
        """Test case for remove_nas_volume_access_control
        remove_nas_volume_access_control_request = ncloud_server.RemoveNasVolumeAccessControlRequest()
        try:
            api_response = self.api.remove_nas_volume_access_control(remove_nas_volume_access_control_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->remove_nas_volume_access_control: %s\n" % e)
        """
        pass

    def test_set_nas_volume_access_control(self):
        """Test case for set_nas_volume_access_control
        set_nas_volume_access_control_request = ncloud_server.SetNasVolumeAccessControlRequest()
        try:
            api_response = self.api.set_nas_volume_access_control(set_nas_volume_access_control_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->set_nas_volume_access_control: %s\n" % e)
        """
        pass

    def test_start_server_instances(self):
        """Test case for start_server_instances
        start_server_instances_request = ncloud_server.StartServerInstancesRequest()
        try:
            api_response = self.api.start_server_instances(start_server_instances_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->start_server_instances: %s\n" % e)
        """
        pass

    def test_stop_server_instances(self):
        """Test case for stop_server_instances
        stop_server_instances_request = ncloud_server.StopServerInstancesRequest()
        try:
            api_response = self.api.stop_server_instances(stop_server_instances_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->stop_server_instances: %s\n" % e)
        """
        pass

    def test_terminate_server_instances(self):
        """Test case for terminate_server_instances
        terminate_server_instances_request = ncloud_server.TerminateServerInstancesRequest()
        try:
            api_response = self.api.terminate_server_instances(terminate_server_instances_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->terminate_server_instances: %s\n" % e)
        """
        pass


if __name__ == '__main__':
    unittest.main()
