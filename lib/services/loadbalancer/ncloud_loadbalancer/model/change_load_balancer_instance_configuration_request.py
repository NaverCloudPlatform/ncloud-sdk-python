# coding: utf-8

"""
    loadbalancer

    OpenAPI spec version: 2018-06-21T02:19:18Z
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from ncloud_loadbalancer.model.load_balancer_rule_parameter import LoadBalancerRuleParameter  # noqa: F401,E501


class ChangeLoadBalancerInstanceConfigurationRequest(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'load_balancer_instance_no': 'str',
        'load_balancer_algorithm_type_code': 'str',
        'load_balancer_description': 'str',
        'load_balancer_rule_list': 'list[LoadBalancerRuleParameter]'
    }

    attribute_map = {
        'load_balancer_instance_no': 'loadBalancerInstanceNo',
        'load_balancer_algorithm_type_code': 'loadBalancerAlgorithmTypeCode',
        'load_balancer_description': 'loadBalancerDescription',
        'load_balancer_rule_list': 'loadBalancerRuleList'
    }

    def __init__(self, load_balancer_instance_no=None, load_balancer_algorithm_type_code=None, load_balancer_description=None, load_balancer_rule_list=None):  # noqa: E501
        """ChangeLoadBalancerInstanceConfigurationRequest - a model defined in Swagger"""  # noqa: E501

        self._load_balancer_instance_no = None
        self._load_balancer_algorithm_type_code = None
        self._load_balancer_description = None
        self._load_balancer_rule_list = None
        self.discriminator = None

        self.load_balancer_instance_no = load_balancer_instance_no
        self.load_balancer_algorithm_type_code = load_balancer_algorithm_type_code
        if load_balancer_description is not None:
            self.load_balancer_description = load_balancer_description
        self.load_balancer_rule_list = load_balancer_rule_list

    @property
    def load_balancer_instance_no(self):
        """Gets the load_balancer_instance_no of this ChangeLoadBalancerInstanceConfigurationRequest.  # noqa: E501

        로드밸런서인스턴스번호  # noqa: E501

        :return: The load_balancer_instance_no of this ChangeLoadBalancerInstanceConfigurationRequest.  # noqa: E501
        :rtype: str
        """
        return self._load_balancer_instance_no

    @load_balancer_instance_no.setter
    def load_balancer_instance_no(self, load_balancer_instance_no):
        """Sets the load_balancer_instance_no of this ChangeLoadBalancerInstanceConfigurationRequest.

        로드밸런서인스턴스번호  # noqa: E501

        :param load_balancer_instance_no: The load_balancer_instance_no of this ChangeLoadBalancerInstanceConfigurationRequest.  # noqa: E501
        :type: str
        """
        if load_balancer_instance_no is None:
            raise ValueError("Invalid value for `load_balancer_instance_no`, must not be `None`")  # noqa: E501

        self._load_balancer_instance_no = load_balancer_instance_no

    @property
    def load_balancer_algorithm_type_code(self):
        """Gets the load_balancer_algorithm_type_code of this ChangeLoadBalancerInstanceConfigurationRequest.  # noqa: E501

        로드밸런서알고리즘구분코드  # noqa: E501

        :return: The load_balancer_algorithm_type_code of this ChangeLoadBalancerInstanceConfigurationRequest.  # noqa: E501
        :rtype: str
        """
        return self._load_balancer_algorithm_type_code

    @load_balancer_algorithm_type_code.setter
    def load_balancer_algorithm_type_code(self, load_balancer_algorithm_type_code):
        """Sets the load_balancer_algorithm_type_code of this ChangeLoadBalancerInstanceConfigurationRequest.

        로드밸런서알고리즘구분코드  # noqa: E501

        :param load_balancer_algorithm_type_code: The load_balancer_algorithm_type_code of this ChangeLoadBalancerInstanceConfigurationRequest.  # noqa: E501
        :type: str
        """
        if load_balancer_algorithm_type_code is None:
            raise ValueError("Invalid value for `load_balancer_algorithm_type_code`, must not be `None`")  # noqa: E501

        self._load_balancer_algorithm_type_code = load_balancer_algorithm_type_code

    @property
    def load_balancer_description(self):
        """Gets the load_balancer_description of this ChangeLoadBalancerInstanceConfigurationRequest.  # noqa: E501

        로드밸런서설명  # noqa: E501

        :return: The load_balancer_description of this ChangeLoadBalancerInstanceConfigurationRequest.  # noqa: E501
        :rtype: str
        """
        return self._load_balancer_description

    @load_balancer_description.setter
    def load_balancer_description(self, load_balancer_description):
        """Sets the load_balancer_description of this ChangeLoadBalancerInstanceConfigurationRequest.

        로드밸런서설명  # noqa: E501

        :param load_balancer_description: The load_balancer_description of this ChangeLoadBalancerInstanceConfigurationRequest.  # noqa: E501
        :type: str
        """

        self._load_balancer_description = load_balancer_description

    @property
    def load_balancer_rule_list(self):
        """Gets the load_balancer_rule_list of this ChangeLoadBalancerInstanceConfigurationRequest.  # noqa: E501

        로드밸런RULE리스트  # noqa: E501

        :return: The load_balancer_rule_list of this ChangeLoadBalancerInstanceConfigurationRequest.  # noqa: E501
        :rtype: list[LoadBalancerRuleParameter]
        """
        return self._load_balancer_rule_list

    @load_balancer_rule_list.setter
    def load_balancer_rule_list(self, load_balancer_rule_list):
        """Sets the load_balancer_rule_list of this ChangeLoadBalancerInstanceConfigurationRequest.

        로드밸런RULE리스트  # noqa: E501

        :param load_balancer_rule_list: The load_balancer_rule_list of this ChangeLoadBalancerInstanceConfigurationRequest.  # noqa: E501
        :type: list[LoadBalancerRuleParameter]
        """
        if load_balancer_rule_list is None:
            raise ValueError("Invalid value for `load_balancer_rule_list`, must not be `None`")  # noqa: E501

        self._load_balancer_rule_list = load_balancer_rule_list

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ChangeLoadBalancerInstanceConfigurationRequest):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
