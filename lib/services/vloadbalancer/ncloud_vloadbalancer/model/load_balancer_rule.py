# coding: utf-8

"""
    vloadbalancer

    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from ncloud_vloadbalancer.model.load_balancer_rule_action import LoadBalancerRuleAction  # noqa: F401,E501
from ncloud_vloadbalancer.model.load_balancer_rule_condition import LoadBalancerRuleCondition  # noqa: F401,E501


class LoadBalancerRule(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'load_balancer_rule_no': 'str',
        'load_balancer_listener_no': 'str',
        'priority': 'int',
        'load_balancer_rule_condition_list': 'list[LoadBalancerRuleCondition]',
        'load_balancer_rule_action_list': 'list[LoadBalancerRuleAction]'
    }

    attribute_map = {
        'load_balancer_rule_no': 'loadBalancerRuleNo',
        'load_balancer_listener_no': 'loadBalancerListenerNo',
        'priority': 'priority',
        'load_balancer_rule_condition_list': 'loadBalancerRuleConditionList',
        'load_balancer_rule_action_list': 'loadBalancerRuleActionList'
    }

    def __init__(self, load_balancer_rule_no=None, load_balancer_listener_no=None, priority=None, load_balancer_rule_condition_list=None, load_balancer_rule_action_list=None):  # noqa: E501
        """LoadBalancerRule - a model defined in Swagger"""  # noqa: E501

        self._load_balancer_rule_no = None
        self._load_balancer_listener_no = None
        self._priority = None
        self._load_balancer_rule_condition_list = None
        self._load_balancer_rule_action_list = None
        self.discriminator = None

        if load_balancer_rule_no is not None:
            self.load_balancer_rule_no = load_balancer_rule_no
        if load_balancer_listener_no is not None:
            self.load_balancer_listener_no = load_balancer_listener_no
        if priority is not None:
            self.priority = priority
        if load_balancer_rule_condition_list is not None:
            self.load_balancer_rule_condition_list = load_balancer_rule_condition_list
        if load_balancer_rule_action_list is not None:
            self.load_balancer_rule_action_list = load_balancer_rule_action_list

    @property
    def load_balancer_rule_no(self):
        """Gets the load_balancer_rule_no of this LoadBalancerRule.  # noqa: E501

        로드밸런서룰번호  # noqa: E501

        :return: The load_balancer_rule_no of this LoadBalancerRule.  # noqa: E501
        :rtype: str
        """
        return self._load_balancer_rule_no

    @load_balancer_rule_no.setter
    def load_balancer_rule_no(self, load_balancer_rule_no):
        """Sets the load_balancer_rule_no of this LoadBalancerRule.

        로드밸런서룰번호  # noqa: E501

        :param load_balancer_rule_no: The load_balancer_rule_no of this LoadBalancerRule.  # noqa: E501
        :type: str
        """

        self._load_balancer_rule_no = load_balancer_rule_no

    @property
    def load_balancer_listener_no(self):
        """Gets the load_balancer_listener_no of this LoadBalancerRule.  # noqa: E501

        로드밸런서리스너번호  # noqa: E501

        :return: The load_balancer_listener_no of this LoadBalancerRule.  # noqa: E501
        :rtype: str
        """
        return self._load_balancer_listener_no

    @load_balancer_listener_no.setter
    def load_balancer_listener_no(self, load_balancer_listener_no):
        """Sets the load_balancer_listener_no of this LoadBalancerRule.

        로드밸런서리스너번호  # noqa: E501

        :param load_balancer_listener_no: The load_balancer_listener_no of this LoadBalancerRule.  # noqa: E501
        :type: str
        """

        self._load_balancer_listener_no = load_balancer_listener_no

    @property
    def priority(self):
        """Gets the priority of this LoadBalancerRule.  # noqa: E501

        우선순위  # noqa: E501

        :return: The priority of this LoadBalancerRule.  # noqa: E501
        :rtype: int
        """
        return self._priority

    @priority.setter
    def priority(self, priority):
        """Sets the priority of this LoadBalancerRule.

        우선순위  # noqa: E501

        :param priority: The priority of this LoadBalancerRule.  # noqa: E501
        :type: int
        """

        self._priority = priority

    @property
    def load_balancer_rule_condition_list(self):
        """Gets the load_balancer_rule_condition_list of this LoadBalancerRule.  # noqa: E501

        로드밸런서룰조건리스트  # noqa: E501

        :return: The load_balancer_rule_condition_list of this LoadBalancerRule.  # noqa: E501
        :rtype: list[LoadBalancerRuleCondition]
        """
        return self._load_balancer_rule_condition_list

    @load_balancer_rule_condition_list.setter
    def load_balancer_rule_condition_list(self, load_balancer_rule_condition_list):
        """Sets the load_balancer_rule_condition_list of this LoadBalancerRule.

        로드밸런서룰조건리스트  # noqa: E501

        :param load_balancer_rule_condition_list: The load_balancer_rule_condition_list of this LoadBalancerRule.  # noqa: E501
        :type: list[LoadBalancerRuleCondition]
        """

        self._load_balancer_rule_condition_list = load_balancer_rule_condition_list

    @property
    def load_balancer_rule_action_list(self):
        """Gets the load_balancer_rule_action_list of this LoadBalancerRule.  # noqa: E501

        로드밸런서룰액션리스트  # noqa: E501

        :return: The load_balancer_rule_action_list of this LoadBalancerRule.  # noqa: E501
        :rtype: list[LoadBalancerRuleAction]
        """
        return self._load_balancer_rule_action_list

    @load_balancer_rule_action_list.setter
    def load_balancer_rule_action_list(self, load_balancer_rule_action_list):
        """Sets the load_balancer_rule_action_list of this LoadBalancerRule.

        로드밸런서룰액션리스트  # noqa: E501

        :param load_balancer_rule_action_list: The load_balancer_rule_action_list of this LoadBalancerRule.  # noqa: E501
        :type: list[LoadBalancerRuleAction]
        """

        self._load_balancer_rule_action_list = load_balancer_rule_action_list

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, LoadBalancerRule):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
