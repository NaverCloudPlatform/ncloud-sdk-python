# coding: utf-8

"""
    vloadbalancer

    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from ncloud_vloadbalancer.model.load_balancer_listener_parameter import LoadBalancerListenerParameter  # noqa: F401,E501


class CreateLoadBalancerInstanceRequest(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'region_code': 'str',
        'idle_timeout': 'int',
        'load_balancer_description': 'str',
        'load_balancer_network_type_code': 'str',
        'load_balancer_type_code': 'str',
        'load_balancer_listener_list': 'list[LoadBalancerListenerParameter]',
        'load_balancer_name': 'str',
        'throughput_type_code': 'str',
        'vpc_no': 'str',
        'subnet_no_list': 'list[str]'
    }

    attribute_map = {
        'region_code': 'regionCode',
        'idle_timeout': 'idleTimeout',
        'load_balancer_description': 'loadBalancerDescription',
        'load_balancer_network_type_code': 'loadBalancerNetworkTypeCode',
        'load_balancer_type_code': 'loadBalancerTypeCode',
        'load_balancer_listener_list': 'loadBalancerListenerList',
        'load_balancer_name': 'loadBalancerName',
        'throughput_type_code': 'throughputTypeCode',
        'vpc_no': 'vpcNo',
        'subnet_no_list': 'subnetNoList'
    }

    def __init__(self, region_code=None, idle_timeout=None, load_balancer_description=None, load_balancer_network_type_code=None, load_balancer_type_code=None, load_balancer_listener_list=None, load_balancer_name=None, throughput_type_code=None, vpc_no=None, subnet_no_list=None):  # noqa: E501
        """CreateLoadBalancerInstanceRequest - a model defined in Swagger"""  # noqa: E501

        self._region_code = None
        self._idle_timeout = None
        self._load_balancer_description = None
        self._load_balancer_network_type_code = None
        self._load_balancer_type_code = None
        self._load_balancer_listener_list = None
        self._load_balancer_name = None
        self._throughput_type_code = None
        self._vpc_no = None
        self._subnet_no_list = None
        self.discriminator = None

        if region_code is not None:
            self.region_code = region_code
        if idle_timeout is not None:
            self.idle_timeout = idle_timeout
        if load_balancer_description is not None:
            self.load_balancer_description = load_balancer_description
        if load_balancer_network_type_code is not None:
            self.load_balancer_network_type_code = load_balancer_network_type_code
        self.load_balancer_type_code = load_balancer_type_code
        if load_balancer_listener_list is not None:
            self.load_balancer_listener_list = load_balancer_listener_list
        if load_balancer_name is not None:
            self.load_balancer_name = load_balancer_name
        if throughput_type_code is not None:
            self.throughput_type_code = throughput_type_code
        self.vpc_no = vpc_no
        self.subnet_no_list = subnet_no_list

    @property
    def region_code(self):
        """Gets the region_code of this CreateLoadBalancerInstanceRequest.  # noqa: E501

        REGION코드  # noqa: E501

        :return: The region_code of this CreateLoadBalancerInstanceRequest.  # noqa: E501
        :rtype: str
        """
        return self._region_code

    @region_code.setter
    def region_code(self, region_code):
        """Sets the region_code of this CreateLoadBalancerInstanceRequest.

        REGION코드  # noqa: E501

        :param region_code: The region_code of this CreateLoadBalancerInstanceRequest.  # noqa: E501
        :type: str
        """

        self._region_code = region_code

    @property
    def idle_timeout(self):
        """Gets the idle_timeout of this CreateLoadBalancerInstanceRequest.  # noqa: E501

        연결타임아웃  # noqa: E501

        :return: The idle_timeout of this CreateLoadBalancerInstanceRequest.  # noqa: E501
        :rtype: int
        """
        return self._idle_timeout

    @idle_timeout.setter
    def idle_timeout(self, idle_timeout):
        """Sets the idle_timeout of this CreateLoadBalancerInstanceRequest.

        연결타임아웃  # noqa: E501

        :param idle_timeout: The idle_timeout of this CreateLoadBalancerInstanceRequest.  # noqa: E501
        :type: int
        """

        self._idle_timeout = idle_timeout

    @property
    def load_balancer_description(self):
        """Gets the load_balancer_description of this CreateLoadBalancerInstanceRequest.  # noqa: E501

        로드밸런서설명  # noqa: E501

        :return: The load_balancer_description of this CreateLoadBalancerInstanceRequest.  # noqa: E501
        :rtype: str
        """
        return self._load_balancer_description

    @load_balancer_description.setter
    def load_balancer_description(self, load_balancer_description):
        """Sets the load_balancer_description of this CreateLoadBalancerInstanceRequest.

        로드밸런서설명  # noqa: E501

        :param load_balancer_description: The load_balancer_description of this CreateLoadBalancerInstanceRequest.  # noqa: E501
        :type: str
        """

        self._load_balancer_description = load_balancer_description

    @property
    def load_balancer_network_type_code(self):
        """Gets the load_balancer_network_type_code of this CreateLoadBalancerInstanceRequest.  # noqa: E501

        로드밸런서네트워크유형코드  # noqa: E501

        :return: The load_balancer_network_type_code of this CreateLoadBalancerInstanceRequest.  # noqa: E501
        :rtype: str
        """
        return self._load_balancer_network_type_code

    @load_balancer_network_type_code.setter
    def load_balancer_network_type_code(self, load_balancer_network_type_code):
        """Sets the load_balancer_network_type_code of this CreateLoadBalancerInstanceRequest.

        로드밸런서네트워크유형코드  # noqa: E501

        :param load_balancer_network_type_code: The load_balancer_network_type_code of this CreateLoadBalancerInstanceRequest.  # noqa: E501
        :type: str
        """

        self._load_balancer_network_type_code = load_balancer_network_type_code

    @property
    def load_balancer_type_code(self):
        """Gets the load_balancer_type_code of this CreateLoadBalancerInstanceRequest.  # noqa: E501

        로드밸런서유형코드  # noqa: E501

        :return: The load_balancer_type_code of this CreateLoadBalancerInstanceRequest.  # noqa: E501
        :rtype: str
        """
        return self._load_balancer_type_code

    @load_balancer_type_code.setter
    def load_balancer_type_code(self, load_balancer_type_code):
        """Sets the load_balancer_type_code of this CreateLoadBalancerInstanceRequest.

        로드밸런서유형코드  # noqa: E501

        :param load_balancer_type_code: The load_balancer_type_code of this CreateLoadBalancerInstanceRequest.  # noqa: E501
        :type: str
        """
        if load_balancer_type_code is None:
            raise ValueError("Invalid value for `load_balancer_type_code`, must not be `None`")  # noqa: E501

        self._load_balancer_type_code = load_balancer_type_code

    @property
    def load_balancer_listener_list(self):
        """Gets the load_balancer_listener_list of this CreateLoadBalancerInstanceRequest.  # noqa: E501

        로드밸런서리스너리스트  # noqa: E501

        :return: The load_balancer_listener_list of this CreateLoadBalancerInstanceRequest.  # noqa: E501
        :rtype: list[LoadBalancerListenerParameter]
        """
        return self._load_balancer_listener_list

    @load_balancer_listener_list.setter
    def load_balancer_listener_list(self, load_balancer_listener_list):
        """Sets the load_balancer_listener_list of this CreateLoadBalancerInstanceRequest.

        로드밸런서리스너리스트  # noqa: E501

        :param load_balancer_listener_list: The load_balancer_listener_list of this CreateLoadBalancerInstanceRequest.  # noqa: E501
        :type: list[LoadBalancerListenerParameter]
        """

        self._load_balancer_listener_list = load_balancer_listener_list

    @property
    def load_balancer_name(self):
        """Gets the load_balancer_name of this CreateLoadBalancerInstanceRequest.  # noqa: E501

        로드밸런서이름  # noqa: E501

        :return: The load_balancer_name of this CreateLoadBalancerInstanceRequest.  # noqa: E501
        :rtype: str
        """
        return self._load_balancer_name

    @load_balancer_name.setter
    def load_balancer_name(self, load_balancer_name):
        """Sets the load_balancer_name of this CreateLoadBalancerInstanceRequest.

        로드밸런서이름  # noqa: E501

        :param load_balancer_name: The load_balancer_name of this CreateLoadBalancerInstanceRequest.  # noqa: E501
        :type: str
        """

        self._load_balancer_name = load_balancer_name

    @property
    def throughput_type_code(self):
        """Gets the throughput_type_code of this CreateLoadBalancerInstanceRequest.  # noqa: E501

        부하처리성능유형코드  # noqa: E501

        :return: The throughput_type_code of this CreateLoadBalancerInstanceRequest.  # noqa: E501
        :rtype: str
        """
        return self._throughput_type_code

    @throughput_type_code.setter
    def throughput_type_code(self, throughput_type_code):
        """Sets the throughput_type_code of this CreateLoadBalancerInstanceRequest.

        부하처리성능유형코드  # noqa: E501

        :param throughput_type_code: The throughput_type_code of this CreateLoadBalancerInstanceRequest.  # noqa: E501
        :type: str
        """

        self._throughput_type_code = throughput_type_code

    @property
    def vpc_no(self):
        """Gets the vpc_no of this CreateLoadBalancerInstanceRequest.  # noqa: E501

        VPC번호  # noqa: E501

        :return: The vpc_no of this CreateLoadBalancerInstanceRequest.  # noqa: E501
        :rtype: str
        """
        return self._vpc_no

    @vpc_no.setter
    def vpc_no(self, vpc_no):
        """Sets the vpc_no of this CreateLoadBalancerInstanceRequest.

        VPC번호  # noqa: E501

        :param vpc_no: The vpc_no of this CreateLoadBalancerInstanceRequest.  # noqa: E501
        :type: str
        """
        if vpc_no is None:
            raise ValueError("Invalid value for `vpc_no`, must not be `None`")  # noqa: E501

        self._vpc_no = vpc_no

    @property
    def subnet_no_list(self):
        """Gets the subnet_no_list of this CreateLoadBalancerInstanceRequest.  # noqa: E501

        서브넷번호리스트  # noqa: E501

        :return: The subnet_no_list of this CreateLoadBalancerInstanceRequest.  # noqa: E501
        :rtype: list[str]
        """
        return self._subnet_no_list

    @subnet_no_list.setter
    def subnet_no_list(self, subnet_no_list):
        """Sets the subnet_no_list of this CreateLoadBalancerInstanceRequest.

        서브넷번호리스트  # noqa: E501

        :param subnet_no_list: The subnet_no_list of this CreateLoadBalancerInstanceRequest.  # noqa: E501
        :type: list[str]
        """
        if subnet_no_list is None:
            raise ValueError("Invalid value for `subnet_no_list`, must not be `None`")  # noqa: E501

        self._subnet_no_list = subnet_no_list

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CreateLoadBalancerInstanceRequest):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
