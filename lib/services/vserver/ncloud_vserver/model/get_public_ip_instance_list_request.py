# coding: utf-8

"""
    vserver

    OpenAPI spec version: 2020-09-17T02:28:03Z
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class GetPublicIpInstanceListRequest(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'region_code': 'str',
        'public_ip_instance_no_list': 'list[str]',
        'public_ip': 'str',
        'private_ip': 'str',
        'is_associated': 'bool',
        'server_name': 'str',
        'public_ip_instance_status_code': 'str',
        'page_no': 'int',
        'page_size': 'int',
        'vpc_no': 'str'
    }

    attribute_map = {
        'region_code': 'regionCode',
        'public_ip_instance_no_list': 'publicIpInstanceNoList',
        'public_ip': 'publicIp',
        'private_ip': 'privateIp',
        'is_associated': 'isAssociated',
        'server_name': 'serverName',
        'public_ip_instance_status_code': 'publicIpInstanceStatusCode',
        'page_no': 'pageNo',
        'page_size': 'pageSize',
        'vpc_no': 'vpcNo'
    }

    def __init__(self, region_code=None, public_ip_instance_no_list=None, public_ip=None, private_ip=None, is_associated=None, server_name=None, public_ip_instance_status_code=None, page_no=None, page_size=None, vpc_no=None):  # noqa: E501
        """GetPublicIpInstanceListRequest - a model defined in Swagger"""  # noqa: E501

        self._region_code = None
        self._public_ip_instance_no_list = None
        self._public_ip = None
        self._private_ip = None
        self._is_associated = None
        self._server_name = None
        self._public_ip_instance_status_code = None
        self._page_no = None
        self._page_size = None
        self._vpc_no = None
        self.discriminator = None

        if region_code is not None:
            self.region_code = region_code
        if public_ip_instance_no_list is not None:
            self.public_ip_instance_no_list = public_ip_instance_no_list
        if public_ip is not None:
            self.public_ip = public_ip
        if private_ip is not None:
            self.private_ip = private_ip
        if is_associated is not None:
            self.is_associated = is_associated
        if server_name is not None:
            self.server_name = server_name
        if public_ip_instance_status_code is not None:
            self.public_ip_instance_status_code = public_ip_instance_status_code
        if page_no is not None:
            self.page_no = page_no
        if page_size is not None:
            self.page_size = page_size
        if vpc_no is not None:
            self.vpc_no = vpc_no

    @property
    def region_code(self):
        """Gets the region_code of this GetPublicIpInstanceListRequest.  # noqa: E501

        REGION코드  # noqa: E501

        :return: The region_code of this GetPublicIpInstanceListRequest.  # noqa: E501
        :rtype: str
        """
        return self._region_code

    @region_code.setter
    def region_code(self, region_code):
        """Sets the region_code of this GetPublicIpInstanceListRequest.

        REGION코드  # noqa: E501

        :param region_code: The region_code of this GetPublicIpInstanceListRequest.  # noqa: E501
        :type: str
        """

        self._region_code = region_code

    @property
    def public_ip_instance_no_list(self):
        """Gets the public_ip_instance_no_list of this GetPublicIpInstanceListRequest.  # noqa: E501

        공인IP인스턴스번호리스트  # noqa: E501

        :return: The public_ip_instance_no_list of this GetPublicIpInstanceListRequest.  # noqa: E501
        :rtype: list[str]
        """
        return self._public_ip_instance_no_list

    @public_ip_instance_no_list.setter
    def public_ip_instance_no_list(self, public_ip_instance_no_list):
        """Sets the public_ip_instance_no_list of this GetPublicIpInstanceListRequest.

        공인IP인스턴스번호리스트  # noqa: E501

        :param public_ip_instance_no_list: The public_ip_instance_no_list of this GetPublicIpInstanceListRequest.  # noqa: E501
        :type: list[str]
        """

        self._public_ip_instance_no_list = public_ip_instance_no_list

    @property
    def public_ip(self):
        """Gets the public_ip of this GetPublicIpInstanceListRequest.  # noqa: E501

        공인IP주소  # noqa: E501

        :return: The public_ip of this GetPublicIpInstanceListRequest.  # noqa: E501
        :rtype: str
        """
        return self._public_ip

    @public_ip.setter
    def public_ip(self, public_ip):
        """Sets the public_ip of this GetPublicIpInstanceListRequest.

        공인IP주소  # noqa: E501

        :param public_ip: The public_ip of this GetPublicIpInstanceListRequest.  # noqa: E501
        :type: str
        """

        self._public_ip = public_ip

    @property
    def private_ip(self):
        """Gets the private_ip of this GetPublicIpInstanceListRequest.  # noqa: E501

        비공인IP주소  # noqa: E501

        :return: The private_ip of this GetPublicIpInstanceListRequest.  # noqa: E501
        :rtype: str
        """
        return self._private_ip

    @private_ip.setter
    def private_ip(self, private_ip):
        """Sets the private_ip of this GetPublicIpInstanceListRequest.

        비공인IP주소  # noqa: E501

        :param private_ip: The private_ip of this GetPublicIpInstanceListRequest.  # noqa: E501
        :type: str
        """

        self._private_ip = private_ip

    @property
    def is_associated(self):
        """Gets the is_associated of this GetPublicIpInstanceListRequest.  # noqa: E501

        할당여부  # noqa: E501

        :return: The is_associated of this GetPublicIpInstanceListRequest.  # noqa: E501
        :rtype: bool
        """
        return self._is_associated

    @is_associated.setter
    def is_associated(self, is_associated):
        """Sets the is_associated of this GetPublicIpInstanceListRequest.

        할당여부  # noqa: E501

        :param is_associated: The is_associated of this GetPublicIpInstanceListRequest.  # noqa: E501
        :type: bool
        """

        self._is_associated = is_associated

    @property
    def server_name(self):
        """Gets the server_name of this GetPublicIpInstanceListRequest.  # noqa: E501

        서버이름  # noqa: E501

        :return: The server_name of this GetPublicIpInstanceListRequest.  # noqa: E501
        :rtype: str
        """
        return self._server_name

    @server_name.setter
    def server_name(self, server_name):
        """Sets the server_name of this GetPublicIpInstanceListRequest.

        서버이름  # noqa: E501

        :param server_name: The server_name of this GetPublicIpInstanceListRequest.  # noqa: E501
        :type: str
        """

        self._server_name = server_name

    @property
    def public_ip_instance_status_code(self):
        """Gets the public_ip_instance_status_code of this GetPublicIpInstanceListRequest.  # noqa: E501

        공인IP인스턴스상태코드  # noqa: E501

        :return: The public_ip_instance_status_code of this GetPublicIpInstanceListRequest.  # noqa: E501
        :rtype: str
        """
        return self._public_ip_instance_status_code

    @public_ip_instance_status_code.setter
    def public_ip_instance_status_code(self, public_ip_instance_status_code):
        """Sets the public_ip_instance_status_code of this GetPublicIpInstanceListRequest.

        공인IP인스턴스상태코드  # noqa: E501

        :param public_ip_instance_status_code: The public_ip_instance_status_code of this GetPublicIpInstanceListRequest.  # noqa: E501
        :type: str
        """

        self._public_ip_instance_status_code = public_ip_instance_status_code

    @property
    def page_no(self):
        """Gets the page_no of this GetPublicIpInstanceListRequest.  # noqa: E501

        페이지번호  # noqa: E501

        :return: The page_no of this GetPublicIpInstanceListRequest.  # noqa: E501
        :rtype: int
        """
        return self._page_no

    @page_no.setter
    def page_no(self, page_no):
        """Sets the page_no of this GetPublicIpInstanceListRequest.

        페이지번호  # noqa: E501

        :param page_no: The page_no of this GetPublicIpInstanceListRequest.  # noqa: E501
        :type: int
        """

        self._page_no = page_no

    @property
    def page_size(self):
        """Gets the page_size of this GetPublicIpInstanceListRequest.  # noqa: E501

        페이지사이즈  # noqa: E501

        :return: The page_size of this GetPublicIpInstanceListRequest.  # noqa: E501
        :rtype: int
        """
        return self._page_size

    @page_size.setter
    def page_size(self, page_size):
        """Sets the page_size of this GetPublicIpInstanceListRequest.

        페이지사이즈  # noqa: E501

        :param page_size: The page_size of this GetPublicIpInstanceListRequest.  # noqa: E501
        :type: int
        """

        self._page_size = page_size

    @property
    def vpc_no(self):
        """Gets the vpc_no of this GetPublicIpInstanceListRequest.  # noqa: E501

        VPC번호  # noqa: E501

        :return: The vpc_no of this GetPublicIpInstanceListRequest.  # noqa: E501
        :rtype: str
        """
        return self._vpc_no

    @vpc_no.setter
    def vpc_no(self, vpc_no):
        """Sets the vpc_no of this GetPublicIpInstanceListRequest.

        VPC번호  # noqa: E501

        :param vpc_no: The vpc_no of this GetPublicIpInstanceListRequest.  # noqa: E501
        :type: str
        """

        self._vpc_no = vpc_no

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GetPublicIpInstanceListRequest):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
