# coding: utf-8

"""
    vserver

    OpenAPI spec version: 2020-09-17T02:28:03Z
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class GetServerProductListRequest(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'region_code': 'str',
        'zone_code': 'str',
        'server_image_product_code': 'str',
        'exclusion_product_code': 'str',
        'product_code': 'str'
    }

    attribute_map = {
        'region_code': 'regionCode',
        'zone_code': 'zoneCode',
        'server_image_product_code': 'serverImageProductCode',
        'exclusion_product_code': 'exclusionProductCode',
        'product_code': 'productCode'
    }

    def __init__(self, region_code=None, zone_code=None, server_image_product_code=None, exclusion_product_code=None, product_code=None):  # noqa: E501
        """GetServerProductListRequest - a model defined in Swagger"""  # noqa: E501

        self._region_code = None
        self._zone_code = None
        self._server_image_product_code = None
        self._exclusion_product_code = None
        self._product_code = None
        self.discriminator = None

        if region_code is not None:
            self.region_code = region_code
        if zone_code is not None:
            self.zone_code = zone_code
        self.server_image_product_code = server_image_product_code
        if exclusion_product_code is not None:
            self.exclusion_product_code = exclusion_product_code
        if product_code is not None:
            self.product_code = product_code

    @property
    def region_code(self):
        """Gets the region_code of this GetServerProductListRequest.  # noqa: E501

        REGION코드  # noqa: E501

        :return: The region_code of this GetServerProductListRequest.  # noqa: E501
        :rtype: str
        """
        return self._region_code

    @region_code.setter
    def region_code(self, region_code):
        """Sets the region_code of this GetServerProductListRequest.

        REGION코드  # noqa: E501

        :param region_code: The region_code of this GetServerProductListRequest.  # noqa: E501
        :type: str
        """

        self._region_code = region_code

    @property
    def zone_code(self):
        """Gets the zone_code of this GetServerProductListRequest.  # noqa: E501

        ZONE코드  # noqa: E501

        :return: The zone_code of this GetServerProductListRequest.  # noqa: E501
        :rtype: str
        """
        return self._zone_code

    @zone_code.setter
    def zone_code(self, zone_code):
        """Sets the zone_code of this GetServerProductListRequest.

        ZONE코드  # noqa: E501

        :param zone_code: The zone_code of this GetServerProductListRequest.  # noqa: E501
        :type: str
        """

        self._zone_code = zone_code

    @property
    def server_image_product_code(self):
        """Gets the server_image_product_code of this GetServerProductListRequest.  # noqa: E501

        서버이미지상품코드  # noqa: E501

        :return: The server_image_product_code of this GetServerProductListRequest.  # noqa: E501
        :rtype: str
        """
        return self._server_image_product_code

    @server_image_product_code.setter
    def server_image_product_code(self, server_image_product_code):
        """Sets the server_image_product_code of this GetServerProductListRequest.

        서버이미지상품코드  # noqa: E501

        :param server_image_product_code: The server_image_product_code of this GetServerProductListRequest.  # noqa: E501
        :type: str
        """
        if server_image_product_code is None:
            raise ValueError("Invalid value for `server_image_product_code`, must not be `None`")  # noqa: E501

        self._server_image_product_code = server_image_product_code

    @property
    def exclusion_product_code(self):
        """Gets the exclusion_product_code of this GetServerProductListRequest.  # noqa: E501

        제외할상품코드  # noqa: E501

        :return: The exclusion_product_code of this GetServerProductListRequest.  # noqa: E501
        :rtype: str
        """
        return self._exclusion_product_code

    @exclusion_product_code.setter
    def exclusion_product_code(self, exclusion_product_code):
        """Sets the exclusion_product_code of this GetServerProductListRequest.

        제외할상품코드  # noqa: E501

        :param exclusion_product_code: The exclusion_product_code of this GetServerProductListRequest.  # noqa: E501
        :type: str
        """

        self._exclusion_product_code = exclusion_product_code

    @property
    def product_code(self):
        """Gets the product_code of this GetServerProductListRequest.  # noqa: E501

        상품코드  # noqa: E501

        :return: The product_code of this GetServerProductListRequest.  # noqa: E501
        :rtype: str
        """
        return self._product_code

    @product_code.setter
    def product_code(self, product_code):
        """Sets the product_code of this GetServerProductListRequest.

        상품코드  # noqa: E501

        :param product_code: The product_code of this GetServerProductListRequest.  # noqa: E501
        :type: str
        """

        self._product_code = product_code

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GetServerProductListRequest):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
