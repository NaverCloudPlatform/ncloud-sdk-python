# coding: utf-8

"""
    vserver

    OpenAPI spec version: 2020-09-17T02:28:03Z
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import unittest

import ncloud_vserver
from ncloud_vserver.api.v2_api import V2Api  # noqa: E501
from ncloud_vserver.rest import ApiException


class TestV2Api(unittest.TestCase):
    """V2Api unit test stubs"""

    def setUp(self):
        configuration = ncloud_vserver.Configuration()
        configuration.access_key = "YOUR ACCESS KEY"
        configuration.secret_key = "YOUR SECRET KEY"
        self.api = ncloud_vserver.api.v2_api.V2Api(ncloud_vserver.ApiClient(configuration))  # noqa: E501

    def tearDown(self):
        pass

    def test_add_access_control_group_inbound_rule(self):
        """Test case for add_access_control_group_inbound_rule
        add_access_control_group_inbound_rule_request = ncloud_vserver.AddAccessControlGroupInboundRuleRequest()
        try:
            api_response = self.api.add_access_control_group_inbound_rule(add_access_control_group_inbound_rule_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->add_access_control_group_inbound_rule: %s\n" % e)
        """
        pass

    def test_add_access_control_group_outbound_rule(self):
        """Test case for add_access_control_group_outbound_rule
        add_access_control_group_outbound_rule_request = ncloud_vserver.AddAccessControlGroupOutboundRuleRequest()
        try:
            api_response = self.api.add_access_control_group_outbound_rule(add_access_control_group_outbound_rule_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->add_access_control_group_outbound_rule: %s\n" % e)
        """
        pass

    def test_add_network_interface_access_control_group(self):
        """Test case for add_network_interface_access_control_group
        add_network_interface_access_control_group_request = ncloud_vserver.AddNetworkInterfaceAccessControlGroupRequest()
        try:
            api_response = self.api.add_network_interface_access_control_group(add_network_interface_access_control_group_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->add_network_interface_access_control_group: %s\n" % e)
        """
        pass

    def test_add_placement_group_server_instance(self):
        """Test case for add_placement_group_server_instance
        add_placement_group_server_instance_request = ncloud_vserver.AddPlacementGroupServerInstanceRequest()
        try:
            api_response = self.api.add_placement_group_server_instance(add_placement_group_server_instance_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->add_placement_group_server_instance: %s\n" % e)
        """
        pass

    def test_associate_public_ip_with_server_instance(self):
        """Test case for associate_public_ip_with_server_instance
        associate_public_ip_with_server_instance_request = ncloud_vserver.AssociatePublicIpWithServerInstanceRequest()
        try:
            api_response = self.api.associate_public_ip_with_server_instance(associate_public_ip_with_server_instance_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->associate_public_ip_with_server_instance: %s\n" % e)
        """
        pass

    def test_attach_block_storage_instance(self):
        """Test case for attach_block_storage_instance
        attach_block_storage_instance_request = ncloud_vserver.AttachBlockStorageInstanceRequest()
        try:
            api_response = self.api.attach_block_storage_instance(attach_block_storage_instance_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->attach_block_storage_instance: %s\n" % e)
        """
        pass

    def test_attach_network_interface(self):
        """Test case for attach_network_interface
        attach_network_interface_request = ncloud_vserver.AttachNetworkInterfaceRequest()
        try:
            api_response = self.api.attach_network_interface(attach_network_interface_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->attach_network_interface: %s\n" % e)
        """
        pass

    def test_change_block_storage_volume_size(self):
        """Test case for change_block_storage_volume_size
        change_block_storage_volume_size_request = ncloud_vserver.ChangeBlockStorageVolumeSizeRequest()
        try:
            api_response = self.api.change_block_storage_volume_size(change_block_storage_volume_size_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->change_block_storage_volume_size: %s\n" % e)
        """
        pass

    def test_change_server_instance_spec(self):
        """Test case for change_server_instance_spec
        change_server_instance_spec_request = ncloud_vserver.ChangeServerInstanceSpecRequest()
        try:
            api_response = self.api.change_server_instance_spec(change_server_instance_spec_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->change_server_instance_spec: %s\n" % e)
        """
        pass

    def test_create_access_control_group(self):
        """Test case for create_access_control_group
        create_access_control_group_request = ncloud_vserver.CreateAccessControlGroupRequest()
        try:
            api_response = self.api.create_access_control_group(create_access_control_group_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->create_access_control_group: %s\n" % e)
        """
        pass

    def test_create_block_storage_instance(self):
        """Test case for create_block_storage_instance
        create_block_storage_instance_request = ncloud_vserver.CreateBlockStorageInstanceRequest()
        try:
            api_response = self.api.create_block_storage_instance(create_block_storage_instance_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->create_block_storage_instance: %s\n" % e)
        """
        pass

    def test_create_block_storage_snapshot_instance(self):
        """Test case for create_block_storage_snapshot_instance
        create_block_storage_snapshot_instance_request = ncloud_vserver.CreateBlockStorageSnapshotInstanceRequest()
        try:
            api_response = self.api.create_block_storage_snapshot_instance(create_block_storage_snapshot_instance_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->create_block_storage_snapshot_instance: %s\n" % e)
        """
        pass

    def test_create_init_script(self):
        """Test case for create_init_script
        create_init_script_request = ncloud_vserver.CreateInitScriptRequest()
        try:
            api_response = self.api.create_init_script(create_init_script_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->create_init_script: %s\n" % e)
        """
        pass

    def test_create_login_key(self):
        """Test case for create_login_key
        create_login_key_request = ncloud_vserver.CreateLoginKeyRequest()
        try:
            api_response = self.api.create_login_key(create_login_key_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->create_login_key: %s\n" % e)
        """
        pass

    def test_create_member_server_image_instance(self):
        """Test case for create_member_server_image_instance
        create_member_server_image_instance_request = ncloud_vserver.CreateMemberServerImageInstanceRequest()
        try:
            api_response = self.api.create_member_server_image_instance(create_member_server_image_instance_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->create_member_server_image_instance: %s\n" % e)
        """
        pass

    def test_create_network_interface(self):
        """Test case for create_network_interface
        create_network_interface_request = ncloud_vserver.CreateNetworkInterfaceRequest()
        try:
            api_response = self.api.create_network_interface(create_network_interface_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->create_network_interface: %s\n" % e)
        """
        pass

    def test_create_placement_group(self):
        """Test case for create_placement_group
        create_placement_group_request = ncloud_vserver.CreatePlacementGroupRequest()
        try:
            api_response = self.api.create_placement_group(create_placement_group_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->create_placement_group: %s\n" % e)
        """
        pass

    def test_create_public_ip_instance(self):
        """Test case for create_public_ip_instance
        create_public_ip_instance_request = ncloud_vserver.CreatePublicIpInstanceRequest()
        try:
            api_response = self.api.create_public_ip_instance(create_public_ip_instance_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->create_public_ip_instance: %s\n" % e)
        """
        pass

    def test_create_server_instances(self):
        """Test case for create_server_instances
        create_server_instances_request = ncloud_vserver.CreateServerInstancesRequest()
        try:
            api_response = self.api.create_server_instances(create_server_instances_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->create_server_instances: %s\n" % e)
        """
        pass

    def test_delete_access_control_group(self):
        """Test case for delete_access_control_group
        delete_access_control_group_request = ncloud_vserver.DeleteAccessControlGroupRequest()
        try:
            api_response = self.api.delete_access_control_group(delete_access_control_group_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->delete_access_control_group: %s\n" % e)
        """
        pass

    def test_delete_block_storage_instances(self):
        """Test case for delete_block_storage_instances
        delete_block_storage_instances_request = ncloud_vserver.DeleteBlockStorageInstancesRequest()
        try:
            api_response = self.api.delete_block_storage_instances(delete_block_storage_instances_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->delete_block_storage_instances: %s\n" % e)
        """
        pass

    def test_delete_block_storage_snapshot_instances(self):
        """Test case for delete_block_storage_snapshot_instances
        delete_block_storage_snapshot_instances_request = ncloud_vserver.DeleteBlockStorageSnapshotInstancesRequest()
        try:
            api_response = self.api.delete_block_storage_snapshot_instances(delete_block_storage_snapshot_instances_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->delete_block_storage_snapshot_instances: %s\n" % e)
        """
        pass

    def test_delete_init_scripts(self):
        """Test case for delete_init_scripts
        delete_init_scripts_request = ncloud_vserver.DeleteInitScriptsRequest()
        try:
            api_response = self.api.delete_init_scripts(delete_init_scripts_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->delete_init_scripts: %s\n" % e)
        """
        pass

    def test_delete_login_keys(self):
        """Test case for delete_login_keys
        delete_login_keys_request = ncloud_vserver.DeleteLoginKeysRequest()
        try:
            api_response = self.api.delete_login_keys(delete_login_keys_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->delete_login_keys: %s\n" % e)
        """
        pass

    def test_delete_member_server_image_instances(self):
        """Test case for delete_member_server_image_instances
        delete_member_server_image_instances_request = ncloud_vserver.DeleteMemberServerImageInstancesRequest()
        try:
            api_response = self.api.delete_member_server_image_instances(delete_member_server_image_instances_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->delete_member_server_image_instances: %s\n" % e)
        """
        pass

    def test_delete_network_interface(self):
        """Test case for delete_network_interface
        delete_network_interface_request = ncloud_vserver.DeleteNetworkInterfaceRequest()
        try:
            api_response = self.api.delete_network_interface(delete_network_interface_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->delete_network_interface: %s\n" % e)
        """
        pass

    def test_delete_placement_group(self):
        """Test case for delete_placement_group
        delete_placement_group_request = ncloud_vserver.DeletePlacementGroupRequest()
        try:
            api_response = self.api.delete_placement_group(delete_placement_group_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->delete_placement_group: %s\n" % e)
        """
        pass

    def test_delete_public_ip_instance(self):
        """Test case for delete_public_ip_instance
        delete_public_ip_instance_request = ncloud_vserver.DeletePublicIpInstanceRequest()
        try:
            api_response = self.api.delete_public_ip_instance(delete_public_ip_instance_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->delete_public_ip_instance: %s\n" % e)
        """
        pass

    def test_detach_block_storage_instances(self):
        """Test case for detach_block_storage_instances
        detach_block_storage_instances_request = ncloud_vserver.DetachBlockStorageInstancesRequest()
        try:
            api_response = self.api.detach_block_storage_instances(detach_block_storage_instances_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->detach_block_storage_instances: %s\n" % e)
        """
        pass

    def test_detach_network_interface(self):
        """Test case for detach_network_interface
        detach_network_interface_request = ncloud_vserver.DetachNetworkInterfaceRequest()
        try:
            api_response = self.api.detach_network_interface(detach_network_interface_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->detach_network_interface: %s\n" % e)
        """
        pass

    def test_disassociate_public_ip_from_server_instance(self):
        """Test case for disassociate_public_ip_from_server_instance
        disassociate_public_ip_from_server_instance_request = ncloud_vserver.DisassociatePublicIpFromServerInstanceRequest()
        try:
            api_response = self.api.disassociate_public_ip_from_server_instance(disassociate_public_ip_from_server_instance_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->disassociate_public_ip_from_server_instance: %s\n" % e)
        """
        pass

    def test_get_access_control_group_detail(self):
        """Test case for get_access_control_group_detail
        get_access_control_group_detail_request = ncloud_vserver.GetAccessControlGroupDetailRequest()
        try:
            api_response = self.api.get_access_control_group_detail(get_access_control_group_detail_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_access_control_group_detail: %s\n" % e)
        """
        pass

    def test_get_access_control_group_list(self):
        """Test case for get_access_control_group_list
        get_access_control_group_list_request = ncloud_vserver.GetAccessControlGroupListRequest()
        try:
            api_response = self.api.get_access_control_group_list(get_access_control_group_list_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_access_control_group_list: %s\n" % e)
        """
        pass

    def test_get_access_control_group_rule_list(self):
        """Test case for get_access_control_group_rule_list
        get_access_control_group_rule_list_request = ncloud_vserver.GetAccessControlGroupRuleListRequest()
        try:
            api_response = self.api.get_access_control_group_rule_list(get_access_control_group_rule_list_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_access_control_group_rule_list: %s\n" % e)
        """
        pass

    def test_get_block_storage_instance_detail(self):
        """Test case for get_block_storage_instance_detail
        get_block_storage_instance_detail_request = ncloud_vserver.GetBlockStorageInstanceDetailRequest()
        try:
            api_response = self.api.get_block_storage_instance_detail(get_block_storage_instance_detail_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_block_storage_instance_detail: %s\n" % e)
        """
        pass

    def test_get_block_storage_instance_list(self):
        """Test case for get_block_storage_instance_list
        get_block_storage_instance_list_request = ncloud_vserver.GetBlockStorageInstanceListRequest()
        try:
            api_response = self.api.get_block_storage_instance_list(get_block_storage_instance_list_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_block_storage_instance_list: %s\n" % e)
        """
        pass

    def test_get_block_storage_snapshot_instance_detail(self):
        """Test case for get_block_storage_snapshot_instance_detail
        get_block_storage_snapshot_instance_detail_request = ncloud_vserver.GetBlockStorageSnapshotInstanceDetailRequest()
        try:
            api_response = self.api.get_block_storage_snapshot_instance_detail(get_block_storage_snapshot_instance_detail_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_block_storage_snapshot_instance_detail: %s\n" % e)
        """
        pass

    def test_get_block_storage_snapshot_instance_list(self):
        """Test case for get_block_storage_snapshot_instance_list
        get_block_storage_snapshot_instance_list_request = ncloud_vserver.GetBlockStorageSnapshotInstanceListRequest()
        try:
            api_response = self.api.get_block_storage_snapshot_instance_list(get_block_storage_snapshot_instance_list_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_block_storage_snapshot_instance_list: %s\n" % e)
        """
        pass

    def test_get_init_script_detail(self):
        """Test case for get_init_script_detail
        get_init_script_detail_request = ncloud_vserver.GetInitScriptDetailRequest()
        try:
            api_response = self.api.get_init_script_detail(get_init_script_detail_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_init_script_detail: %s\n" % e)
        """
        pass

    def test_get_init_script_list(self):
        """Test case for get_init_script_list
        get_init_script_list_request = ncloud_vserver.GetInitScriptListRequest()
        try:
            api_response = self.api.get_init_script_list(get_init_script_list_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_init_script_list: %s\n" % e)
        """
        pass

    def test_get_login_key_list(self):
        """Test case for get_login_key_list
        get_login_key_list_request = ncloud_vserver.GetLoginKeyListRequest()
        try:
            api_response = self.api.get_login_key_list(get_login_key_list_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_login_key_list: %s\n" % e)
        """
        pass

    def test_get_member_server_image_instance_detail(self):
        """Test case for get_member_server_image_instance_detail
        get_member_server_image_instance_detail_request = ncloud_vserver.GetMemberServerImageInstanceDetailRequest()
        try:
            api_response = self.api.get_member_server_image_instance_detail(get_member_server_image_instance_detail_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_member_server_image_instance_detail: %s\n" % e)
        """
        pass

    def test_get_member_server_image_instance_list(self):
        """Test case for get_member_server_image_instance_list
        get_member_server_image_instance_list_request = ncloud_vserver.GetMemberServerImageInstanceListRequest()
        try:
            api_response = self.api.get_member_server_image_instance_list(get_member_server_image_instance_list_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_member_server_image_instance_list: %s\n" % e)
        """
        pass

    def test_get_network_interface_detail(self):
        """Test case for get_network_interface_detail
        get_network_interface_detail_request = ncloud_vserver.GetNetworkInterfaceDetailRequest()
        try:
            api_response = self.api.get_network_interface_detail(get_network_interface_detail_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_network_interface_detail: %s\n" % e)
        """
        pass

    def test_get_network_interface_list(self):
        """Test case for get_network_interface_list
        get_network_interface_list_request = ncloud_vserver.GetNetworkInterfaceListRequest()
        try:
            api_response = self.api.get_network_interface_list(get_network_interface_list_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_network_interface_list: %s\n" % e)
        """
        pass

    def test_get_placement_group_detail(self):
        """Test case for get_placement_group_detail
        get_placement_group_detail_request = ncloud_vserver.GetPlacementGroupDetailRequest()
        try:
            api_response = self.api.get_placement_group_detail(get_placement_group_detail_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_placement_group_detail: %s\n" % e)
        """
        pass

    def test_get_placement_group_list(self):
        """Test case for get_placement_group_list
        get_placement_group_list_request = ncloud_vserver.GetPlacementGroupListRequest()
        try:
            api_response = self.api.get_placement_group_list(get_placement_group_list_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_placement_group_list: %s\n" % e)
        """
        pass

    def test_get_public_ip_instance_detail(self):
        """Test case for get_public_ip_instance_detail
        get_public_ip_instance_detail_request = ncloud_vserver.GetPublicIpInstanceDetailRequest()
        try:
            api_response = self.api.get_public_ip_instance_detail(get_public_ip_instance_detail_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_public_ip_instance_detail: %s\n" % e)
        """
        pass

    def test_get_public_ip_instance_list(self):
        """Test case for get_public_ip_instance_list
        get_public_ip_instance_list_request = ncloud_vserver.GetPublicIpInstanceListRequest()
        try:
            api_response = self.api.get_public_ip_instance_list(get_public_ip_instance_list_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_public_ip_instance_list: %s\n" % e)
        """
        pass

    def test_get_public_ip_target_server_instance_list(self):
        """Test case for get_public_ip_target_server_instance_list
        get_public_ip_target_server_instance_list_request = ncloud_vserver.GetPublicIpTargetServerInstanceListRequest()
        try:
            api_response = self.api.get_public_ip_target_server_instance_list(get_public_ip_target_server_instance_list_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_public_ip_target_server_instance_list: %s\n" % e)
        """
        pass

    def test_get_region_list(self):
        """Test case for get_region_list
        get_region_list_request = ncloud_vserver.GetRegionListRequest()
        try:
            api_response = self.api.get_region_list(get_region_list_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_region_list: %s\n" % e)
        """
        pass

    def test_get_root_password(self):
        """Test case for get_root_password
        get_root_password_request = ncloud_vserver.GetRootPasswordRequest()
        try:
            api_response = self.api.get_root_password(get_root_password_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_root_password: %s\n" % e)
        """
        pass

    def test_get_root_password_server_instance_list(self):
        """Test case for get_root_password_server_instance_list
        get_root_password_server_instance_list_request = ncloud_vserver.GetRootPasswordServerInstanceListRequest()
        try:
            api_response = self.api.get_root_password_server_instance_list(get_root_password_server_instance_list_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_root_password_server_instance_list: %s\n" % e)
        """
        pass

    def test_get_server_image_product_list(self):
        """Test case for get_server_image_product_list
        get_server_image_product_list_request = ncloud_vserver.GetServerImageProductListRequest()
        try:
            api_response = self.api.get_server_image_product_list(get_server_image_product_list_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_server_image_product_list: %s\n" % e)
        """
        pass

    def test_get_server_instance_detail(self):
        """Test case for get_server_instance_detail
        get_server_instance_detail_request = ncloud_vserver.GetServerInstanceDetailRequest()
        try:
            api_response = self.api.get_server_instance_detail(get_server_instance_detail_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_server_instance_detail: %s\n" % e)
        """
        pass

    def test_get_server_instance_list(self):
        """Test case for get_server_instance_list
        get_server_instance_list_request = ncloud_vserver.GetServerInstanceListRequest()
        try:
            api_response = self.api.get_server_instance_list(get_server_instance_list_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_server_instance_list: %s\n" % e)
        """
        pass

    def test_get_server_product_list(self):
        """Test case for get_server_product_list
        get_server_product_list_request = ncloud_vserver.GetServerProductListRequest()
        try:
            api_response = self.api.get_server_product_list(get_server_product_list_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_server_product_list: %s\n" % e)
        """
        pass

    def test_get_zone_list(self):
        """Test case for get_zone_list
        get_zone_list_request = ncloud_vserver.GetZoneListRequest()
        try:
            api_response = self.api.get_zone_list(get_zone_list_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_zone_list: %s\n" % e)
        """
        pass

    def test_import_login_key(self):
        """Test case for import_login_key
        import_login_key_request = ncloud_vserver.ImportLoginKeyRequest()
        try:
            api_response = self.api.import_login_key(import_login_key_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->import_login_key: %s\n" % e)
        """
        pass

    def test_reboot_server_instances(self):
        """Test case for reboot_server_instances
        reboot_server_instances_request = ncloud_vserver.RebootServerInstancesRequest()
        try:
            api_response = self.api.reboot_server_instances(reboot_server_instances_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->reboot_server_instances: %s\n" % e)
        """
        pass

    def test_remove_access_control_group_inbound_rule(self):
        """Test case for remove_access_control_group_inbound_rule
        remove_access_control_group_inbound_rule_request = ncloud_vserver.RemoveAccessControlGroupInboundRuleRequest()
        try:
            api_response = self.api.remove_access_control_group_inbound_rule(remove_access_control_group_inbound_rule_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->remove_access_control_group_inbound_rule: %s\n" % e)
        """
        pass

    def test_remove_access_control_group_outbound_rule(self):
        """Test case for remove_access_control_group_outbound_rule
        remove_access_control_group_outbound_rule_request = ncloud_vserver.RemoveAccessControlGroupOutboundRuleRequest()
        try:
            api_response = self.api.remove_access_control_group_outbound_rule(remove_access_control_group_outbound_rule_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->remove_access_control_group_outbound_rule: %s\n" % e)
        """
        pass

    def test_remove_network_interface_access_control_group(self):
        """Test case for remove_network_interface_access_control_group
        remove_network_interface_access_control_group_request = ncloud_vserver.RemoveNetworkInterfaceAccessControlGroupRequest()
        try:
            api_response = self.api.remove_network_interface_access_control_group(remove_network_interface_access_control_group_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->remove_network_interface_access_control_group: %s\n" % e)
        """
        pass

    def test_remove_placement_group_server_instance(self):
        """Test case for remove_placement_group_server_instance
        remove_placement_group_server_instance_request = ncloud_vserver.RemovePlacementGroupServerInstanceRequest()
        try:
            api_response = self.api.remove_placement_group_server_instance(remove_placement_group_server_instance_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->remove_placement_group_server_instance: %s\n" % e)
        """
        pass

    def test_start_server_instances(self):
        """Test case for start_server_instances
        start_server_instances_request = ncloud_vserver.StartServerInstancesRequest()
        try:
            api_response = self.api.start_server_instances(start_server_instances_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->start_server_instances: %s\n" % e)
        """
        pass

    def test_stop_server_instances(self):
        """Test case for stop_server_instances
        stop_server_instances_request = ncloud_vserver.StopServerInstancesRequest()
        try:
            api_response = self.api.stop_server_instances(stop_server_instances_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->stop_server_instances: %s\n" % e)
        """
        pass

    def test_terminate_server_instances(self):
        """Test case for terminate_server_instances
        terminate_server_instances_request = ncloud_vserver.TerminateServerInstancesRequest()
        try:
            api_response = self.api.terminate_server_instances(terminate_server_instances_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->terminate_server_instances: %s\n" % e)
        """
        pass


if __name__ == '__main__':
    unittest.main()
