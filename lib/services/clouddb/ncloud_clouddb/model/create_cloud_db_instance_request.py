# coding: utf-8

"""
    clouddb

    OpenAPI spec version: 2018-06-21T02:28:05Z
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class CreateCloudDBInstanceRequest(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'cloud_db_image_product_code': 'str',
        'cloud_db_product_code': 'str',
        'db_kind_code': 'str',
        'collation': 'str',
        'data_storage_type_code': 'str',
        'is_ha': 'bool',
        'host_ip': 'str',
        'cloud_db_server_name': 'str',
        'cloud_db_service_name': 'str',
        'cloud_db_basic_name': 'str',
        'cloud_db_user_name': 'str',
        'cloud_db_user_password': 'str',
        'cloud_db_port': 'int',
        'cloud_db_config_group_no': 'str',
        'is_backup': 'bool',
        'backup_file_retention_period': 'int',
        'is_automatic_backup': 'bool',
        'backup_time': 'str',
        'region_no': 'str',
        'zone_no': 'str'
    }

    attribute_map = {
        'cloud_db_image_product_code': 'cloudDBImageProductCode',
        'cloud_db_product_code': 'cloudDBProductCode',
        'db_kind_code': 'dbKindCode',
        'collation': 'collation',
        'data_storage_type_code': 'dataStorageTypeCode',
        'is_ha': 'isHa',
        'host_ip': 'hostIp',
        'cloud_db_server_name': 'cloudDBServerName',
        'cloud_db_service_name': 'cloudDBServiceName',
        'cloud_db_basic_name': 'cloudDBBasicName',
        'cloud_db_user_name': 'cloudDBUserName',
        'cloud_db_user_password': 'cloudDBUserPassword',
        'cloud_db_port': 'cloudDBPort',
        'cloud_db_config_group_no': 'cloudDBConfigGroupNo',
        'is_backup': 'isBackup',
        'backup_file_retention_period': 'backupFileRetentionPeriod',
        'is_automatic_backup': 'isAutomaticBackup',
        'backup_time': 'backupTime',
        'region_no': 'regionNo',
        'zone_no': 'zoneNo'
    }

    def __init__(self, cloud_db_image_product_code=None, cloud_db_product_code=None, db_kind_code=None, collation=None, data_storage_type_code=None, is_ha=None, host_ip=None, cloud_db_server_name=None, cloud_db_service_name=None, cloud_db_basic_name=None, cloud_db_user_name=None, cloud_db_user_password=None, cloud_db_port=None, cloud_db_config_group_no=None, is_backup=None, backup_file_retention_period=None, is_automatic_backup=None, backup_time=None, region_no=None, zone_no=None):  # noqa: E501
        """CreateCloudDBInstanceRequest - a model defined in Swagger"""  # noqa: E501

        self._cloud_db_image_product_code = None
        self._cloud_db_product_code = None
        self._db_kind_code = None
        self._collation = None
        self._data_storage_type_code = None
        self._is_ha = None
        self._host_ip = None
        self._cloud_db_server_name = None
        self._cloud_db_service_name = None
        self._cloud_db_basic_name = None
        self._cloud_db_user_name = None
        self._cloud_db_user_password = None
        self._cloud_db_port = None
        self._cloud_db_config_group_no = None
        self._is_backup = None
        self._backup_file_retention_period = None
        self._is_automatic_backup = None
        self._backup_time = None
        self._region_no = None
        self._zone_no = None
        self.discriminator = None

        if cloud_db_image_product_code is not None:
            self.cloud_db_image_product_code = cloud_db_image_product_code
        if cloud_db_product_code is not None:
            self.cloud_db_product_code = cloud_db_product_code
        self.db_kind_code = db_kind_code
        if collation is not None:
            self.collation = collation
        if data_storage_type_code is not None:
            self.data_storage_type_code = data_storage_type_code
        if is_ha is not None:
            self.is_ha = is_ha
        if host_ip is not None:
            self.host_ip = host_ip
        if cloud_db_server_name is not None:
            self.cloud_db_server_name = cloud_db_server_name
        self.cloud_db_service_name = cloud_db_service_name
        if cloud_db_basic_name is not None:
            self.cloud_db_basic_name = cloud_db_basic_name
        if cloud_db_user_name is not None:
            self.cloud_db_user_name = cloud_db_user_name
        if cloud_db_user_password is not None:
            self.cloud_db_user_password = cloud_db_user_password
        if cloud_db_port is not None:
            self.cloud_db_port = cloud_db_port
        if cloud_db_config_group_no is not None:
            self.cloud_db_config_group_no = cloud_db_config_group_no
        if is_backup is not None:
            self.is_backup = is_backup
        if backup_file_retention_period is not None:
            self.backup_file_retention_period = backup_file_retention_period
        if is_automatic_backup is not None:
            self.is_automatic_backup = is_automatic_backup
        if backup_time is not None:
            self.backup_time = backup_time
        if region_no is not None:
            self.region_no = region_no
        if zone_no is not None:
            self.zone_no = zone_no

    @property
    def cloud_db_image_product_code(self):
        """Gets the cloud_db_image_product_code of this CreateCloudDBInstanceRequest.  # noqa: E501

        CloudDB이미지상품코드  # noqa: E501

        :return: The cloud_db_image_product_code of this CreateCloudDBInstanceRequest.  # noqa: E501
        :rtype: str
        """
        return self._cloud_db_image_product_code

    @cloud_db_image_product_code.setter
    def cloud_db_image_product_code(self, cloud_db_image_product_code):
        """Sets the cloud_db_image_product_code of this CreateCloudDBInstanceRequest.

        CloudDB이미지상품코드  # noqa: E501

        :param cloud_db_image_product_code: The cloud_db_image_product_code of this CreateCloudDBInstanceRequest.  # noqa: E501
        :type: str
        """

        self._cloud_db_image_product_code = cloud_db_image_product_code

    @property
    def cloud_db_product_code(self):
        """Gets the cloud_db_product_code of this CreateCloudDBInstanceRequest.  # noqa: E501

        CloudDB상품코드  # noqa: E501

        :return: The cloud_db_product_code of this CreateCloudDBInstanceRequest.  # noqa: E501
        :rtype: str
        """
        return self._cloud_db_product_code

    @cloud_db_product_code.setter
    def cloud_db_product_code(self, cloud_db_product_code):
        """Sets the cloud_db_product_code of this CreateCloudDBInstanceRequest.

        CloudDB상품코드  # noqa: E501

        :param cloud_db_product_code: The cloud_db_product_code of this CreateCloudDBInstanceRequest.  # noqa: E501
        :type: str
        """

        self._cloud_db_product_code = cloud_db_product_code

    @property
    def db_kind_code(self):
        """Gets the db_kind_code of this CreateCloudDBInstanceRequest.  # noqa: E501

        DB유형코드  # noqa: E501

        :return: The db_kind_code of this CreateCloudDBInstanceRequest.  # noqa: E501
        :rtype: str
        """
        return self._db_kind_code

    @db_kind_code.setter
    def db_kind_code(self, db_kind_code):
        """Sets the db_kind_code of this CreateCloudDBInstanceRequest.

        DB유형코드  # noqa: E501

        :param db_kind_code: The db_kind_code of this CreateCloudDBInstanceRequest.  # noqa: E501
        :type: str
        """
        if db_kind_code is None:
            raise ValueError("Invalid value for `db_kind_code`, must not be `None`")  # noqa: E501

        self._db_kind_code = db_kind_code

    @property
    def collation(self):
        """Gets the collation of this CreateCloudDBInstanceRequest.  # noqa: E501

        Collation  # noqa: E501

        :return: The collation of this CreateCloudDBInstanceRequest.  # noqa: E501
        :rtype: str
        """
        return self._collation

    @collation.setter
    def collation(self, collation):
        """Sets the collation of this CreateCloudDBInstanceRequest.

        Collation  # noqa: E501

        :param collation: The collation of this CreateCloudDBInstanceRequest.  # noqa: E501
        :type: str
        """

        self._collation = collation

    @property
    def data_storage_type_code(self):
        """Gets the data_storage_type_code of this CreateCloudDBInstanceRequest.  # noqa: E501

        데이터스토리지타입  # noqa: E501

        :return: The data_storage_type_code of this CreateCloudDBInstanceRequest.  # noqa: E501
        :rtype: str
        """
        return self._data_storage_type_code

    @data_storage_type_code.setter
    def data_storage_type_code(self, data_storage_type_code):
        """Sets the data_storage_type_code of this CreateCloudDBInstanceRequest.

        데이터스토리지타입  # noqa: E501

        :param data_storage_type_code: The data_storage_type_code of this CreateCloudDBInstanceRequest.  # noqa: E501
        :type: str
        """

        self._data_storage_type_code = data_storage_type_code

    @property
    def is_ha(self):
        """Gets the is_ha of this CreateCloudDBInstanceRequest.  # noqa: E501

        HA여부  # noqa: E501

        :return: The is_ha of this CreateCloudDBInstanceRequest.  # noqa: E501
        :rtype: bool
        """
        return self._is_ha

    @is_ha.setter
    def is_ha(self, is_ha):
        """Sets the is_ha of this CreateCloudDBInstanceRequest.

        HA여부  # noqa: E501

        :param is_ha: The is_ha of this CreateCloudDBInstanceRequest.  # noqa: E501
        :type: bool
        """

        self._is_ha = is_ha

    @property
    def host_ip(self):
        """Gets the host_ip of this CreateCloudDBInstanceRequest.  # noqa: E501

        호스트IP  # noqa: E501

        :return: The host_ip of this CreateCloudDBInstanceRequest.  # noqa: E501
        :rtype: str
        """
        return self._host_ip

    @host_ip.setter
    def host_ip(self, host_ip):
        """Sets the host_ip of this CreateCloudDBInstanceRequest.

        호스트IP  # noqa: E501

        :param host_ip: The host_ip of this CreateCloudDBInstanceRequest.  # noqa: E501
        :type: str
        """

        self._host_ip = host_ip

    @property
    def cloud_db_server_name(self):
        """Gets the cloud_db_server_name of this CreateCloudDBInstanceRequest.  # noqa: E501

        CloudDB서버이름  # noqa: E501

        :return: The cloud_db_server_name of this CreateCloudDBInstanceRequest.  # noqa: E501
        :rtype: str
        """
        return self._cloud_db_server_name

    @cloud_db_server_name.setter
    def cloud_db_server_name(self, cloud_db_server_name):
        """Sets the cloud_db_server_name of this CreateCloudDBInstanceRequest.

        CloudDB서버이름  # noqa: E501

        :param cloud_db_server_name: The cloud_db_server_name of this CreateCloudDBInstanceRequest.  # noqa: E501
        :type: str
        """

        self._cloud_db_server_name = cloud_db_server_name

    @property
    def cloud_db_service_name(self):
        """Gets the cloud_db_service_name of this CreateCloudDBInstanceRequest.  # noqa: E501

        CloudDB서비스이름  # noqa: E501

        :return: The cloud_db_service_name of this CreateCloudDBInstanceRequest.  # noqa: E501
        :rtype: str
        """
        return self._cloud_db_service_name

    @cloud_db_service_name.setter
    def cloud_db_service_name(self, cloud_db_service_name):
        """Sets the cloud_db_service_name of this CreateCloudDBInstanceRequest.

        CloudDB서비스이름  # noqa: E501

        :param cloud_db_service_name: The cloud_db_service_name of this CreateCloudDBInstanceRequest.  # noqa: E501
        :type: str
        """
        if cloud_db_service_name is None:
            raise ValueError("Invalid value for `cloud_db_service_name`, must not be `None`")  # noqa: E501

        self._cloud_db_service_name = cloud_db_service_name

    @property
    def cloud_db_basic_name(self):
        """Gets the cloud_db_basic_name of this CreateCloudDBInstanceRequest.  # noqa: E501

        CloudDB기본이름  # noqa: E501

        :return: The cloud_db_basic_name of this CreateCloudDBInstanceRequest.  # noqa: E501
        :rtype: str
        """
        return self._cloud_db_basic_name

    @cloud_db_basic_name.setter
    def cloud_db_basic_name(self, cloud_db_basic_name):
        """Sets the cloud_db_basic_name of this CreateCloudDBInstanceRequest.

        CloudDB기본이름  # noqa: E501

        :param cloud_db_basic_name: The cloud_db_basic_name of this CreateCloudDBInstanceRequest.  # noqa: E501
        :type: str
        """

        self._cloud_db_basic_name = cloud_db_basic_name

    @property
    def cloud_db_user_name(self):
        """Gets the cloud_db_user_name of this CreateCloudDBInstanceRequest.  # noqa: E501

        CloudDB유저이름  # noqa: E501

        :return: The cloud_db_user_name of this CreateCloudDBInstanceRequest.  # noqa: E501
        :rtype: str
        """
        return self._cloud_db_user_name

    @cloud_db_user_name.setter
    def cloud_db_user_name(self, cloud_db_user_name):
        """Sets the cloud_db_user_name of this CreateCloudDBInstanceRequest.

        CloudDB유저이름  # noqa: E501

        :param cloud_db_user_name: The cloud_db_user_name of this CreateCloudDBInstanceRequest.  # noqa: E501
        :type: str
        """

        self._cloud_db_user_name = cloud_db_user_name

    @property
    def cloud_db_user_password(self):
        """Gets the cloud_db_user_password of this CreateCloudDBInstanceRequest.  # noqa: E501

        CloudDB유저패스워드  # noqa: E501

        :return: The cloud_db_user_password of this CreateCloudDBInstanceRequest.  # noqa: E501
        :rtype: str
        """
        return self._cloud_db_user_password

    @cloud_db_user_password.setter
    def cloud_db_user_password(self, cloud_db_user_password):
        """Sets the cloud_db_user_password of this CreateCloudDBInstanceRequest.

        CloudDB유저패스워드  # noqa: E501

        :param cloud_db_user_password: The cloud_db_user_password of this CreateCloudDBInstanceRequest.  # noqa: E501
        :type: str
        """

        self._cloud_db_user_password = cloud_db_user_password

    @property
    def cloud_db_port(self):
        """Gets the cloud_db_port of this CreateCloudDBInstanceRequest.  # noqa: E501

        CloudDB포트  # noqa: E501

        :return: The cloud_db_port of this CreateCloudDBInstanceRequest.  # noqa: E501
        :rtype: int
        """
        return self._cloud_db_port

    @cloud_db_port.setter
    def cloud_db_port(self, cloud_db_port):
        """Sets the cloud_db_port of this CreateCloudDBInstanceRequest.

        CloudDB포트  # noqa: E501

        :param cloud_db_port: The cloud_db_port of this CreateCloudDBInstanceRequest.  # noqa: E501
        :type: int
        """

        self._cloud_db_port = cloud_db_port

    @property
    def cloud_db_config_group_no(self):
        """Gets the cloud_db_config_group_no of this CreateCloudDBInstanceRequest.  # noqa: E501

        CloudDB설정그룹번호  # noqa: E501

        :return: The cloud_db_config_group_no of this CreateCloudDBInstanceRequest.  # noqa: E501
        :rtype: str
        """
        return self._cloud_db_config_group_no

    @cloud_db_config_group_no.setter
    def cloud_db_config_group_no(self, cloud_db_config_group_no):
        """Sets the cloud_db_config_group_no of this CreateCloudDBInstanceRequest.

        CloudDB설정그룹번호  # noqa: E501

        :param cloud_db_config_group_no: The cloud_db_config_group_no of this CreateCloudDBInstanceRequest.  # noqa: E501
        :type: str
        """

        self._cloud_db_config_group_no = cloud_db_config_group_no

    @property
    def is_backup(self):
        """Gets the is_backup of this CreateCloudDBInstanceRequest.  # noqa: E501

        백업여부  # noqa: E501

        :return: The is_backup of this CreateCloudDBInstanceRequest.  # noqa: E501
        :rtype: bool
        """
        return self._is_backup

    @is_backup.setter
    def is_backup(self, is_backup):
        """Sets the is_backup of this CreateCloudDBInstanceRequest.

        백업여부  # noqa: E501

        :param is_backup: The is_backup of this CreateCloudDBInstanceRequest.  # noqa: E501
        :type: bool
        """

        self._is_backup = is_backup

    @property
    def backup_file_retention_period(self):
        """Gets the backup_file_retention_period of this CreateCloudDBInstanceRequest.  # noqa: E501

        백업파일보관기간  # noqa: E501

        :return: The backup_file_retention_period of this CreateCloudDBInstanceRequest.  # noqa: E501
        :rtype: int
        """
        return self._backup_file_retention_period

    @backup_file_retention_period.setter
    def backup_file_retention_period(self, backup_file_retention_period):
        """Sets the backup_file_retention_period of this CreateCloudDBInstanceRequest.

        백업파일보관기간  # noqa: E501

        :param backup_file_retention_period: The backup_file_retention_period of this CreateCloudDBInstanceRequest.  # noqa: E501
        :type: int
        """

        self._backup_file_retention_period = backup_file_retention_period

    @property
    def is_automatic_backup(self):
        """Gets the is_automatic_backup of this CreateCloudDBInstanceRequest.  # noqa: E501

        자동Backup여부  # noqa: E501

        :return: The is_automatic_backup of this CreateCloudDBInstanceRequest.  # noqa: E501
        :rtype: bool
        """
        return self._is_automatic_backup

    @is_automatic_backup.setter
    def is_automatic_backup(self, is_automatic_backup):
        """Sets the is_automatic_backup of this CreateCloudDBInstanceRequest.

        자동Backup여부  # noqa: E501

        :param is_automatic_backup: The is_automatic_backup of this CreateCloudDBInstanceRequest.  # noqa: E501
        :type: bool
        """

        self._is_automatic_backup = is_automatic_backup

    @property
    def backup_time(self):
        """Gets the backup_time of this CreateCloudDBInstanceRequest.  # noqa: E501

        백업시간  # noqa: E501

        :return: The backup_time of this CreateCloudDBInstanceRequest.  # noqa: E501
        :rtype: str
        """
        return self._backup_time

    @backup_time.setter
    def backup_time(self, backup_time):
        """Sets the backup_time of this CreateCloudDBInstanceRequest.

        백업시간  # noqa: E501

        :param backup_time: The backup_time of this CreateCloudDBInstanceRequest.  # noqa: E501
        :type: str
        """

        self._backup_time = backup_time

    @property
    def region_no(self):
        """Gets the region_no of this CreateCloudDBInstanceRequest.  # noqa: E501

        리전번호  # noqa: E501

        :return: The region_no of this CreateCloudDBInstanceRequest.  # noqa: E501
        :rtype: str
        """
        return self._region_no

    @region_no.setter
    def region_no(self, region_no):
        """Sets the region_no of this CreateCloudDBInstanceRequest.

        리전번호  # noqa: E501

        :param region_no: The region_no of this CreateCloudDBInstanceRequest.  # noqa: E501
        :type: str
        """

        self._region_no = region_no

    @property
    def zone_no(self):
        """Gets the zone_no of this CreateCloudDBInstanceRequest.  # noqa: E501

        zone번호  # noqa: E501

        :return: The zone_no of this CreateCloudDBInstanceRequest.  # noqa: E501
        :rtype: str
        """
        return self._zone_no

    @zone_no.setter
    def zone_no(self, zone_no):
        """Sets the zone_no of this CreateCloudDBInstanceRequest.

        zone번호  # noqa: E501

        :param zone_no: The zone_no of this CreateCloudDBInstanceRequest.  # noqa: E501
        :type: str
        """

        self._zone_no = zone_no

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CreateCloudDBInstanceRequest):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
