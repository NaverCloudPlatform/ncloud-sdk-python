# coding: utf-8

"""
    clouddb

    OpenAPI spec version: 2018-06-21T02:28:05Z
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from ncloud_clouddb.model.common_code import CommonCode  # noqa: F401,E501


class CloudDBServerInstance(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'cloud_db_server_instance_no': 'str',
        'cloud_db_server_instance_status_name': 'str',
        'cloud_db_server_name': 'str',
        'cloud_db_server_role': 'CommonCode',
        'private_dns_name': 'str',
        'public_dns_name': 'str',
        'data_storage_size': 'int',
        'used_data_storage_size': 'int',
        'create_date': 'str',
        'uptime': 'str'
    }

    attribute_map = {
        'cloud_db_server_instance_no': 'cloudDBServerInstanceNo',
        'cloud_db_server_instance_status_name': 'cloudDBServerInstanceStatusName',
        'cloud_db_server_name': 'cloudDBServerName',
        'cloud_db_server_role': 'cloudDBServerRole',
        'private_dns_name': 'privateDnsName',
        'public_dns_name': 'publicDnsName',
        'data_storage_size': 'dataStorageSize',
        'used_data_storage_size': 'usedDataStorageSize',
        'create_date': 'createDate',
        'uptime': 'uptime'
    }

    def __init__(self, cloud_db_server_instance_no=None, cloud_db_server_instance_status_name=None, cloud_db_server_name=None, cloud_db_server_role=None, private_dns_name=None, public_dns_name=None, data_storage_size=None, used_data_storage_size=None, create_date=None, uptime=None):  # noqa: E501
        """CloudDBServerInstance - a model defined in Swagger"""  # noqa: E501

        self._cloud_db_server_instance_no = None
        self._cloud_db_server_instance_status_name = None
        self._cloud_db_server_name = None
        self._cloud_db_server_role = None
        self._private_dns_name = None
        self._public_dns_name = None
        self._data_storage_size = None
        self._used_data_storage_size = None
        self._create_date = None
        self._uptime = None
        self.discriminator = None

        if cloud_db_server_instance_no is not None:
            self.cloud_db_server_instance_no = cloud_db_server_instance_no
        if cloud_db_server_instance_status_name is not None:
            self.cloud_db_server_instance_status_name = cloud_db_server_instance_status_name
        if cloud_db_server_name is not None:
            self.cloud_db_server_name = cloud_db_server_name
        if cloud_db_server_role is not None:
            self.cloud_db_server_role = cloud_db_server_role
        if private_dns_name is not None:
            self.private_dns_name = private_dns_name
        if public_dns_name is not None:
            self.public_dns_name = public_dns_name
        if data_storage_size is not None:
            self.data_storage_size = data_storage_size
        if used_data_storage_size is not None:
            self.used_data_storage_size = used_data_storage_size
        if create_date is not None:
            self.create_date = create_date
        if uptime is not None:
            self.uptime = uptime

    @property
    def cloud_db_server_instance_no(self):
        """Gets the cloud_db_server_instance_no of this CloudDBServerInstance.  # noqa: E501

        CloudDB서버인스턴스번호  # noqa: E501

        :return: The cloud_db_server_instance_no of this CloudDBServerInstance.  # noqa: E501
        :rtype: str
        """
        return self._cloud_db_server_instance_no

    @cloud_db_server_instance_no.setter
    def cloud_db_server_instance_no(self, cloud_db_server_instance_no):
        """Sets the cloud_db_server_instance_no of this CloudDBServerInstance.

        CloudDB서버인스턴스번호  # noqa: E501

        :param cloud_db_server_instance_no: The cloud_db_server_instance_no of this CloudDBServerInstance.  # noqa: E501
        :type: str
        """

        self._cloud_db_server_instance_no = cloud_db_server_instance_no

    @property
    def cloud_db_server_instance_status_name(self):
        """Gets the cloud_db_server_instance_status_name of this CloudDBServerInstance.  # noqa: E501

        CloudDB서버인스턴스상태이름  # noqa: E501

        :return: The cloud_db_server_instance_status_name of this CloudDBServerInstance.  # noqa: E501
        :rtype: str
        """
        return self._cloud_db_server_instance_status_name

    @cloud_db_server_instance_status_name.setter
    def cloud_db_server_instance_status_name(self, cloud_db_server_instance_status_name):
        """Sets the cloud_db_server_instance_status_name of this CloudDBServerInstance.

        CloudDB서버인스턴스상태이름  # noqa: E501

        :param cloud_db_server_instance_status_name: The cloud_db_server_instance_status_name of this CloudDBServerInstance.  # noqa: E501
        :type: str
        """

        self._cloud_db_server_instance_status_name = cloud_db_server_instance_status_name

    @property
    def cloud_db_server_name(self):
        """Gets the cloud_db_server_name of this CloudDBServerInstance.  # noqa: E501

        CloudDB서버이름  # noqa: E501

        :return: The cloud_db_server_name of this CloudDBServerInstance.  # noqa: E501
        :rtype: str
        """
        return self._cloud_db_server_name

    @cloud_db_server_name.setter
    def cloud_db_server_name(self, cloud_db_server_name):
        """Sets the cloud_db_server_name of this CloudDBServerInstance.

        CloudDB서버이름  # noqa: E501

        :param cloud_db_server_name: The cloud_db_server_name of this CloudDBServerInstance.  # noqa: E501
        :type: str
        """

        self._cloud_db_server_name = cloud_db_server_name

    @property
    def cloud_db_server_role(self):
        """Gets the cloud_db_server_role of this CloudDBServerInstance.  # noqa: E501

        CloudDB서버역할  # noqa: E501

        :return: The cloud_db_server_role of this CloudDBServerInstance.  # noqa: E501
        :rtype: CommonCode
        """
        return self._cloud_db_server_role

    @cloud_db_server_role.setter
    def cloud_db_server_role(self, cloud_db_server_role):
        """Sets the cloud_db_server_role of this CloudDBServerInstance.

        CloudDB서버역할  # noqa: E501

        :param cloud_db_server_role: The cloud_db_server_role of this CloudDBServerInstance.  # noqa: E501
        :type: CommonCode
        """

        self._cloud_db_server_role = cloud_db_server_role

    @property
    def private_dns_name(self):
        """Gets the private_dns_name of this CloudDBServerInstance.  # noqa: E501

        사설DNS이름  # noqa: E501

        :return: The private_dns_name of this CloudDBServerInstance.  # noqa: E501
        :rtype: str
        """
        return self._private_dns_name

    @private_dns_name.setter
    def private_dns_name(self, private_dns_name):
        """Sets the private_dns_name of this CloudDBServerInstance.

        사설DNS이름  # noqa: E501

        :param private_dns_name: The private_dns_name of this CloudDBServerInstance.  # noqa: E501
        :type: str
        """

        self._private_dns_name = private_dns_name

    @property
    def public_dns_name(self):
        """Gets the public_dns_name of this CloudDBServerInstance.  # noqa: E501

        공인DNS이름  # noqa: E501

        :return: The public_dns_name of this CloudDBServerInstance.  # noqa: E501
        :rtype: str
        """
        return self._public_dns_name

    @public_dns_name.setter
    def public_dns_name(self, public_dns_name):
        """Sets the public_dns_name of this CloudDBServerInstance.

        공인DNS이름  # noqa: E501

        :param public_dns_name: The public_dns_name of this CloudDBServerInstance.  # noqa: E501
        :type: str
        """

        self._public_dns_name = public_dns_name

    @property
    def data_storage_size(self):
        """Gets the data_storage_size of this CloudDBServerInstance.  # noqa: E501

        데이터스토리지사이즈  # noqa: E501

        :return: The data_storage_size of this CloudDBServerInstance.  # noqa: E501
        :rtype: int
        """
        return self._data_storage_size

    @data_storage_size.setter
    def data_storage_size(self, data_storage_size):
        """Sets the data_storage_size of this CloudDBServerInstance.

        데이터스토리지사이즈  # noqa: E501

        :param data_storage_size: The data_storage_size of this CloudDBServerInstance.  # noqa: E501
        :type: int
        """

        self._data_storage_size = data_storage_size

    @property
    def used_data_storage_size(self):
        """Gets the used_data_storage_size of this CloudDBServerInstance.  # noqa: E501

        사용데이터스토리지사이즈  # noqa: E501

        :return: The used_data_storage_size of this CloudDBServerInstance.  # noqa: E501
        :rtype: int
        """
        return self._used_data_storage_size

    @used_data_storage_size.setter
    def used_data_storage_size(self, used_data_storage_size):
        """Sets the used_data_storage_size of this CloudDBServerInstance.

        사용데이터스토리지사이즈  # noqa: E501

        :param used_data_storage_size: The used_data_storage_size of this CloudDBServerInstance.  # noqa: E501
        :type: int
        """

        self._used_data_storage_size = used_data_storage_size

    @property
    def create_date(self):
        """Gets the create_date of this CloudDBServerInstance.  # noqa: E501

        생성일시  # noqa: E501

        :return: The create_date of this CloudDBServerInstance.  # noqa: E501
        :rtype: str
        """
        return self._create_date

    @create_date.setter
    def create_date(self, create_date):
        """Sets the create_date of this CloudDBServerInstance.

        생성일시  # noqa: E501

        :param create_date: The create_date of this CloudDBServerInstance.  # noqa: E501
        :type: str
        """

        self._create_date = create_date

    @property
    def uptime(self):
        """Gets the uptime of this CloudDBServerInstance.  # noqa: E501

        구동시간  # noqa: E501

        :return: The uptime of this CloudDBServerInstance.  # noqa: E501
        :rtype: str
        """
        return self._uptime

    @uptime.setter
    def uptime(self, uptime):
        """Sets the uptime of this CloudDBServerInstance.

        구동시간  # noqa: E501

        :param uptime: The uptime of this CloudDBServerInstance.  # noqa: E501
        :type: str
        """

        self._uptime = uptime

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CloudDBServerInstance):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
