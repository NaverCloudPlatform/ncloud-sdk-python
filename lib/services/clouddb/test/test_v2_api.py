# coding: utf-8

"""
    clouddb

    OpenAPI spec version: 2018-06-21T02:28:05Z
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import unittest

import ncloud_clouddb
from ncloud_clouddb.api.v2_api import V2Api  # noqa: E501
from ncloud_clouddb.rest import ApiException


class TestV2Api(unittest.TestCase):
    """V2Api unit test stubs"""

    def setUp(self):
        configuration = ncloud_clouddb.Configuration()
        configuration.access_key = "YOUR ACCESS KEY"
        configuration.secret_key = "YOUR SECRET KEY"
        self.api = ncloud_clouddb.api.v2_api.V2Api(ncloud_clouddb.ApiClient(configuration))  # noqa: E501

    def tearDown(self):
        pass

    def test_create_cloud_db_instance(self):
        """Test case for create_cloud_db_instance
        create_cloud_db_instance_request = ncloud_clouddb.CreateCloudDBInstanceRequest()
        try:
            api_response = self.api.create_cloud_db_instance(create_cloud_db_instance_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->create_cloud_db_instance: %s\n" % e)
        """
        pass

    def test_delete_cloud_db_server_instance(self):
        """Test case for delete_cloud_db_server_instance
        delete_cloud_db_server_instance_request = ncloud_clouddb.DeleteCloudDBServerInstanceRequest()
        try:
            api_response = self.api.delete_cloud_db_server_instance(delete_cloud_db_server_instance_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->delete_cloud_db_server_instance: %s\n" % e)
        """
        pass

    def test_get_cloud_db_config_group_list(self):
        """Test case for get_cloud_db_config_group_list
        get_cloud_db_config_group_list_request = ncloud_clouddb.GetCloudDBConfigGroupListRequest()
        try:
            api_response = self.api.get_cloud_db_config_group_list(get_cloud_db_config_group_list_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_cloud_db_config_group_list: %s\n" % e)
        """
        pass

    def test_get_cloud_db_image_product_list(self):
        """Test case for get_cloud_db_image_product_list
        get_cloud_db_image_product_list_request = ncloud_clouddb.GetCloudDBImageProductListRequest()
        try:
            api_response = self.api.get_cloud_db_image_product_list(get_cloud_db_image_product_list_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_cloud_db_image_product_list: %s\n" % e)
        """
        pass

    def test_get_cloud_db_instance_list(self):
        """Test case for get_cloud_db_instance_list
        get_cloud_db_instance_list_request = ncloud_clouddb.GetCloudDBInstanceListRequest()
        try:
            api_response = self.api.get_cloud_db_instance_list(get_cloud_db_instance_list_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_cloud_db_instance_list: %s\n" % e)
        """
        pass

    def test_get_cloud_db_product_list(self):
        """Test case for get_cloud_db_product_list
        get_cloud_db_product_list_request = ncloud_clouddb.GetCloudDBProductListRequest()
        try:
            api_response = self.api.get_cloud_db_product_list(get_cloud_db_product_list_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_cloud_db_product_list: %s\n" % e)
        """
        pass

    def test_reboot_cloud_db_server_instance(self):
        """Test case for reboot_cloud_db_server_instance
        reboot_cloud_db_server_instance_request = ncloud_clouddb.RebootCloudDBServerInstanceRequest()
        try:
            api_response = self.api.reboot_cloud_db_server_instance(reboot_cloud_db_server_instance_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->reboot_cloud_db_server_instance: %s\n" % e)
        """
        pass


if __name__ == '__main__':
    unittest.main()
