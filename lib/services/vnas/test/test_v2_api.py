# coding: utf-8

"""
    vnas

    OpenAPI spec version: 2020-09-17T02:28:41Z
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import unittest

import ncloud_vnas
from ncloud_vnas.api.v2_api import V2Api  # noqa: E501
from ncloud_vnas.rest import ApiException


class TestV2Api(unittest.TestCase):
    """V2Api unit test stubs"""

    def setUp(self):
        configuration = ncloud_vnas.Configuration()
        configuration.access_key = "YOUR ACCESS KEY"
        configuration.secret_key = "YOUR SECRET KEY"
        self.api = ncloud_vnas.api.v2_api.V2Api(ncloud_vnas.ApiClient(configuration))  # noqa: E501

    def tearDown(self):
        pass

    def test_add_nas_volume_access_control(self):
        """Test case for add_nas_volume_access_control
        add_nas_volume_access_control_request = ncloud_vnas.AddNasVolumeAccessControlRequest()
        try:
            api_response = self.api.add_nas_volume_access_control(add_nas_volume_access_control_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->add_nas_volume_access_control: %s\n" % e)
        """
        pass

    def test_change_nas_volume_size(self):
        """Test case for change_nas_volume_size
        change_nas_volume_size_request = ncloud_vnas.ChangeNasVolumeSizeRequest()
        try:
            api_response = self.api.change_nas_volume_size(change_nas_volume_size_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->change_nas_volume_size: %s\n" % e)
        """
        pass

    def test_create_nas_volume_instance(self):
        """Test case for create_nas_volume_instance
        create_nas_volume_instance_request = ncloud_vnas.CreateNasVolumeInstanceRequest()
        try:
            api_response = self.api.create_nas_volume_instance(create_nas_volume_instance_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->create_nas_volume_instance: %s\n" % e)
        """
        pass

    def test_delete_nas_volume_instances(self):
        """Test case for delete_nas_volume_instances
        delete_nas_volume_instances_request = ncloud_vnas.DeleteNasVolumeInstancesRequest()
        try:
            api_response = self.api.delete_nas_volume_instances(delete_nas_volume_instances_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->delete_nas_volume_instances: %s\n" % e)
        """
        pass

    def test_get_nas_volume_instance_detail(self):
        """Test case for get_nas_volume_instance_detail
        get_nas_volume_instance_detail_request = ncloud_vnas.GetNasVolumeInstanceDetailRequest()
        try:
            api_response = self.api.get_nas_volume_instance_detail(get_nas_volume_instance_detail_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_nas_volume_instance_detail: %s\n" % e)
        """
        pass

    def test_get_nas_volume_instance_list(self):
        """Test case for get_nas_volume_instance_list
        get_nas_volume_instance_list_request = ncloud_vnas.GetNasVolumeInstanceListRequest()
        try:
            api_response = self.api.get_nas_volume_instance_list(get_nas_volume_instance_list_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->get_nas_volume_instance_list: %s\n" % e)
        """
        pass

    def test_remove_nas_volume_access_control(self):
        """Test case for remove_nas_volume_access_control
        remove_nas_volume_access_control_request = ncloud_vnas.RemoveNasVolumeAccessControlRequest()
        try:
            api_response = self.api.remove_nas_volume_access_control(remove_nas_volume_access_control_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->remove_nas_volume_access_control: %s\n" % e)
        """
        pass

    def test_set_nas_volume_access_control(self):
        """Test case for set_nas_volume_access_control
        set_nas_volume_access_control_request = ncloud_vnas.SetNasVolumeAccessControlRequest()
        try:
            api_response = self.api.set_nas_volume_access_control(set_nas_volume_access_control_request)
            print(api_response)
        except ApiException as e:
            print("Exception when calling V2Api->set_nas_volume_access_control: %s\n" % e)
        """
        pass


if __name__ == '__main__':
    unittest.main()
