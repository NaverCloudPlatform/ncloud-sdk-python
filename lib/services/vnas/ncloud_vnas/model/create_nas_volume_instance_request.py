# coding: utf-8

"""
    vnas

    OpenAPI spec version: 2020-09-17T02:28:41Z
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class CreateNasVolumeInstanceRequest(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'region_code': 'str',
        'zone_code': 'str',
        'volume_name': 'str',
        'volume_size': 'int',
        'volume_allotment_protocol_type_code': 'str',
        'server_instance_no_list': 'list[str]',
        'cifs_user_name': 'str',
        'cifs_user_password': 'str',
        'is_encrypted_volume': 'bool',
        'nas_volume_description': 'str'
    }

    attribute_map = {
        'region_code': 'regionCode',
        'zone_code': 'zoneCode',
        'volume_name': 'volumeName',
        'volume_size': 'volumeSize',
        'volume_allotment_protocol_type_code': 'volumeAllotmentProtocolTypeCode',
        'server_instance_no_list': 'serverInstanceNoList',
        'cifs_user_name': 'cifsUserName',
        'cifs_user_password': 'cifsUserPassword',
        'is_encrypted_volume': 'isEncryptedVolume',
        'nas_volume_description': 'nasVolumeDescription'
    }

    def __init__(self, region_code=None, zone_code=None, volume_name=None, volume_size=None, volume_allotment_protocol_type_code=None, server_instance_no_list=None, cifs_user_name=None, cifs_user_password=None, is_encrypted_volume=None, nas_volume_description=None):  # noqa: E501
        """CreateNasVolumeInstanceRequest - a model defined in Swagger"""  # noqa: E501

        self._region_code = None
        self._zone_code = None
        self._volume_name = None
        self._volume_size = None
        self._volume_allotment_protocol_type_code = None
        self._server_instance_no_list = None
        self._cifs_user_name = None
        self._cifs_user_password = None
        self._is_encrypted_volume = None
        self._nas_volume_description = None
        self.discriminator = None

        if region_code is not None:
            self.region_code = region_code
        if zone_code is not None:
            self.zone_code = zone_code
        if volume_name is not None:
            self.volume_name = volume_name
        self.volume_size = volume_size
        self.volume_allotment_protocol_type_code = volume_allotment_protocol_type_code
        if server_instance_no_list is not None:
            self.server_instance_no_list = server_instance_no_list
        if cifs_user_name is not None:
            self.cifs_user_name = cifs_user_name
        if cifs_user_password is not None:
            self.cifs_user_password = cifs_user_password
        if is_encrypted_volume is not None:
            self.is_encrypted_volume = is_encrypted_volume
        if nas_volume_description is not None:
            self.nas_volume_description = nas_volume_description

    @property
    def region_code(self):
        """Gets the region_code of this CreateNasVolumeInstanceRequest.  # noqa: E501

        REGION코드  # noqa: E501

        :return: The region_code of this CreateNasVolumeInstanceRequest.  # noqa: E501
        :rtype: str
        """
        return self._region_code

    @region_code.setter
    def region_code(self, region_code):
        """Sets the region_code of this CreateNasVolumeInstanceRequest.

        REGION코드  # noqa: E501

        :param region_code: The region_code of this CreateNasVolumeInstanceRequest.  # noqa: E501
        :type: str
        """

        self._region_code = region_code

    @property
    def zone_code(self):
        """Gets the zone_code of this CreateNasVolumeInstanceRequest.  # noqa: E501

        ZONE코드  # noqa: E501

        :return: The zone_code of this CreateNasVolumeInstanceRequest.  # noqa: E501
        :rtype: str
        """
        return self._zone_code

    @zone_code.setter
    def zone_code(self, zone_code):
        """Sets the zone_code of this CreateNasVolumeInstanceRequest.

        ZONE코드  # noqa: E501

        :param zone_code: The zone_code of this CreateNasVolumeInstanceRequest.  # noqa: E501
        :type: str
        """

        self._zone_code = zone_code

    @property
    def volume_name(self):
        """Gets the volume_name of this CreateNasVolumeInstanceRequest.  # noqa: E501

        볼륨이름  # noqa: E501

        :return: The volume_name of this CreateNasVolumeInstanceRequest.  # noqa: E501
        :rtype: str
        """
        return self._volume_name

    @volume_name.setter
    def volume_name(self, volume_name):
        """Sets the volume_name of this CreateNasVolumeInstanceRequest.

        볼륨이름  # noqa: E501

        :param volume_name: The volume_name of this CreateNasVolumeInstanceRequest.  # noqa: E501
        :type: str
        """

        self._volume_name = volume_name

    @property
    def volume_size(self):
        """Gets the volume_size of this CreateNasVolumeInstanceRequest.  # noqa: E501

        볼륨사이즈  # noqa: E501

        :return: The volume_size of this CreateNasVolumeInstanceRequest.  # noqa: E501
        :rtype: int
        """
        return self._volume_size

    @volume_size.setter
    def volume_size(self, volume_size):
        """Sets the volume_size of this CreateNasVolumeInstanceRequest.

        볼륨사이즈  # noqa: E501

        :param volume_size: The volume_size of this CreateNasVolumeInstanceRequest.  # noqa: E501
        :type: int
        """
        if volume_size is None:
            raise ValueError("Invalid value for `volume_size`, must not be `None`")  # noqa: E501

        self._volume_size = volume_size

    @property
    def volume_allotment_protocol_type_code(self):
        """Gets the volume_allotment_protocol_type_code of this CreateNasVolumeInstanceRequest.  # noqa: E501

        볼륨할당프로토콜유형코드  # noqa: E501

        :return: The volume_allotment_protocol_type_code of this CreateNasVolumeInstanceRequest.  # noqa: E501
        :rtype: str
        """
        return self._volume_allotment_protocol_type_code

    @volume_allotment_protocol_type_code.setter
    def volume_allotment_protocol_type_code(self, volume_allotment_protocol_type_code):
        """Sets the volume_allotment_protocol_type_code of this CreateNasVolumeInstanceRequest.

        볼륨할당프로토콜유형코드  # noqa: E501

        :param volume_allotment_protocol_type_code: The volume_allotment_protocol_type_code of this CreateNasVolumeInstanceRequest.  # noqa: E501
        :type: str
        """
        if volume_allotment_protocol_type_code is None:
            raise ValueError("Invalid value for `volume_allotment_protocol_type_code`, must not be `None`")  # noqa: E501

        self._volume_allotment_protocol_type_code = volume_allotment_protocol_type_code

    @property
    def server_instance_no_list(self):
        """Gets the server_instance_no_list of this CreateNasVolumeInstanceRequest.  # noqa: E501

        서버인스턴스번호리스트  # noqa: E501

        :return: The server_instance_no_list of this CreateNasVolumeInstanceRequest.  # noqa: E501
        :rtype: list[str]
        """
        return self._server_instance_no_list

    @server_instance_no_list.setter
    def server_instance_no_list(self, server_instance_no_list):
        """Sets the server_instance_no_list of this CreateNasVolumeInstanceRequest.

        서버인스턴스번호리스트  # noqa: E501

        :param server_instance_no_list: The server_instance_no_list of this CreateNasVolumeInstanceRequest.  # noqa: E501
        :type: list[str]
        """

        self._server_instance_no_list = server_instance_no_list

    @property
    def cifs_user_name(self):
        """Gets the cifs_user_name of this CreateNasVolumeInstanceRequest.  # noqa: E501

        CIFS유저이름  # noqa: E501

        :return: The cifs_user_name of this CreateNasVolumeInstanceRequest.  # noqa: E501
        :rtype: str
        """
        return self._cifs_user_name

    @cifs_user_name.setter
    def cifs_user_name(self, cifs_user_name):
        """Sets the cifs_user_name of this CreateNasVolumeInstanceRequest.

        CIFS유저이름  # noqa: E501

        :param cifs_user_name: The cifs_user_name of this CreateNasVolumeInstanceRequest.  # noqa: E501
        :type: str
        """

        self._cifs_user_name = cifs_user_name

    @property
    def cifs_user_password(self):
        """Gets the cifs_user_password of this CreateNasVolumeInstanceRequest.  # noqa: E501

        CIFS유저비밀번호  # noqa: E501

        :return: The cifs_user_password of this CreateNasVolumeInstanceRequest.  # noqa: E501
        :rtype: str
        """
        return self._cifs_user_password

    @cifs_user_password.setter
    def cifs_user_password(self, cifs_user_password):
        """Sets the cifs_user_password of this CreateNasVolumeInstanceRequest.

        CIFS유저비밀번호  # noqa: E501

        :param cifs_user_password: The cifs_user_password of this CreateNasVolumeInstanceRequest.  # noqa: E501
        :type: str
        """

        self._cifs_user_password = cifs_user_password

    @property
    def is_encrypted_volume(self):
        """Gets the is_encrypted_volume of this CreateNasVolumeInstanceRequest.  # noqa: E501

        볼륨암호화여부  # noqa: E501

        :return: The is_encrypted_volume of this CreateNasVolumeInstanceRequest.  # noqa: E501
        :rtype: bool
        """
        return self._is_encrypted_volume

    @is_encrypted_volume.setter
    def is_encrypted_volume(self, is_encrypted_volume):
        """Sets the is_encrypted_volume of this CreateNasVolumeInstanceRequest.

        볼륨암호화여부  # noqa: E501

        :param is_encrypted_volume: The is_encrypted_volume of this CreateNasVolumeInstanceRequest.  # noqa: E501
        :type: bool
        """

        self._is_encrypted_volume = is_encrypted_volume

    @property
    def nas_volume_description(self):
        """Gets the nas_volume_description of this CreateNasVolumeInstanceRequest.  # noqa: E501

        NAS볼륨설명  # noqa: E501

        :return: The nas_volume_description of this CreateNasVolumeInstanceRequest.  # noqa: E501
        :rtype: str
        """
        return self._nas_volume_description

    @nas_volume_description.setter
    def nas_volume_description(self, nas_volume_description):
        """Sets the nas_volume_description of this CreateNasVolumeInstanceRequest.

        NAS볼륨설명  # noqa: E501

        :param nas_volume_description: The nas_volume_description of this CreateNasVolumeInstanceRequest.  # noqa: E501
        :type: str
        """

        self._nas_volume_description = nas_volume_description

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CreateNasVolumeInstanceRequest):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
